'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.propEnhancers = exports.propValidators = exports.propAliases = exports.propTypes = undefined;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _getCss = require('../get-css');

var _getCss2 = _interopRequireDefault(_getCss);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = exports.propTypes = {
  cursor: _propTypes2.default.string,
  pointerEvents: _propTypes2.default.string,
  userSelect: _propTypes2.default.string,
  visibility: _propTypes2.default.string
};

var propAliases = exports.propAliases = {};

var propValidators = exports.propValidators = {};

var _cursor = {
  className: 'crsr',
  cssName: 'cursor',
  jsName: 'cursor'
};
var _userSelect = {
  className: 'usr-slct',
  cssName: 'user-select',
  jsName: 'userSelect',
  safeValue: true,
  isPrefixed: true
};
var _visibility = {
  className: 'vsblt',
  cssName: 'visibility',
  jsName: 'visibility',
  safeValue: true
};
var _pointerEvents = {
  className: 'ptr-evts',
  cssName: 'pointer-events',
  jsName: 'pointerEvents',
  safeValue: true
};

var propEnhancers = exports.propEnhancers = {
  cursor: function cursor(value) {
    return (0, _getCss2.default)(_cursor, value);
  },
  pointerEvents: function pointerEvents(value) {
    return (0, _getCss2.default)(_pointerEvents, value);
  },
  userSelect: function userSelect(value) {
    return (0, _getCss2.default)(_userSelect, value);
  },
  visibility: function visibility(value) {
    return (0, _getCss2.default)(_visibility, value);
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lbmhhbmNlcnMvaW50ZXJhY3Rpb24uanMiXSwibmFtZXMiOlsicHJvcFR5cGVzIiwiY3Vyc29yIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwicG9pbnRlckV2ZW50cyIsInVzZXJTZWxlY3QiLCJ2aXNpYmlsaXR5IiwicHJvcEFsaWFzZXMiLCJwcm9wVmFsaWRhdG9ycyIsImNsYXNzTmFtZSIsImNzc05hbWUiLCJqc05hbWUiLCJzYWZlVmFsdWUiLCJpc1ByZWZpeGVkIiwicHJvcEVuaGFuY2VycyIsInZhbHVlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7O0FBRU8sSUFBTUEsZ0NBQVk7QUFDdkJDLFVBQVFDLG9CQUFVQyxNQURLO0FBRXZCQyxpQkFBZUYsb0JBQVVDLE1BRkY7QUFHdkJFLGNBQVlILG9CQUFVQyxNQUhDO0FBSXZCRyxjQUFZSixvQkFBVUM7QUFKQyxDQUFsQjs7QUFPQSxJQUFNSSxvQ0FBYyxFQUFwQjs7QUFFQSxJQUFNQywwQ0FBaUIsRUFBdkI7O0FBRVAsSUFBTVAsVUFBUztBQUNiUSxhQUFXLE1BREU7QUFFYkMsV0FBUyxRQUZJO0FBR2JDLFVBQVE7QUFISyxDQUFmO0FBS0EsSUFBTU4sY0FBYTtBQUNqQkksYUFBVyxVQURNO0FBRWpCQyxXQUFTLGFBRlE7QUFHakJDLFVBQVEsWUFIUztBQUlqQkMsYUFBVyxJQUpNO0FBS2pCQyxjQUFZO0FBTEssQ0FBbkI7QUFPQSxJQUFNUCxjQUFhO0FBQ2pCRyxhQUFXLE9BRE07QUFFakJDLFdBQVMsWUFGUTtBQUdqQkMsVUFBUSxZQUhTO0FBSWpCQyxhQUFXO0FBSk0sQ0FBbkI7QUFNQSxJQUFNUixpQkFBZ0I7QUFDcEJLLGFBQVcsVUFEUztBQUVwQkMsV0FBUyxnQkFGVztBQUdwQkMsVUFBUSxlQUhZO0FBSXBCQyxhQUFXO0FBSlMsQ0FBdEI7O0FBT08sSUFBTUUsd0NBQWdCO0FBQzNCYixVQUFRO0FBQUEsV0FBUyxzQkFBT0EsT0FBUCxFQUFlYyxLQUFmLENBQVQ7QUFBQSxHQURtQjtBQUUzQlgsaUJBQWU7QUFBQSxXQUFTLHNCQUFPQSxjQUFQLEVBQXNCVyxLQUF0QixDQUFUO0FBQUEsR0FGWTtBQUczQlYsY0FBWTtBQUFBLFdBQVMsc0JBQU9BLFdBQVAsRUFBbUJVLEtBQW5CLENBQVQ7QUFBQSxHQUhlO0FBSTNCVCxjQUFZO0FBQUEsV0FBUyxzQkFBT0EsV0FBUCxFQUFtQlMsS0FBbkIsQ0FBVDtBQUFBO0FBSmUsQ0FBdEIiLCJmaWxlIjoiaW50ZXJhY3Rpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgZ2V0Q3NzIGZyb20gJy4uL2dldC1jc3MnXG5cbmV4cG9ydCBjb25zdCBwcm9wVHlwZXMgPSB7XG4gIGN1cnNvcjogUHJvcFR5cGVzLnN0cmluZyxcbiAgcG9pbnRlckV2ZW50czogUHJvcFR5cGVzLnN0cmluZyxcbiAgdXNlclNlbGVjdDogUHJvcFR5cGVzLnN0cmluZyxcbiAgdmlzaWJpbGl0eTogUHJvcFR5cGVzLnN0cmluZyxcbn1cblxuZXhwb3J0IGNvbnN0IHByb3BBbGlhc2VzID0ge31cblxuZXhwb3J0IGNvbnN0IHByb3BWYWxpZGF0b3JzID0ge31cblxuY29uc3QgY3Vyc29yID0ge1xuICBjbGFzc05hbWU6ICdjcnNyJyxcbiAgY3NzTmFtZTogJ2N1cnNvcicsXG4gIGpzTmFtZTogJ2N1cnNvcicsXG59XG5jb25zdCB1c2VyU2VsZWN0ID0ge1xuICBjbGFzc05hbWU6ICd1c3Itc2xjdCcsXG4gIGNzc05hbWU6ICd1c2VyLXNlbGVjdCcsXG4gIGpzTmFtZTogJ3VzZXJTZWxlY3QnLFxuICBzYWZlVmFsdWU6IHRydWUsXG4gIGlzUHJlZml4ZWQ6IHRydWUsXG59XG5jb25zdCB2aXNpYmlsaXR5ID0ge1xuICBjbGFzc05hbWU6ICd2c2JsdCcsXG4gIGNzc05hbWU6ICd2aXNpYmlsaXR5JyxcbiAganNOYW1lOiAndmlzaWJpbGl0eScsXG4gIHNhZmVWYWx1ZTogdHJ1ZSxcbn1cbmNvbnN0IHBvaW50ZXJFdmVudHMgPSB7XG4gIGNsYXNzTmFtZTogJ3B0ci1ldnRzJyxcbiAgY3NzTmFtZTogJ3BvaW50ZXItZXZlbnRzJyxcbiAganNOYW1lOiAncG9pbnRlckV2ZW50cycsXG4gIHNhZmVWYWx1ZTogdHJ1ZSxcbn1cblxuZXhwb3J0IGNvbnN0IHByb3BFbmhhbmNlcnMgPSB7XG4gIGN1cnNvcjogdmFsdWUgPT4gZ2V0Q3NzKGN1cnNvciwgdmFsdWUpLFxuICBwb2ludGVyRXZlbnRzOiB2YWx1ZSA9PiBnZXRDc3MocG9pbnRlckV2ZW50cywgdmFsdWUpLFxuICB1c2VyU2VsZWN0OiB2YWx1ZSA9PiBnZXRDc3ModXNlclNlbGVjdCwgdmFsdWUpLFxuICB2aXNpYmlsaXR5OiB2YWx1ZSA9PiBnZXRDc3ModmlzaWJpbGl0eSwgdmFsdWUpLFxufVxuIl19