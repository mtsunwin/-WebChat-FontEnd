'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.propEnhancers = exports.propValidators = exports.propAliases = exports.propTypes = undefined;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _getCss = require('../get-css');

var _getCss2 = _interopRequireDefault(_getCss);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = exports.propTypes = {
  height: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  maxHeight: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  maxWidth: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  minHeight: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  minWidth: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
};

var propAliases = exports.propAliases = {};

var propValidators = exports.propValidators = {};

var _width = {
  className: 'w',
  cssName: 'width',
  jsName: 'width'
};
var _height = {
  className: 'h',
  cssName: 'height',
  jsName: 'height'
};
var _minWidth = {
  className: 'min-w',
  cssName: 'min-width',
  jsName: 'minWidth'
};
var _minHeight = {
  className: 'min-h',
  cssName: 'min-height',
  jsName: 'minHeight'
};
var _maxWidth = {
  className: 'max-w',
  cssName: 'max-width',
  jsName: 'maxWidth'
};
var _maxHeight = {
  className: 'max-h',
  cssName: 'max-height',
  jsName: 'maxHeight'
};

var propEnhancers = exports.propEnhancers = {
  height: function height(value) {
    return (0, _getCss2.default)(_height, value);
  },
  maxHeight: function maxHeight(value) {
    return (0, _getCss2.default)(_maxHeight, value);
  },
  maxWidth: function maxWidth(value) {
    return (0, _getCss2.default)(_maxWidth, value);
  },
  minHeight: function minHeight(value) {
    return (0, _getCss2.default)(_minHeight, value);
  },
  minWidth: function minWidth(value) {
    return (0, _getCss2.default)(_minWidth, value);
  },
  width: function width(value) {
    return (0, _getCss2.default)(_width, value);
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lbmhhbmNlcnMvZGltZW5zaW9ucy5qcyJdLCJuYW1lcyI6WyJwcm9wVHlwZXMiLCJoZWlnaHQiLCJQcm9wVHlwZXMiLCJvbmVPZlR5cGUiLCJzdHJpbmciLCJudW1iZXIiLCJtYXhIZWlnaHQiLCJtYXhXaWR0aCIsIm1pbkhlaWdodCIsIm1pbldpZHRoIiwid2lkdGgiLCJwcm9wQWxpYXNlcyIsInByb3BWYWxpZGF0b3JzIiwiY2xhc3NOYW1lIiwiY3NzTmFtZSIsImpzTmFtZSIsInByb3BFbmhhbmNlcnMiLCJ2YWx1ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7OztBQUVPLElBQU1BLGdDQUFZO0FBQ3ZCQyxVQUFRQyxvQkFBVUMsU0FBVixDQUFvQixDQUFDRCxvQkFBVUUsTUFBWCxFQUFtQkYsb0JBQVVHLE1BQTdCLENBQXBCLENBRGU7QUFFdkJDLGFBQVdKLG9CQUFVQyxTQUFWLENBQW9CLENBQUNELG9CQUFVRSxNQUFYLEVBQW1CRixvQkFBVUcsTUFBN0IsQ0FBcEIsQ0FGWTtBQUd2QkUsWUFBVUwsb0JBQVVDLFNBQVYsQ0FBb0IsQ0FBQ0Qsb0JBQVVFLE1BQVgsRUFBbUJGLG9CQUFVRyxNQUE3QixDQUFwQixDQUhhO0FBSXZCRyxhQUFXTixvQkFBVUMsU0FBVixDQUFvQixDQUFDRCxvQkFBVUUsTUFBWCxFQUFtQkYsb0JBQVVHLE1BQTdCLENBQXBCLENBSlk7QUFLdkJJLFlBQVVQLG9CQUFVQyxTQUFWLENBQW9CLENBQUNELG9CQUFVRSxNQUFYLEVBQW1CRixvQkFBVUcsTUFBN0IsQ0FBcEIsQ0FMYTtBQU12QkssU0FBT1Isb0JBQVVDLFNBQVYsQ0FBb0IsQ0FBQ0Qsb0JBQVVFLE1BQVgsRUFBbUJGLG9CQUFVRyxNQUE3QixDQUFwQjtBQU5nQixDQUFsQjs7QUFTQSxJQUFNTSxvQ0FBYyxFQUFwQjs7QUFFQSxJQUFNQywwQ0FBaUIsRUFBdkI7O0FBRVAsSUFBTUYsU0FBUTtBQUNaRyxhQUFXLEdBREM7QUFFWkMsV0FBUyxPQUZHO0FBR1pDLFVBQVE7QUFISSxDQUFkO0FBS0EsSUFBTWQsVUFBUztBQUNiWSxhQUFXLEdBREU7QUFFYkMsV0FBUyxRQUZJO0FBR2JDLFVBQVE7QUFISyxDQUFmO0FBS0EsSUFBTU4sWUFBVztBQUNmSSxhQUFXLE9BREk7QUFFZkMsV0FBUyxXQUZNO0FBR2ZDLFVBQVE7QUFITyxDQUFqQjtBQUtBLElBQU1QLGFBQVk7QUFDaEJLLGFBQVcsT0FESztBQUVoQkMsV0FBUyxZQUZPO0FBR2hCQyxVQUFRO0FBSFEsQ0FBbEI7QUFLQSxJQUFNUixZQUFXO0FBQ2ZNLGFBQVcsT0FESTtBQUVmQyxXQUFTLFdBRk07QUFHZkMsVUFBUTtBQUhPLENBQWpCO0FBS0EsSUFBTVQsYUFBWTtBQUNoQk8sYUFBVyxPQURLO0FBRWhCQyxXQUFTLFlBRk87QUFHaEJDLFVBQVE7QUFIUSxDQUFsQjs7QUFNTyxJQUFNQyx3Q0FBZ0I7QUFDM0JmLFVBQVE7QUFBQSxXQUFTLHNCQUFPQSxPQUFQLEVBQWVnQixLQUFmLENBQVQ7QUFBQSxHQURtQjtBQUUzQlgsYUFBVztBQUFBLFdBQVMsc0JBQU9BLFVBQVAsRUFBa0JXLEtBQWxCLENBQVQ7QUFBQSxHQUZnQjtBQUczQlYsWUFBVTtBQUFBLFdBQVMsc0JBQU9BLFNBQVAsRUFBaUJVLEtBQWpCLENBQVQ7QUFBQSxHQUhpQjtBQUkzQlQsYUFBVztBQUFBLFdBQVMsc0JBQU9BLFVBQVAsRUFBa0JTLEtBQWxCLENBQVQ7QUFBQSxHQUpnQjtBQUszQlIsWUFBVTtBQUFBLFdBQVMsc0JBQU9BLFNBQVAsRUFBaUJRLEtBQWpCLENBQVQ7QUFBQSxHQUxpQjtBQU0zQlAsU0FBTztBQUFBLFdBQVMsc0JBQU9BLE1BQVAsRUFBY08sS0FBZCxDQUFUO0FBQUE7QUFOb0IsQ0FBdEIiLCJmaWxlIjoiZGltZW5zaW9ucy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBnZXRDc3MgZnJvbSAnLi4vZ2V0LWNzcydcblxuZXhwb3J0IGNvbnN0IHByb3BUeXBlcyA9IHtcbiAgaGVpZ2h0OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMubnVtYmVyXSksXG4gIG1heEhlaWdodDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm51bWJlcl0pLFxuICBtYXhXaWR0aDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm51bWJlcl0pLFxuICBtaW5IZWlnaHQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXJdKSxcbiAgbWluV2lkdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXJdKSxcbiAgd2lkdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXJdKSxcbn1cblxuZXhwb3J0IGNvbnN0IHByb3BBbGlhc2VzID0ge31cblxuZXhwb3J0IGNvbnN0IHByb3BWYWxpZGF0b3JzID0ge31cblxuY29uc3Qgd2lkdGggPSB7XG4gIGNsYXNzTmFtZTogJ3cnLFxuICBjc3NOYW1lOiAnd2lkdGgnLFxuICBqc05hbWU6ICd3aWR0aCcsXG59XG5jb25zdCBoZWlnaHQgPSB7XG4gIGNsYXNzTmFtZTogJ2gnLFxuICBjc3NOYW1lOiAnaGVpZ2h0JyxcbiAganNOYW1lOiAnaGVpZ2h0Jyxcbn1cbmNvbnN0IG1pbldpZHRoID0ge1xuICBjbGFzc05hbWU6ICdtaW4tdycsXG4gIGNzc05hbWU6ICdtaW4td2lkdGgnLFxuICBqc05hbWU6ICdtaW5XaWR0aCcsXG59XG5jb25zdCBtaW5IZWlnaHQgPSB7XG4gIGNsYXNzTmFtZTogJ21pbi1oJyxcbiAgY3NzTmFtZTogJ21pbi1oZWlnaHQnLFxuICBqc05hbWU6ICdtaW5IZWlnaHQnLFxufVxuY29uc3QgbWF4V2lkdGggPSB7XG4gIGNsYXNzTmFtZTogJ21heC13JyxcbiAgY3NzTmFtZTogJ21heC13aWR0aCcsXG4gIGpzTmFtZTogJ21heFdpZHRoJyxcbn1cbmNvbnN0IG1heEhlaWdodCA9IHtcbiAgY2xhc3NOYW1lOiAnbWF4LWgnLFxuICBjc3NOYW1lOiAnbWF4LWhlaWdodCcsXG4gIGpzTmFtZTogJ21heEhlaWdodCcsXG59XG5cbmV4cG9ydCBjb25zdCBwcm9wRW5oYW5jZXJzID0ge1xuICBoZWlnaHQ6IHZhbHVlID0+IGdldENzcyhoZWlnaHQsIHZhbHVlKSxcbiAgbWF4SGVpZ2h0OiB2YWx1ZSA9PiBnZXRDc3MobWF4SGVpZ2h0LCB2YWx1ZSksXG4gIG1heFdpZHRoOiB2YWx1ZSA9PiBnZXRDc3MobWF4V2lkdGgsIHZhbHVlKSxcbiAgbWluSGVpZ2h0OiB2YWx1ZSA9PiBnZXRDc3MobWluSGVpZ2h0LCB2YWx1ZSksXG4gIG1pbldpZHRoOiB2YWx1ZSA9PiBnZXRDc3MobWluV2lkdGgsIHZhbHVlKSxcbiAgd2lkdGg6IHZhbHVlID0+IGdldENzcyh3aWR0aCwgdmFsdWUpLFxufVxuIl19