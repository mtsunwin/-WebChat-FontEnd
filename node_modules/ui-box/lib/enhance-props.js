'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

exports.default = enhanceProps;

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _enhancers = require('./enhancers');

var _expandAliases = require('./expand-aliases');

var _expandAliases2 = _interopRequireDefault(_expandAliases);

var _styles = require('./styles');

var styles = _interopRequireWildcard(_styles);

var _cache = require('./cache');

var cache = _interopRequireWildcard(_cache);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Converts the CSS props to class names and inserts the styles.
 */
function enhanceProps(rawProps) {
  var propsMap = (0, _expandAliases2.default)(rawProps);
  var enhancedProps = {};
  var className = rawProps.className || '';

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = propsMap[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var _ref = _step.value;

      var _ref2 = _slicedToArray(_ref, 2);

      var propName = _ref2[0];
      var propValue = _ref2[1];

      var cachedClassName = cache.get(propName, propValue);
      if (cachedClassName) {
        className = (0, _classnames2.default)(className, cachedClassName);
        continue;
      }

      var enhancer = _enhancers.propEnhancers[propName];
      // Skip false boolean enhancers. e.g: `clearfix={false}`
      // Also allows omitting props via overriding with `null` (i.e: neutralising props)
      if (enhancer && (propValue === null || propValue === undefined || propValue === false)) {
        continue;
      } else if (!enhancer) {
        // Pass through native props. e.g: disabled, value, type
        enhancedProps[propName] = propValue;
        continue;
      }

      var newCss = enhancer(propValue);
      // Allow enhancers to return null for invalid values
      if (newCss) {
        styles.add(newCss.styles);
        cache.set(propName, propValue, newCss.className);
        className = (0, _classnames2.default)(className, newCss.className);
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return [className, enhancedProps];
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9lbmhhbmNlLXByb3BzLmpzIl0sIm5hbWVzIjpbImVuaGFuY2VQcm9wcyIsInN0eWxlcyIsImNhY2hlIiwicmF3UHJvcHMiLCJwcm9wc01hcCIsImVuaGFuY2VkUHJvcHMiLCJjbGFzc05hbWUiLCJwcm9wTmFtZSIsInByb3BWYWx1ZSIsImNhY2hlZENsYXNzTmFtZSIsImdldCIsImVuaGFuY2VyIiwicHJvcEVuaGFuY2VycyIsInVuZGVmaW5lZCIsIm5ld0NzcyIsImFkZCIsInNldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7a0JBU3dCQSxZOztBQVR4Qjs7OztBQUNBOztBQUNBOzs7O0FBQ0E7O0lBQVlDLE07O0FBQ1o7O0lBQVlDLEs7Ozs7OztBQUVaOzs7QUFHZSxTQUFTRixZQUFULENBQXNCRyxRQUF0QixFQUFnQztBQUM3QyxNQUFNQyxXQUFXLDZCQUFjRCxRQUFkLENBQWpCO0FBQ0EsTUFBTUUsZ0JBQWdCLEVBQXRCO0FBQ0EsTUFBSUMsWUFBWUgsU0FBU0csU0FBVCxJQUFzQixFQUF0Qzs7QUFINkM7QUFBQTtBQUFBOztBQUFBO0FBSzdDLHlCQUFvQ0YsUUFBcEMsOEhBQThDO0FBQUE7O0FBQUE7O0FBQUEsVUFBbENHLFFBQWtDO0FBQUEsVUFBeEJDLFNBQXdCOztBQUM1QyxVQUFNQyxrQkFBa0JQLE1BQU1RLEdBQU4sQ0FBVUgsUUFBVixFQUFvQkMsU0FBcEIsQ0FBeEI7QUFDQSxVQUFJQyxlQUFKLEVBQXFCO0FBQ25CSCxvQkFBWSwwQkFBR0EsU0FBSCxFQUFjRyxlQUFkLENBQVo7QUFDQTtBQUNEOztBQUVELFVBQU1FLFdBQVdDLHlCQUFjTCxRQUFkLENBQWpCO0FBQ0E7QUFDQTtBQUNBLFVBQ0VJLGFBQ0NILGNBQWMsSUFBZCxJQUFzQkEsY0FBY0ssU0FBcEMsSUFBaURMLGNBQWMsS0FEaEUsQ0FERixFQUdFO0FBQ0E7QUFDRCxPQUxELE1BS08sSUFBSSxDQUFDRyxRQUFMLEVBQWU7QUFDcEI7QUFDQU4sc0JBQWNFLFFBQWQsSUFBMEJDLFNBQTFCO0FBQ0E7QUFDRDs7QUFFRCxVQUFNTSxTQUFTSCxTQUFTSCxTQUFULENBQWY7QUFDQTtBQUNBLFVBQUlNLE1BQUosRUFBWTtBQUNWYixlQUFPYyxHQUFQLENBQVdELE9BQU9iLE1BQWxCO0FBQ0FDLGNBQU1jLEdBQU4sQ0FBVVQsUUFBVixFQUFvQkMsU0FBcEIsRUFBK0JNLE9BQU9SLFNBQXRDO0FBQ0FBLG9CQUFZLDBCQUFHQSxTQUFILEVBQWNRLE9BQU9SLFNBQXJCLENBQVo7QUFDRDtBQUNGO0FBakM0QztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQW1DN0MsU0FBTyxDQUFDQSxTQUFELEVBQVlELGFBQVosQ0FBUDtBQUNEIiwiZmlsZSI6ImVuaGFuY2UtcHJvcHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3ggZnJvbSAnY2xhc3NuYW1lcydcbmltcG9ydCB7cHJvcEVuaGFuY2Vyc30gZnJvbSAnLi9lbmhhbmNlcnMnXG5pbXBvcnQgZXhwYW5kQWxpYXNlcyBmcm9tICcuL2V4cGFuZC1hbGlhc2VzJ1xuaW1wb3J0ICogYXMgc3R5bGVzIGZyb20gJy4vc3R5bGVzJ1xuaW1wb3J0ICogYXMgY2FjaGUgZnJvbSAnLi9jYWNoZSdcblxuLyoqXG4gKiBDb252ZXJ0cyB0aGUgQ1NTIHByb3BzIHRvIGNsYXNzIG5hbWVzIGFuZCBpbnNlcnRzIHRoZSBzdHlsZXMuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGVuaGFuY2VQcm9wcyhyYXdQcm9wcykge1xuICBjb25zdCBwcm9wc01hcCA9IGV4cGFuZEFsaWFzZXMocmF3UHJvcHMpXG4gIGNvbnN0IGVuaGFuY2VkUHJvcHMgPSB7fVxuICBsZXQgY2xhc3NOYW1lID0gcmF3UHJvcHMuY2xhc3NOYW1lIHx8ICcnXG5cbiAgZm9yIChjb25zdCBbcHJvcE5hbWUsIHByb3BWYWx1ZV0gb2YgcHJvcHNNYXApIHtcbiAgICBjb25zdCBjYWNoZWRDbGFzc05hbWUgPSBjYWNoZS5nZXQocHJvcE5hbWUsIHByb3BWYWx1ZSlcbiAgICBpZiAoY2FjaGVkQ2xhc3NOYW1lKSB7XG4gICAgICBjbGFzc05hbWUgPSBjeChjbGFzc05hbWUsIGNhY2hlZENsYXNzTmFtZSlcbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgY29uc3QgZW5oYW5jZXIgPSBwcm9wRW5oYW5jZXJzW3Byb3BOYW1lXVxuICAgIC8vIFNraXAgZmFsc2UgYm9vbGVhbiBlbmhhbmNlcnMuIGUuZzogYGNsZWFyZml4PXtmYWxzZX1gXG4gICAgLy8gQWxzbyBhbGxvd3Mgb21pdHRpbmcgcHJvcHMgdmlhIG92ZXJyaWRpbmcgd2l0aCBgbnVsbGAgKGkuZTogbmV1dHJhbGlzaW5nIHByb3BzKVxuICAgIGlmIChcbiAgICAgIGVuaGFuY2VyICYmXG4gICAgICAocHJvcFZhbHVlID09PSBudWxsIHx8IHByb3BWYWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHByb3BWYWx1ZSA9PT0gZmFsc2UpXG4gICAgKSB7XG4gICAgICBjb250aW51ZVxuICAgIH0gZWxzZSBpZiAoIWVuaGFuY2VyKSB7XG4gICAgICAvLyBQYXNzIHRocm91Z2ggbmF0aXZlIHByb3BzLiBlLmc6IGRpc2FibGVkLCB2YWx1ZSwgdHlwZVxuICAgICAgZW5oYW5jZWRQcm9wc1twcm9wTmFtZV0gPSBwcm9wVmFsdWVcbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgY29uc3QgbmV3Q3NzID0gZW5oYW5jZXIocHJvcFZhbHVlKVxuICAgIC8vIEFsbG93IGVuaGFuY2VycyB0byByZXR1cm4gbnVsbCBmb3IgaW52YWxpZCB2YWx1ZXNcbiAgICBpZiAobmV3Q3NzKSB7XG4gICAgICBzdHlsZXMuYWRkKG5ld0Nzcy5zdHlsZXMpXG4gICAgICBjYWNoZS5zZXQocHJvcE5hbWUsIHByb3BWYWx1ZSwgbmV3Q3NzLmNsYXNzTmFtZSlcbiAgICAgIGNsYXNzTmFtZSA9IGN4KGNsYXNzTmFtZSwgbmV3Q3NzLmNsYXNzTmFtZSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gW2NsYXNzTmFtZSwgZW5oYW5jZWRQcm9wc11cbn1cbiJdfQ==