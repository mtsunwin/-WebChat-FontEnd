var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

import React from 'react';
import ReactDOM from 'react-dom';
import ToastManager from './ToastManager';

var ID = 'evergreen-toaster';
var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';

/**
 * The Toaster manages the interactionsb between
 * the ToasterManger and the toast API.
 */

var Toaster = function Toaster() {
  var _this = this;

  _classCallCheck(this, Toaster);

  this._bindNotify = function (handler) {
    _this.notifyHandler = handler;
  };

  this._bindGetToasts = function (handler) {
    _this.getToastsHandler = handler;
  };

  this._bindCloseAll = function (handler) {
    _this.closeAllHandler = handler;
  };

  this.getToasts = function () {
    return _this.getToastsHandler();
  };

  this.closeAll = function () {
    return _this.closeAllHandler();
  };

  this.notify = function (title) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    return _this.notifyHandler(title, _extends({}, settings, { type: 'default' }));
  };

  this.success = function (title) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    return _this.notifyHandler(title, _extends({}, settings, { type: 'success' }));
  };

  this.warning = function (title) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    return _this.notifyHandler(title, _extends({}, settings, { type: 'warning' }));
  };

  this.danger = function (title) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    return _this.notifyHandler(title, _extends({}, settings, { type: 'danger' }));
  };

  this.info = function (title) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    return _this.notifyHandler(title, _extends({}, settings, { type: 'info' }));
  };

  if (!isBrowser) return;
  var container = void 0;

  var element = document.getElementById(ID);
  if (element) {
    container = element;
  } else {
    // Create container if not exists yet.
    container = document.createElement('div');
    container.id = ID;
    document.body.appendChild(container);
  }

  ReactDOM.render(React.createElement(ToastManager, {
    bindNotify: this._bindNotify,
    bindGetToasts: this._bindGetToasts,
    bindCloseAll: this._bindCloseAll
  }), container);
};

export default Toaster;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90b2FzdGVyL3NyYy9Ub2FzdGVyLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwiUmVhY3RET00iLCJUb2FzdE1hbmFnZXIiLCJJRCIsImlzQnJvd3NlciIsIndpbmRvdyIsImRvY3VtZW50IiwiVG9hc3RlciIsIl9iaW5kTm90aWZ5Iiwibm90aWZ5SGFuZGxlciIsImhhbmRsZXIiLCJfYmluZEdldFRvYXN0cyIsImdldFRvYXN0c0hhbmRsZXIiLCJfYmluZENsb3NlQWxsIiwiY2xvc2VBbGxIYW5kbGVyIiwiZ2V0VG9hc3RzIiwiY2xvc2VBbGwiLCJub3RpZnkiLCJ0aXRsZSIsInNldHRpbmdzIiwidHlwZSIsInN1Y2Nlc3MiLCJ3YXJuaW5nIiwiZGFuZ2VyIiwiaW5mbyIsImNvbnRhaW5lciIsImVsZW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImNyZWF0ZUVsZW1lbnQiLCJpZCIsImJvZHkiLCJhcHBlbmRDaGlsZCIsInJlbmRlciJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU9BLEtBQVAsTUFBa0IsT0FBbEI7QUFDQSxPQUFPQyxRQUFQLE1BQXFCLFdBQXJCO0FBQ0EsT0FBT0MsWUFBUCxNQUF5QixnQkFBekI7O0FBRUEsSUFBTUMsS0FBSyxtQkFBWDtBQUNBLElBQU1DLFlBQ0osT0FBT0MsTUFBUCxLQUFrQixXQUFsQixJQUFpQyxPQUFPQSxPQUFPQyxRQUFkLEtBQTJCLFdBRDlEOztBQUdBOzs7OztJQUlxQkMsTyxHQUNuQixtQkFBYztBQUFBOztBQUFBOztBQUFBLE9Bd0JkQyxXQXhCYyxHQXdCQSxtQkFBVztBQUN2QixVQUFLQyxhQUFMLEdBQXFCQyxPQUFyQjtBQUNELEdBMUJhOztBQUFBLE9BNEJkQyxjQTVCYyxHQTRCRyxtQkFBVztBQUMxQixVQUFLQyxnQkFBTCxHQUF3QkYsT0FBeEI7QUFDRCxHQTlCYTs7QUFBQSxPQWdDZEcsYUFoQ2MsR0FnQ0UsbUJBQVc7QUFDekIsVUFBS0MsZUFBTCxHQUF1QkosT0FBdkI7QUFDRCxHQWxDYTs7QUFBQSxPQW9DZEssU0FwQ2MsR0FvQ0YsWUFBTTtBQUNoQixXQUFPLE1BQUtILGdCQUFMLEVBQVA7QUFDRCxHQXRDYTs7QUFBQSxPQXdDZEksUUF4Q2MsR0F3Q0gsWUFBTTtBQUNmLFdBQU8sTUFBS0YsZUFBTCxFQUFQO0FBQ0QsR0ExQ2E7O0FBQUEsT0E0Q2RHLE1BNUNjLEdBNENMLFVBQUNDLEtBQUQsRUFBMEI7QUFBQSxRQUFsQkMsUUFBa0IsdUVBQVAsRUFBTzs7QUFDakMsV0FBTyxNQUFLVixhQUFMLENBQW1CUyxLQUFuQixlQUErQkMsUUFBL0IsSUFBeUNDLE1BQU0sU0FBL0MsSUFBUDtBQUNELEdBOUNhOztBQUFBLE9BZ0RkQyxPQWhEYyxHQWdESixVQUFDSCxLQUFELEVBQTBCO0FBQUEsUUFBbEJDLFFBQWtCLHVFQUFQLEVBQU87O0FBQ2xDLFdBQU8sTUFBS1YsYUFBTCxDQUFtQlMsS0FBbkIsZUFBK0JDLFFBQS9CLElBQXlDQyxNQUFNLFNBQS9DLElBQVA7QUFDRCxHQWxEYTs7QUFBQSxPQW9EZEUsT0FwRGMsR0FvREosVUFBQ0osS0FBRCxFQUEwQjtBQUFBLFFBQWxCQyxRQUFrQix1RUFBUCxFQUFPOztBQUNsQyxXQUFPLE1BQUtWLGFBQUwsQ0FBbUJTLEtBQW5CLGVBQStCQyxRQUEvQixJQUF5Q0MsTUFBTSxTQUEvQyxJQUFQO0FBQ0QsR0F0RGE7O0FBQUEsT0F3RGRHLE1BeERjLEdBd0RMLFVBQUNMLEtBQUQsRUFBMEI7QUFBQSxRQUFsQkMsUUFBa0IsdUVBQVAsRUFBTzs7QUFDakMsV0FBTyxNQUFLVixhQUFMLENBQW1CUyxLQUFuQixlQUErQkMsUUFBL0IsSUFBeUNDLE1BQU0sUUFBL0MsSUFBUDtBQUNELEdBMURhOztBQUFBLE9BNERkSSxJQTVEYyxHQTREUCxVQUFDTixLQUFELEVBQTBCO0FBQUEsUUFBbEJDLFFBQWtCLHVFQUFQLEVBQU87O0FBQy9CLFdBQU8sTUFBS1YsYUFBTCxDQUFtQlMsS0FBbkIsZUFBK0JDLFFBQS9CLElBQXlDQyxNQUFNLE1BQS9DLElBQVA7QUFDRCxHQTlEYTs7QUFDWixNQUFJLENBQUNoQixTQUFMLEVBQWdCO0FBQ2hCLE1BQUlxQixrQkFBSjs7QUFFQSxNQUFNQyxVQUFVcEIsU0FBU3FCLGNBQVQsQ0FBd0J4QixFQUF4QixDQUFoQjtBQUNBLE1BQUl1QixPQUFKLEVBQWE7QUFDWEQsZ0JBQVlDLE9BQVo7QUFDRCxHQUZELE1BRU87QUFDTDtBQUNBRCxnQkFBWW5CLFNBQVNzQixhQUFULENBQXVCLEtBQXZCLENBQVo7QUFDQUgsY0FBVUksRUFBVixHQUFlMUIsRUFBZjtBQUNBRyxhQUFTd0IsSUFBVCxDQUFjQyxXQUFkLENBQTBCTixTQUExQjtBQUNEOztBQUVEeEIsV0FBUytCLE1BQVQsQ0FDRSxvQkFBQyxZQUFEO0FBQ0UsZ0JBQVksS0FBS3hCLFdBRG5CO0FBRUUsbUJBQWUsS0FBS0csY0FGdEI7QUFHRSxrQkFBYyxLQUFLRTtBQUhyQixJQURGLEVBTUVZLFNBTkY7QUFRRCxDOztlQXZCa0JsQixPIiwiZmlsZSI6IlRvYXN0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJ1xuaW1wb3J0IFRvYXN0TWFuYWdlciBmcm9tICcuL1RvYXN0TWFuYWdlcidcblxuY29uc3QgSUQgPSAnZXZlcmdyZWVuLXRvYXN0ZXInXG5jb25zdCBpc0Jyb3dzZXIgPVxuICB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2Ygd2luZG93LmRvY3VtZW50ICE9PSAndW5kZWZpbmVkJ1xuXG4vKipcbiAqIFRoZSBUb2FzdGVyIG1hbmFnZXMgdGhlIGludGVyYWN0aW9uc2IgYmV0d2VlblxuICogdGhlIFRvYXN0ZXJNYW5nZXIgYW5kIHRoZSB0b2FzdCBBUEkuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRvYXN0ZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBpZiAoIWlzQnJvd3NlcikgcmV0dXJuXG4gICAgbGV0IGNvbnRhaW5lclxuXG4gICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKElEKVxuICAgIGlmIChlbGVtZW50KSB7XG4gICAgICBjb250YWluZXIgPSBlbGVtZW50XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIENyZWF0ZSBjb250YWluZXIgaWYgbm90IGV4aXN0cyB5ZXQuXG4gICAgICBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgY29udGFpbmVyLmlkID0gSURcbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY29udGFpbmVyKVxuICAgIH1cblxuICAgIFJlYWN0RE9NLnJlbmRlcihcbiAgICAgIDxUb2FzdE1hbmFnZXJcbiAgICAgICAgYmluZE5vdGlmeT17dGhpcy5fYmluZE5vdGlmeX1cbiAgICAgICAgYmluZEdldFRvYXN0cz17dGhpcy5fYmluZEdldFRvYXN0c31cbiAgICAgICAgYmluZENsb3NlQWxsPXt0aGlzLl9iaW5kQ2xvc2VBbGx9XG4gICAgICAvPixcbiAgICAgIGNvbnRhaW5lclxuICAgIClcbiAgfVxuXG4gIF9iaW5kTm90aWZ5ID0gaGFuZGxlciA9PiB7XG4gICAgdGhpcy5ub3RpZnlIYW5kbGVyID0gaGFuZGxlclxuICB9XG5cbiAgX2JpbmRHZXRUb2FzdHMgPSBoYW5kbGVyID0+IHtcbiAgICB0aGlzLmdldFRvYXN0c0hhbmRsZXIgPSBoYW5kbGVyXG4gIH1cblxuICBfYmluZENsb3NlQWxsID0gaGFuZGxlciA9PiB7XG4gICAgdGhpcy5jbG9zZUFsbEhhbmRsZXIgPSBoYW5kbGVyXG4gIH1cblxuICBnZXRUb2FzdHMgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0VG9hc3RzSGFuZGxlcigpXG4gIH1cblxuICBjbG9zZUFsbCA9ICgpID0+IHtcbiAgICByZXR1cm4gdGhpcy5jbG9zZUFsbEhhbmRsZXIoKVxuICB9XG5cbiAgbm90aWZ5ID0gKHRpdGxlLCBzZXR0aW5ncyA9IHt9KSA9PiB7XG4gICAgcmV0dXJuIHRoaXMubm90aWZ5SGFuZGxlcih0aXRsZSwgeyAuLi5zZXR0aW5ncywgdHlwZTogJ2RlZmF1bHQnIH0pXG4gIH1cblxuICBzdWNjZXNzID0gKHRpdGxlLCBzZXR0aW5ncyA9IHt9KSA9PiB7XG4gICAgcmV0dXJuIHRoaXMubm90aWZ5SGFuZGxlcih0aXRsZSwgeyAuLi5zZXR0aW5ncywgdHlwZTogJ3N1Y2Nlc3MnIH0pXG4gIH1cblxuICB3YXJuaW5nID0gKHRpdGxlLCBzZXR0aW5ncyA9IHt9KSA9PiB7XG4gICAgcmV0dXJuIHRoaXMubm90aWZ5SGFuZGxlcih0aXRsZSwgeyAuLi5zZXR0aW5ncywgdHlwZTogJ3dhcm5pbmcnIH0pXG4gIH1cblxuICBkYW5nZXIgPSAodGl0bGUsIHNldHRpbmdzID0ge30pID0+IHtcbiAgICByZXR1cm4gdGhpcy5ub3RpZnlIYW5kbGVyKHRpdGxlLCB7IC4uLnNldHRpbmdzLCB0eXBlOiAnZGFuZ2VyJyB9KVxuICB9XG5cbiAgaW5mbyA9ICh0aXRsZSwgc2V0dGluZ3MgPSB7fSkgPT4ge1xuICAgIHJldHVybiB0aGlzLm5vdGlmeUhhbmRsZXIodGl0bGUsIHsgLi4uc2V0dGluZ3MsIHR5cGU6ICdpbmZvJyB9KVxuICB9XG59XG4iXX0=