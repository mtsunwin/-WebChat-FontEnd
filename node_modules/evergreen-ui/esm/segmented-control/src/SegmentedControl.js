var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import Box, { spacing, position, layout, dimensions } from 'ui-box';
import SegmentedControlRadio from './SegmentedControlRadio';

var radioCount = 1; // Used for generating unique input names

var SegmentedControl = function (_PureComponent) {
  _inherits(SegmentedControl, _PureComponent);

  function SegmentedControl(props, context) {
    _classCallCheck(this, SegmentedControl);

    var _this = _possibleConstructorReturn(this, (SegmentedControl.__proto__ || Object.getPrototypeOf(SegmentedControl)).call(this, props, context));

    _this.handleChange = function (value) {
      // Save a render cycle when it's a controlled input
      if (!_this.props.value) {
        _this.setState({ value: value });
      }

      if (_this.props.onChange) {
        _this.props.onChange(value);
      }
    };

    _this.state = {
      value: props.defaultValue || props.options[0].value
    };

    _this.name = 'SegmentedControl-' + radioCount;
    radioCount += 1;
    return _this;
  }

  _createClass(SegmentedControl, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          name = _props.name,
          height = _props.height,
          options = _props.options,
          onChange = _props.onChange,
          defaultValue = _props.defaultValue,
          props = _objectWithoutProperties(_props, ['name', 'height', 'options', 'onChange', 'defaultValue']);

      // Allows it to behave like a controlled input


      var value = this.props.value || this.state.value;
      return React.createElement(
        Box,
        _extends({ display: 'flex', marginRight: -1, height: height }, props),
        options.map(function (option, index) {
          return React.createElement(SegmentedControlRadio, {
            key: option.value,
            name: name,
            label: option.label,
            value: option.value,
            height: height,
            checked: value === option.value,
            onChange: _this2.handleChange,
            appearance: 'default',
            isFirstItem: index === 0,
            isLastItem: index === options.length - 1
          });
        })
      );
    }
  }]);

  return SegmentedControl;
}(PureComponent);

SegmentedControl.propTypes = _extends({}, spacing.propTypes, position.propTypes, layout.propTypes, dimensions.propTypes, {

  /**
   * The options for the radios of the Segmented Control.
   */
  options: PropTypes.arrayOf(PropTypes.shape({
    label: PropTypes.node.isRequired,
    value: PropTypes.string.isRequired
  })).isRequired,

  /**
   * The current value of the Segmented Control when controlled.
   */
  value: PropTypes.string,

  /**
   * The default value of the Segmented Control when uncontrolled.
   */
  defaultValue: PropTypes.string,

  /**
   * Function called when the value changes.
   */
  onChange: PropTypes.func,

  /**
   * The name of the radio group.
   */
  name: PropTypes.string,

  /**
   * The height of the Segmented Control.
   */
  height: PropTypes.number
});
SegmentedControl.defaultProps = {
  height: 32
};
export default SegmentedControl;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zZWdtZW50ZWQtY29udHJvbC9zcmMvU2VnbWVudGVkQ29udHJvbC5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsIlB1cmVDb21wb25lbnQiLCJQcm9wVHlwZXMiLCJCb3giLCJzcGFjaW5nIiwicG9zaXRpb24iLCJsYXlvdXQiLCJkaW1lbnNpb25zIiwiU2VnbWVudGVkQ29udHJvbFJhZGlvIiwicmFkaW9Db3VudCIsIlNlZ21lbnRlZENvbnRyb2wiLCJwcm9wcyIsImNvbnRleHQiLCJoYW5kbGVDaGFuZ2UiLCJ2YWx1ZSIsInNldFN0YXRlIiwib25DaGFuZ2UiLCJzdGF0ZSIsImRlZmF1bHRWYWx1ZSIsIm9wdGlvbnMiLCJuYW1lIiwiaGVpZ2h0IiwibWFwIiwib3B0aW9uIiwiaW5kZXgiLCJsYWJlbCIsImxlbmd0aCIsInByb3BUeXBlcyIsImFycmF5T2YiLCJzaGFwZSIsIm5vZGUiLCJpc1JlcXVpcmVkIiwic3RyaW5nIiwiZnVuYyIsIm51bWJlciIsImRlZmF1bHRQcm9wcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsT0FBT0EsS0FBUCxJQUFnQkMsYUFBaEIsUUFBcUMsT0FBckM7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsT0FBT0MsR0FBUCxJQUFjQyxPQUFkLEVBQXVCQyxRQUF2QixFQUFpQ0MsTUFBakMsRUFBeUNDLFVBQXpDLFFBQTJELFFBQTNEO0FBQ0EsT0FBT0MscUJBQVAsTUFBa0MseUJBQWxDOztBQUVBLElBQUlDLGFBQWEsQ0FBakIsQyxDQUFtQjs7SUFFRUMsZ0I7OztBQWtEbkIsNEJBQVlDLEtBQVosRUFBbUJDLE9BQW5CLEVBQTRCO0FBQUE7O0FBQUEsb0lBQ3BCRCxLQURvQixFQUNiQyxPQURhOztBQUFBLFVBVzVCQyxZQVg0QixHQVdiLGlCQUFTO0FBQ3RCO0FBQ0EsVUFBSSxDQUFDLE1BQUtGLEtBQUwsQ0FBV0csS0FBaEIsRUFBdUI7QUFDckIsY0FBS0MsUUFBTCxDQUFjLEVBQUVELFlBQUYsRUFBZDtBQUNEOztBQUVELFVBQUksTUFBS0gsS0FBTCxDQUFXSyxRQUFmLEVBQXlCO0FBQ3ZCLGNBQUtMLEtBQUwsQ0FBV0ssUUFBWCxDQUFvQkYsS0FBcEI7QUFDRDtBQUNGLEtBcEIyQjs7QUFHMUIsVUFBS0csS0FBTCxHQUFhO0FBQ1hILGFBQU9ILE1BQU1PLFlBQU4sSUFBc0JQLE1BQU1RLE9BQU4sQ0FBYyxDQUFkLEVBQWlCTDtBQURuQyxLQUFiOztBQUlBLFVBQUtNLElBQUwseUJBQWdDWCxVQUFoQztBQUNBQSxrQkFBYyxDQUFkO0FBUjBCO0FBUzNCOzs7OzZCQWFRO0FBQUE7O0FBQUEsbUJBUUgsS0FBS0UsS0FSRjtBQUFBLFVBRUxTLElBRkssVUFFTEEsSUFGSztBQUFBLFVBR0xDLE1BSEssVUFHTEEsTUFISztBQUFBLFVBSUxGLE9BSkssVUFJTEEsT0FKSztBQUFBLFVBS0xILFFBTEssVUFLTEEsUUFMSztBQUFBLFVBTUxFLFlBTkssVUFNTEEsWUFOSztBQUFBLFVBT0ZQLEtBUEU7O0FBVVA7OztBQUNBLFVBQU1HLFFBQVEsS0FBS0gsS0FBTCxDQUFXRyxLQUFYLElBQW9CLEtBQUtHLEtBQUwsQ0FBV0gsS0FBN0M7QUFDQSxhQUNFO0FBQUMsV0FBRDtBQUFBLG1CQUFLLFNBQVEsTUFBYixFQUFvQixhQUFhLENBQUMsQ0FBbEMsRUFBcUMsUUFBUU8sTUFBN0MsSUFBeURWLEtBQXpEO0FBQ0dRLGdCQUFRRyxHQUFSLENBQVksVUFBQ0MsTUFBRCxFQUFTQyxLQUFUO0FBQUEsaUJBQ1gsb0JBQUMscUJBQUQ7QUFDRSxpQkFBS0QsT0FBT1QsS0FEZDtBQUVFLGtCQUFNTSxJQUZSO0FBR0UsbUJBQU9HLE9BQU9FLEtBSGhCO0FBSUUsbUJBQU9GLE9BQU9ULEtBSmhCO0FBS0Usb0JBQVFPLE1BTFY7QUFNRSxxQkFBU1AsVUFBVVMsT0FBT1QsS0FONUI7QUFPRSxzQkFBVSxPQUFLRCxZQVBqQjtBQVFFLHdCQUFXLFNBUmI7QUFTRSx5QkFBYVcsVUFBVSxDQVR6QjtBQVVFLHdCQUFZQSxVQUFVTCxRQUFRTyxNQUFSLEdBQWlCO0FBVnpDLFlBRFc7QUFBQSxTQUFaO0FBREgsT0FERjtBQWtCRDs7OztFQXRHMkN6QixhOztBQUF6QlMsZ0IsQ0FDWmlCLFMsZ0JBSUZ2QixRQUFRdUIsUyxFQUNSdEIsU0FBU3NCLFMsRUFDVHJCLE9BQU9xQixTLEVBQ1BwQixXQUFXb0IsUzs7QUFFZDs7O0FBR0FSLFdBQVNqQixVQUFVMEIsT0FBVixDQUNQMUIsVUFBVTJCLEtBQVYsQ0FBZ0I7QUFDZEosV0FBT3ZCLFVBQVU0QixJQUFWLENBQWVDLFVBRFI7QUFFZGpCLFdBQU9aLFVBQVU4QixNQUFWLENBQWlCRDtBQUZWLEdBQWhCLENBRE8sRUFLUEEsVTs7QUFFRjs7O0FBR0FqQixTQUFPWixVQUFVOEIsTTs7QUFFakI7OztBQUdBZCxnQkFBY2hCLFVBQVU4QixNOztBQUV4Qjs7O0FBR0FoQixZQUFVZCxVQUFVK0IsSTs7QUFFcEI7OztBQUdBYixRQUFNbEIsVUFBVThCLE07O0FBRWhCOzs7QUFHQVgsVUFBUW5CLFVBQVVnQzs7QUEzQ0R4QixnQixDQThDWnlCLFksR0FBZTtBQUNwQmQsVUFBUTtBQURZLEM7ZUE5Q0hYLGdCIiwiZmlsZSI6IlNlZ21lbnRlZENvbnRyb2wuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUHVyZUNvbXBvbmVudCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IEJveCwgeyBzcGFjaW5nLCBwb3NpdGlvbiwgbGF5b3V0LCBkaW1lbnNpb25zIH0gZnJvbSAndWktYm94J1xuaW1wb3J0IFNlZ21lbnRlZENvbnRyb2xSYWRpbyBmcm9tICcuL1NlZ21lbnRlZENvbnRyb2xSYWRpbydcblxubGV0IHJhZGlvQ291bnQgPSAxIC8vIFVzZWQgZm9yIGdlbmVyYXRpbmcgdW5pcXVlIGlucHV0IG5hbWVzXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlZ21lbnRlZENvbnRyb2wgZXh0ZW5kcyBQdXJlQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAvKipcbiAgICAgKiBDb21wb3NlcyBzb21lIEJveCBBUElzLlxuICAgICAqL1xuICAgIC4uLnNwYWNpbmcucHJvcFR5cGVzLFxuICAgIC4uLnBvc2l0aW9uLnByb3BUeXBlcyxcbiAgICAuLi5sYXlvdXQucHJvcFR5cGVzLFxuICAgIC4uLmRpbWVuc2lvbnMucHJvcFR5cGVzLFxuXG4gICAgLyoqXG4gICAgICogVGhlIG9wdGlvbnMgZm9yIHRoZSByYWRpb3Mgb2YgdGhlIFNlZ21lbnRlZCBDb250cm9sLlxuICAgICAqL1xuICAgIG9wdGlvbnM6IFByb3BUeXBlcy5hcnJheU9mKFxuICAgICAgUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgICAgbGFiZWw6IFByb3BUeXBlcy5ub2RlLmlzUmVxdWlyZWQsXG4gICAgICAgIHZhbHVlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWRcbiAgICAgIH0pXG4gICAgKS5pc1JlcXVpcmVkLFxuXG4gICAgLyoqXG4gICAgICogVGhlIGN1cnJlbnQgdmFsdWUgb2YgdGhlIFNlZ21lbnRlZCBDb250cm9sIHdoZW4gY29udHJvbGxlZC5cbiAgICAgKi9cbiAgICB2YWx1ZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAgIC8qKlxuICAgICAqIFRoZSBkZWZhdWx0IHZhbHVlIG9mIHRoZSBTZWdtZW50ZWQgQ29udHJvbCB3aGVuIHVuY29udHJvbGxlZC5cbiAgICAgKi9cbiAgICBkZWZhdWx0VmFsdWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiBjYWxsZWQgd2hlbiB0aGUgdmFsdWUgY2hhbmdlcy5cbiAgICAgKi9cbiAgICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgbmFtZSBvZiB0aGUgcmFkaW8gZ3JvdXAuXG4gICAgICovXG4gICAgbmFtZTogUHJvcFR5cGVzLnN0cmluZyxcblxuICAgIC8qKlxuICAgICAqIFRoZSBoZWlnaHQgb2YgdGhlIFNlZ21lbnRlZCBDb250cm9sLlxuICAgICAqL1xuICAgIGhlaWdodDogUHJvcFR5cGVzLm51bWJlclxuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBoZWlnaHQ6IDMyXG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcm9wcywgY29udGV4dCkge1xuICAgIHN1cGVyKHByb3BzLCBjb250ZXh0KVxuXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHZhbHVlOiBwcm9wcy5kZWZhdWx0VmFsdWUgfHwgcHJvcHMub3B0aW9uc1swXS52YWx1ZVxuICAgIH1cblxuICAgIHRoaXMubmFtZSA9IGBTZWdtZW50ZWRDb250cm9sLSR7cmFkaW9Db3VudH1gXG4gICAgcmFkaW9Db3VudCArPSAxXG4gIH1cblxuICBoYW5kbGVDaGFuZ2UgPSB2YWx1ZSA9PiB7XG4gICAgLy8gU2F2ZSBhIHJlbmRlciBjeWNsZSB3aGVuIGl0J3MgYSBjb250cm9sbGVkIGlucHV0XG4gICAgaWYgKCF0aGlzLnByb3BzLnZhbHVlKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHsgdmFsdWUgfSlcbiAgICB9XG5cbiAgICBpZiAodGhpcy5wcm9wcy5vbkNoYW5nZSkge1xuICAgICAgdGhpcy5wcm9wcy5vbkNoYW5nZSh2YWx1ZSlcbiAgICB9XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgbmFtZSxcbiAgICAgIGhlaWdodCxcbiAgICAgIG9wdGlvbnMsXG4gICAgICBvbkNoYW5nZSxcbiAgICAgIGRlZmF1bHRWYWx1ZSxcbiAgICAgIC4uLnByb3BzXG4gICAgfSA9IHRoaXMucHJvcHNcblxuICAgIC8vIEFsbG93cyBpdCB0byBiZWhhdmUgbGlrZSBhIGNvbnRyb2xsZWQgaW5wdXRcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMucHJvcHMudmFsdWUgfHwgdGhpcy5zdGF0ZS52YWx1ZVxuICAgIHJldHVybiAoXG4gICAgICA8Qm94IGRpc3BsYXk9XCJmbGV4XCIgbWFyZ2luUmlnaHQ9ey0xfSBoZWlnaHQ9e2hlaWdodH0gey4uLnByb3BzfT5cbiAgICAgICAge29wdGlvbnMubWFwKChvcHRpb24sIGluZGV4KSA9PiAoXG4gICAgICAgICAgPFNlZ21lbnRlZENvbnRyb2xSYWRpb1xuICAgICAgICAgICAga2V5PXtvcHRpb24udmFsdWV9XG4gICAgICAgICAgICBuYW1lPXtuYW1lfVxuICAgICAgICAgICAgbGFiZWw9e29wdGlvbi5sYWJlbH1cbiAgICAgICAgICAgIHZhbHVlPXtvcHRpb24udmFsdWV9XG4gICAgICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgICAgIGNoZWNrZWQ9e3ZhbHVlID09PSBvcHRpb24udmFsdWV9XG4gICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2V9XG4gICAgICAgICAgICBhcHBlYXJhbmNlPVwiZGVmYXVsdFwiXG4gICAgICAgICAgICBpc0ZpcnN0SXRlbT17aW5kZXggPT09IDB9XG4gICAgICAgICAgICBpc0xhc3RJdGVtPXtpbmRleCA9PT0gb3B0aW9ucy5sZW5ndGggLSAxfVxuICAgICAgICAgIC8+XG4gICAgICAgICkpfVxuICAgICAgPC9Cb3g+XG4gICAgKVxuICB9XG59XG4iXX0=