var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import Box, { spacing, position, layout, dimensions } from 'ui-box';
import { Text } from '../../typography';
import { CheckboxAppearances } from '../../shared-styles';

var CircleIcon = function CircleIcon(_ref) {
  var size = _ref.size,
      _ref$fill = _ref.fill,
      fill = _ref$fill === undefined ? 'currentColor' : _ref$fill,
      props = _objectWithoutProperties(_ref, ['size', 'fill']);

  return React.createElement(
    'svg',
    _extends({ width: size, height: size, viewBox: '0 0 10 10' }, props),
    React.createElement('circle', { fill: fill, cx: '5', cy: '5', r: '5' })
  );
};

CircleIcon.propTypes = {
  fill: PropTypes.string,
  size: PropTypes.number
};

var Radio = function (_PureComponent) {
  _inherits(Radio, _PureComponent);

  function Radio() {
    _classCallCheck(this, Radio);

    return _possibleConstructorReturn(this, (Radio.__proto__ || Object.getPrototypeOf(Radio)).apply(this, arguments));
  }

  _createClass(Radio, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          id = _props.id,
          name = _props.name,
          label = _props.label,
          disabled = _props.disabled,
          isInvalid = _props.isInvalid,
          checked = _props.checked,
          _onChange = _props.onChange,
          value = _props.value,
          size = _props.size,
          isRequired = _props.isRequired,
          props = _objectWithoutProperties(_props, ['id', 'name', 'label', 'disabled', 'isInvalid', 'checked', 'onChange', 'value', 'size', 'isRequired']);

      var appearanceStyle = CheckboxAppearances.default;

      return React.createElement(
        Box,
        _extends({
          is: 'label',
          cursor: disabled ? 'not-allowed' : 'pointer',
          display: 'flex',
          marginY: size === 12 ? 8 : 12
        }, props),
        React.createElement(Box, {
          is: 'input',
          id: id,
          type: 'radio',
          name: name,
          value: value,
          checked: checked,
          onChange: function onChange(e) {
            return _onChange(e.target.value);
          },
          disabled: disabled,
          'aria-invalid': isInvalid,
          required: isRequired,
          css: appearanceStyle
        }),
        React.createElement(
          Box,
          {
            boxSizing: 'border-box',
            borderRadius: 9999,
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            marginTop: size === 12 ? 2 : 3,
            width: size,
            height: size
          },
          React.createElement(CircleIcon, { size: size === 12 ? 4 : 4 })
        ),
        label && React.createElement(
          Text,
          {
            marginLeft: size === 12 ? 8 : 10,
            size: size === 12 ? 300 : 400,
            color: disabled ? 'extraMuted' : 'default'
          },
          label
        )
      );
    }
  }]);

  return Radio;
}(PureComponent);

Radio.propTypes = _extends({}, spacing.propTypes, position.propTypes, layout.propTypes, dimensions.propTypes, {

  /**
   * The id attribute of the radio.
   */
  id: PropTypes.string,

  /**
   * The name attribute of the radio.
   */
  name: PropTypes.string,

  /**
   * Label of the radio.
   */
  label: PropTypes.node,

  /**
   * The value attribute of the radio.
   */
  value: PropTypes.string,

  /**
   * Function called when state changes.
   */
  onChange: PropTypes.func,

  /**
   * When true, the radio is disabled.
   */
  disabled: PropTypes.bool,

  /**
   * When true, the radio is checked.
   */
  checked: PropTypes.bool,

  /**
   * The size of the radio circle. This also informs the text size and spacing.
   */
  size: PropTypes.oneOf([12, 16]),

  /**
   * When true, the radio get the required attribute.
   */
  isRequired: PropTypes.bool.isRequired,

  /**
   * When true, the aria-invalid attribute is true.
   * Used for accessibility.
   */
  isInvalid: PropTypes.bool.isRequired
});
Radio.defaultProps = {
  onChange: function onChange() {},
  size: 12,
  isRequired: false,
  isInvalid: false
};
export default Radio;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,