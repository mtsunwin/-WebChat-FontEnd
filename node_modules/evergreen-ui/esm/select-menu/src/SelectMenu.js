var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import arrify from 'arrify';
import { Popover } from '../../popover';
import { Position } from '../../positioner';
import SelectMenuContent from './SelectMenuContent';
import OptionShapePropType from './OptionShapePropType';
import SelectedPropType from './SelectedPropType';

var SelectMenu = function (_PureComponent) {
  _inherits(SelectMenu, _PureComponent);

  function SelectMenu() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, SelectMenu);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SelectMenu.__proto__ || Object.getPrototypeOf(SelectMenu)).call.apply(_ref, [this].concat(args))), _this), _this.getDetailView = function (close, detailView) {
      if (typeof detailView === 'function') {
        return {
          detailView: detailView({ close: close })
        };
      }

      if (detailView) {
        return { detailView: detailView };
      }

      return {};
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(SelectMenu, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          title = _props.title,
          width = _props.width,
          height = _props.height,
          options = _props.options,
          selected = _props.selected,
          position = _props.position,
          hasTitle = _props.hasTitle,
          hasFilter = _props.hasFilter,
          detailView = _props.detailView,
          props = _objectWithoutProperties(_props, ['title', 'width', 'height', 'options', 'selected', 'position', 'hasTitle', 'hasFilter', 'detailView']);

      return React.createElement(Popover, _extends({
        minWidth: width,
        position: position,
        minHeight: height,
        content: function content(_ref2) {
          var close = _ref2.close;
          return React.createElement(SelectMenuContent, _extends({
            width: width,
            height: height,
            options: options,
            title: title,
            hasFilter: hasFilter,
            hasTitle: hasTitle,
            listProps: {
              onSelect: function onSelect(item) {
                _this2.props.onSelect(item);
              },
              onDeselect: function onDeselect(item) {
                _this2.props.onDeselect(item);
              },
              selected: arrify(selected)
            },
            close: close
          }, _this2.getDetailView(close, detailView)));
        }
      }, props));
    }
  }]);

  return SelectMenu;
}(PureComponent);

SelectMenu.propTypes = {
  /**
   * The title of the Select Menu.
   */
  title: PropTypes.string,

  /**
   * The width of the Select Menu.
   */
  width: PropTypes.number,

  /**
   * The height of the Select Menu.
   */
  height: PropTypes.number,

  /**
   * The options to show in the menu.
   * [{ label: String, value: String | Number, labelInList?: String }]
   */
  options: PropTypes.arrayOf(OptionShapePropType),

  /**
   * Function that is called when an option is selected.
   */
  onSelect: PropTypes.func,
  /**
   * Function that is called when an option is deselected.
   */
  onDeselect: PropTypes.func,

  /**
   *
   */
  selected: SelectedPropType,

  /**
   * When true, show the title.
   */
  hasTitle: PropTypes.bool,

  /**
   * When true, show the filter.
   */
  hasFilter: PropTypes.bool,

  /**
   * The position of the Select Menu.
   */
  position: PropTypes.oneOf(Object.keys(Position)),

  /**
   * Can be a function that returns a node, or a node itself, that is
   * rendered on the right side of the Select Menu to give additional
   * information when an option is selected.
   */
  detailView: PropTypes.oneOfType([PropTypes.func, PropTypes.node])
};
SelectMenu.defaultProps = {
  onSelect: function onSelect() {},
  onDeselect: function onDeselect() {},
  width: 240,
  height: 248,
  position: Position.BOTTOM_LEFT
};
export default SelectMenu;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zZWxlY3QtbWVudS9zcmMvU2VsZWN0TWVudS5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsIlB1cmVDb21wb25lbnQiLCJQcm9wVHlwZXMiLCJhcnJpZnkiLCJQb3BvdmVyIiwiUG9zaXRpb24iLCJTZWxlY3RNZW51Q29udGVudCIsIk9wdGlvblNoYXBlUHJvcFR5cGUiLCJTZWxlY3RlZFByb3BUeXBlIiwiU2VsZWN0TWVudSIsImdldERldGFpbFZpZXciLCJjbG9zZSIsImRldGFpbFZpZXciLCJwcm9wcyIsInRpdGxlIiwid2lkdGgiLCJoZWlnaHQiLCJvcHRpb25zIiwic2VsZWN0ZWQiLCJwb3NpdGlvbiIsImhhc1RpdGxlIiwiaGFzRmlsdGVyIiwib25TZWxlY3QiLCJpdGVtIiwib25EZXNlbGVjdCIsInByb3BUeXBlcyIsInN0cmluZyIsIm51bWJlciIsImFycmF5T2YiLCJmdW5jIiwiYm9vbCIsIm9uZU9mIiwiT2JqZWN0Iiwia2V5cyIsIm9uZU9mVHlwZSIsIm5vZGUiLCJkZWZhdWx0UHJvcHMiLCJCT1RUT01fTEVGVCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsT0FBT0EsS0FBUCxJQUFnQkMsYUFBaEIsUUFBcUMsT0FBckM7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsT0FBT0MsTUFBUCxNQUFtQixRQUFuQjtBQUNBLFNBQVNDLE9BQVQsUUFBd0IsZUFBeEI7QUFDQSxTQUFTQyxRQUFULFFBQXlCLGtCQUF6QjtBQUNBLE9BQU9DLGlCQUFQLE1BQThCLHFCQUE5QjtBQUNBLE9BQU9DLG1CQUFQLE1BQWdDLHVCQUFoQztBQUNBLE9BQU9DLGdCQUFQLE1BQTZCLG9CQUE3Qjs7SUFFcUJDLFU7Ozs7Ozs7Ozs7Ozs7OzhMQW9FbkJDLGEsR0FBZ0IsVUFBQ0MsS0FBRCxFQUFRQyxVQUFSLEVBQXVCO0FBQ3JDLFVBQUksT0FBT0EsVUFBUCxLQUFzQixVQUExQixFQUFzQztBQUNwQyxlQUFPO0FBQ0xBLHNCQUFZQSxXQUFXLEVBQUVELFlBQUYsRUFBWDtBQURQLFNBQVA7QUFHRDs7QUFFRCxVQUFJQyxVQUFKLEVBQWdCO0FBQ2QsZUFBTyxFQUFFQSxzQkFBRixFQUFQO0FBQ0Q7O0FBRUQsYUFBTyxFQUFQO0FBQ0QsSzs7Ozs7NkJBRVE7QUFBQTs7QUFBQSxtQkFZSCxLQUFLQyxLQVpGO0FBQUEsVUFFTEMsS0FGSyxVQUVMQSxLQUZLO0FBQUEsVUFHTEMsS0FISyxVQUdMQSxLQUhLO0FBQUEsVUFJTEMsTUFKSyxVQUlMQSxNQUpLO0FBQUEsVUFLTEMsT0FMSyxVQUtMQSxPQUxLO0FBQUEsVUFNTEMsUUFOSyxVQU1MQSxRQU5LO0FBQUEsVUFPTEMsUUFQSyxVQU9MQSxRQVBLO0FBQUEsVUFRTEMsUUFSSyxVQVFMQSxRQVJLO0FBQUEsVUFTTEMsU0FUSyxVQVNMQSxTQVRLO0FBQUEsVUFVTFQsVUFWSyxVQVVMQSxVQVZLO0FBQUEsVUFXRkMsS0FYRTs7QUFjUCxhQUNFLG9CQUFDLE9BQUQ7QUFDRSxrQkFBVUUsS0FEWjtBQUVFLGtCQUFVSSxRQUZaO0FBR0UsbUJBQVdILE1BSGI7QUFJRSxpQkFBUztBQUFBLGNBQUdMLEtBQUgsU0FBR0EsS0FBSDtBQUFBLGlCQUNQLG9CQUFDLGlCQUFEO0FBQ0UsbUJBQU9JLEtBRFQ7QUFFRSxvQkFBUUMsTUFGVjtBQUdFLHFCQUFTQyxPQUhYO0FBSUUsbUJBQU9ILEtBSlQ7QUFLRSx1QkFBV08sU0FMYjtBQU1FLHNCQUFVRCxRQU5aO0FBT0UsdUJBQVc7QUFDVEUsd0JBQVUsd0JBQVE7QUFDaEIsdUJBQUtULEtBQUwsQ0FBV1MsUUFBWCxDQUFvQkMsSUFBcEI7QUFDRCxlQUhRO0FBSVRDLDBCQUFZLDBCQUFRO0FBQ2xCLHVCQUFLWCxLQUFMLENBQVdXLFVBQVgsQ0FBc0JELElBQXRCO0FBQ0QsZUFOUTtBQU9UTCx3QkFBVWYsT0FBT2UsUUFBUDtBQVBELGFBUGI7QUFnQkUsbUJBQU9QO0FBaEJULGFBaUJNLE9BQUtELGFBQUwsQ0FBbUJDLEtBQW5CLEVBQTBCQyxVQUExQixDQWpCTixFQURPO0FBQUE7QUFKWCxTQXlCTUMsS0F6Qk4sRUFERjtBQTZCRDs7OztFQTdIcUNaLGE7O0FBQW5CUSxVLENBQ1pnQixTLEdBQVk7QUFDakI7OztBQUdBWCxTQUFPWixVQUFVd0IsTUFKQTs7QUFNakI7OztBQUdBWCxTQUFPYixVQUFVeUIsTUFUQTs7QUFXakI7OztBQUdBWCxVQUFRZCxVQUFVeUIsTUFkRDs7QUFnQmpCOzs7O0FBSUFWLFdBQVNmLFVBQVUwQixPQUFWLENBQWtCckIsbUJBQWxCLENBcEJROztBQXNCakI7OztBQUdBZSxZQUFVcEIsVUFBVTJCLElBekJIO0FBMEJqQjs7O0FBR0FMLGNBQVl0QixVQUFVMkIsSUE3Qkw7O0FBK0JqQjs7O0FBR0FYLFlBQVVWLGdCQWxDTzs7QUFvQ2pCOzs7QUFHQVksWUFBVWxCLFVBQVU0QixJQXZDSDs7QUF5Q2pCOzs7QUFHQVQsYUFBV25CLFVBQVU0QixJQTVDSjs7QUE4Q2pCOzs7QUFHQVgsWUFBVWpCLFVBQVU2QixLQUFWLENBQWdCQyxPQUFPQyxJQUFQLENBQVk1QixRQUFaLENBQWhCLENBakRPOztBQW1EakI7Ozs7O0FBS0FPLGNBQVlWLFVBQVVnQyxTQUFWLENBQW9CLENBQUNoQyxVQUFVMkIsSUFBWCxFQUFpQjNCLFVBQVVpQyxJQUEzQixDQUFwQjtBQXhESyxDO0FBREExQixVLENBNERaMkIsWSxHQUFlO0FBQ3BCZCxZQUFVLG9CQUFNLENBQUUsQ0FERTtBQUVwQkUsY0FBWSxzQkFBTSxDQUFFLENBRkE7QUFHcEJULFNBQU8sR0FIYTtBQUlwQkMsVUFBUSxHQUpZO0FBS3BCRyxZQUFVZCxTQUFTZ0M7QUFMQyxDO2VBNURINUIsVSIsImZpbGUiOiJTZWxlY3RNZW51LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCBhcnJpZnkgZnJvbSAnYXJyaWZ5J1xuaW1wb3J0IHsgUG9wb3ZlciB9IGZyb20gJy4uLy4uL3BvcG92ZXInXG5pbXBvcnQgeyBQb3NpdGlvbiB9IGZyb20gJy4uLy4uL3Bvc2l0aW9uZXInXG5pbXBvcnQgU2VsZWN0TWVudUNvbnRlbnQgZnJvbSAnLi9TZWxlY3RNZW51Q29udGVudCdcbmltcG9ydCBPcHRpb25TaGFwZVByb3BUeXBlIGZyb20gJy4vT3B0aW9uU2hhcGVQcm9wVHlwZSdcbmltcG9ydCBTZWxlY3RlZFByb3BUeXBlIGZyb20gJy4vU2VsZWN0ZWRQcm9wVHlwZSdcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VsZWN0TWVudSBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC8qKlxuICAgICAqIFRoZSB0aXRsZSBvZiB0aGUgU2VsZWN0IE1lbnUuXG4gICAgICovXG4gICAgdGl0bGU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgd2lkdGggb2YgdGhlIFNlbGVjdCBNZW51LlxuICAgICAqL1xuICAgIHdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLFxuXG4gICAgLyoqXG4gICAgICogVGhlIGhlaWdodCBvZiB0aGUgU2VsZWN0IE1lbnUuXG4gICAgICovXG4gICAgaGVpZ2h0OiBQcm9wVHlwZXMubnVtYmVyLFxuXG4gICAgLyoqXG4gICAgICogVGhlIG9wdGlvbnMgdG8gc2hvdyBpbiB0aGUgbWVudS5cbiAgICAgKiBbeyBsYWJlbDogU3RyaW5nLCB2YWx1ZTogU3RyaW5nIHwgTnVtYmVyLCBsYWJlbEluTGlzdD86IFN0cmluZyB9XVxuICAgICAqL1xuICAgIG9wdGlvbnM6IFByb3BUeXBlcy5hcnJheU9mKE9wdGlvblNoYXBlUHJvcFR5cGUpLFxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdGhhdCBpcyBjYWxsZWQgd2hlbiBhbiBvcHRpb24gaXMgc2VsZWN0ZWQuXG4gICAgICovXG4gICAgb25TZWxlY3Q6IFByb3BUeXBlcy5mdW5jLFxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRoYXQgaXMgY2FsbGVkIHdoZW4gYW4gb3B0aW9uIGlzIGRlc2VsZWN0ZWQuXG4gICAgICovXG4gICAgb25EZXNlbGVjdDogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqL1xuICAgIHNlbGVjdGVkOiBTZWxlY3RlZFByb3BUeXBlLFxuXG4gICAgLyoqXG4gICAgICogV2hlbiB0cnVlLCBzaG93IHRoZSB0aXRsZS5cbiAgICAgKi9cbiAgICBoYXNUaXRsZTogUHJvcFR5cGVzLmJvb2wsXG5cbiAgICAvKipcbiAgICAgKiBXaGVuIHRydWUsIHNob3cgdGhlIGZpbHRlci5cbiAgICAgKi9cbiAgICBoYXNGaWx0ZXI6IFByb3BUeXBlcy5ib29sLFxuXG4gICAgLyoqXG4gICAgICogVGhlIHBvc2l0aW9uIG9mIHRoZSBTZWxlY3QgTWVudS5cbiAgICAgKi9cbiAgICBwb3NpdGlvbjogUHJvcFR5cGVzLm9uZU9mKE9iamVjdC5rZXlzKFBvc2l0aW9uKSksXG5cbiAgICAvKipcbiAgICAgKiBDYW4gYmUgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYSBub2RlLCBvciBhIG5vZGUgaXRzZWxmLCB0aGF0IGlzXG4gICAgICogcmVuZGVyZWQgb24gdGhlIHJpZ2h0IHNpZGUgb2YgdGhlIFNlbGVjdCBNZW51IHRvIGdpdmUgYWRkaXRpb25hbFxuICAgICAqIGluZm9ybWF0aW9uIHdoZW4gYW4gb3B0aW9uIGlzIHNlbGVjdGVkLlxuICAgICAqL1xuICAgIGRldGFpbFZpZXc6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMubm9kZV0pXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIG9uU2VsZWN0OiAoKSA9PiB7fSxcbiAgICBvbkRlc2VsZWN0OiAoKSA9PiB7fSxcbiAgICB3aWR0aDogMjQwLFxuICAgIGhlaWdodDogMjQ4LFxuICAgIHBvc2l0aW9uOiBQb3NpdGlvbi5CT1RUT01fTEVGVFxuICB9XG5cbiAgZ2V0RGV0YWlsVmlldyA9IChjbG9zZSwgZGV0YWlsVmlldykgPT4ge1xuICAgIGlmICh0eXBlb2YgZGV0YWlsVmlldyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZGV0YWlsVmlldzogZGV0YWlsVmlldyh7IGNsb3NlIH0pXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGRldGFpbFZpZXcpIHtcbiAgICAgIHJldHVybiB7IGRldGFpbFZpZXcgfVxuICAgIH1cblxuICAgIHJldHVybiB7fVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIHRpdGxlLFxuICAgICAgd2lkdGgsXG4gICAgICBoZWlnaHQsXG4gICAgICBvcHRpb25zLFxuICAgICAgc2VsZWN0ZWQsXG4gICAgICBwb3NpdGlvbixcbiAgICAgIGhhc1RpdGxlLFxuICAgICAgaGFzRmlsdGVyLFxuICAgICAgZGV0YWlsVmlldyxcbiAgICAgIC4uLnByb3BzXG4gICAgfSA9IHRoaXMucHJvcHNcblxuICAgIHJldHVybiAoXG4gICAgICA8UG9wb3ZlclxuICAgICAgICBtaW5XaWR0aD17d2lkdGh9XG4gICAgICAgIHBvc2l0aW9uPXtwb3NpdGlvbn1cbiAgICAgICAgbWluSGVpZ2h0PXtoZWlnaHR9XG4gICAgICAgIGNvbnRlbnQ9eyh7IGNsb3NlIH0pID0+IChcbiAgICAgICAgICA8U2VsZWN0TWVudUNvbnRlbnRcbiAgICAgICAgICAgIHdpZHRoPXt3aWR0aH1cbiAgICAgICAgICAgIGhlaWdodD17aGVpZ2h0fVxuICAgICAgICAgICAgb3B0aW9ucz17b3B0aW9uc31cbiAgICAgICAgICAgIHRpdGxlPXt0aXRsZX1cbiAgICAgICAgICAgIGhhc0ZpbHRlcj17aGFzRmlsdGVyfVxuICAgICAgICAgICAgaGFzVGl0bGU9e2hhc1RpdGxlfVxuICAgICAgICAgICAgbGlzdFByb3BzPXt7XG4gICAgICAgICAgICAgIG9uU2VsZWN0OiBpdGVtID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BzLm9uU2VsZWN0KGl0ZW0pXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIG9uRGVzZWxlY3Q6IGl0ZW0gPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMucHJvcHMub25EZXNlbGVjdChpdGVtKVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBzZWxlY3RlZDogYXJyaWZ5KHNlbGVjdGVkKVxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIGNsb3NlPXtjbG9zZX1cbiAgICAgICAgICAgIHsuLi50aGlzLmdldERldGFpbFZpZXcoY2xvc2UsIGRldGFpbFZpZXcpfVxuICAgICAgICAgIC8+XG4gICAgICAgICl9XG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgIC8+XG4gICAgKVxuICB9XG59XG4iXX0=