var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import LinkAppearances from './styles/LinkAppearances';
import Text from './Text';

var Link = function (_PureComponent) {
  _inherits(Link, _PureComponent);

  function Link() {
    _classCallCheck(this, Link);

    return _possibleConstructorReturn(this, (Link.__proto__ || Object.getPrototypeOf(Link)).apply(this, arguments));
  }

  _createClass(Link, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          appearance = _props.appearance,
          props = _objectWithoutProperties(_props, ['appearance']);

      var appearanceStyle = LinkAppearances[appearance];

      // Manage the color through the appearance
      return React.createElement(Text, _extends({
        is: 'a',
        textDecoration: 'underline',
        color: null,
        css: appearanceStyle
      }, props));
    }
  }]);

  return Link;
}(PureComponent);

Link.propTypes = _extends({}, Text.propTypes, {

  /**
   * This attribute names a relationship of the linked document to the current document.
   * Common use case is: rel="noopener noreferrer".
   */
  rel: PropTypes.string,

  /**
   * Specifies the URL of the linked resource. A URL might be absolute or relative.
   */
  href: PropTypes.string,

  /**
   * Target atrribute, common use case is target="_blank."
   */
  target: PropTypes.string,

  /**
   * The appearance of the Link. Can be blue, green or neutral.
   */
  appearance: PropTypes.oneOf(Object.keys(LinkAppearances))
});
Link.defaultProps = {
  appearance: 'green'
};
export default Link;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90eXBvZ3JhcGh5L3NyYy9MaW5rLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwiUHVyZUNvbXBvbmVudCIsIlByb3BUeXBlcyIsIkxpbmtBcHBlYXJhbmNlcyIsIlRleHQiLCJMaW5rIiwicHJvcHMiLCJhcHBlYXJhbmNlIiwiYXBwZWFyYW5jZVN0eWxlIiwicHJvcFR5cGVzIiwicmVsIiwic3RyaW5nIiwiaHJlZiIsInRhcmdldCIsIm9uZU9mIiwiT2JqZWN0Iiwia2V5cyIsImRlZmF1bHRQcm9wcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsT0FBT0EsS0FBUCxJQUFnQkMsYUFBaEIsUUFBcUMsT0FBckM7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsT0FBT0MsZUFBUCxNQUE0QiwwQkFBNUI7QUFDQSxPQUFPQyxJQUFQLE1BQWlCLFFBQWpCOztJQUVxQkMsSTs7Ozs7Ozs7Ozs7NkJBOEJWO0FBQUEsbUJBQzBCLEtBQUtDLEtBRC9CO0FBQUEsVUFDQ0MsVUFERCxVQUNDQSxVQUREO0FBQUEsVUFDZ0JELEtBRGhCOztBQUVQLFVBQU1FLGtCQUFrQkwsZ0JBQWdCSSxVQUFoQixDQUF4Qjs7QUFFQTtBQUNBLGFBQ0Usb0JBQUMsSUFBRDtBQUNFLFlBQUcsR0FETDtBQUVFLHdCQUFlLFdBRmpCO0FBR0UsZUFBTyxJQUhUO0FBSUUsYUFBS0M7QUFKUCxTQUtNRixLQUxOLEVBREY7QUFTRDs7OztFQTVDK0JMLGE7O0FBQWJJLEksQ0FDWkksUyxnQkFDRkwsS0FBS0ssUzs7QUFFUjs7OztBQUlBQyxPQUFLUixVQUFVUyxNOztBQUVmOzs7QUFHQUMsUUFBTVYsVUFBVVMsTTs7QUFFaEI7OztBQUdBRSxVQUFRWCxVQUFVUyxNOztBQUVsQjs7O0FBR0FKLGNBQVlMLFVBQVVZLEtBQVYsQ0FBZ0JDLE9BQU9DLElBQVAsQ0FBWWIsZUFBWixDQUFoQjs7QUF2QktFLEksQ0EwQlpZLFksR0FBZTtBQUNwQlYsY0FBWTtBQURRLEM7ZUExQkhGLEkiLCJmaWxlIjoiTGluay5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgTGlua0FwcGVhcmFuY2VzIGZyb20gJy4vc3R5bGVzL0xpbmtBcHBlYXJhbmNlcydcbmltcG9ydCBUZXh0IGZyb20gJy4vVGV4dCdcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTGluayBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC4uLlRleHQucHJvcFR5cGVzLFxuXG4gICAgLyoqXG4gICAgICogVGhpcyBhdHRyaWJ1dGUgbmFtZXMgYSByZWxhdGlvbnNoaXAgb2YgdGhlIGxpbmtlZCBkb2N1bWVudCB0byB0aGUgY3VycmVudCBkb2N1bWVudC5cbiAgICAgKiBDb21tb24gdXNlIGNhc2UgaXM6IHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIi5cbiAgICAgKi9cbiAgICByZWw6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgICAvKipcbiAgICAgKiBTcGVjaWZpZXMgdGhlIFVSTCBvZiB0aGUgbGlua2VkIHJlc291cmNlLiBBIFVSTCBtaWdodCBiZSBhYnNvbHV0ZSBvciByZWxhdGl2ZS5cbiAgICAgKi9cbiAgICBocmVmOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gICAgLyoqXG4gICAgICogVGFyZ2V0IGF0cnJpYnV0ZSwgY29tbW9uIHVzZSBjYXNlIGlzIHRhcmdldD1cIl9ibGFuay5cIlxuICAgICAqL1xuICAgIHRhcmdldDogUHJvcFR5cGVzLnN0cmluZyxcblxuICAgIC8qKlxuICAgICAqIFRoZSBhcHBlYXJhbmNlIG9mIHRoZSBMaW5rLiBDYW4gYmUgYmx1ZSwgZ3JlZW4gb3IgbmV1dHJhbC5cbiAgICAgKi9cbiAgICBhcHBlYXJhbmNlOiBQcm9wVHlwZXMub25lT2YoT2JqZWN0LmtleXMoTGlua0FwcGVhcmFuY2VzKSlcbiAgfVxuXG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgYXBwZWFyYW5jZTogJ2dyZWVuJ1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgYXBwZWFyYW5jZSwgLi4ucHJvcHMgfSA9IHRoaXMucHJvcHNcbiAgICBjb25zdCBhcHBlYXJhbmNlU3R5bGUgPSBMaW5rQXBwZWFyYW5jZXNbYXBwZWFyYW5jZV1cblxuICAgIC8vIE1hbmFnZSB0aGUgY29sb3IgdGhyb3VnaCB0aGUgYXBwZWFyYW5jZVxuICAgIHJldHVybiAoXG4gICAgICA8VGV4dFxuICAgICAgICBpcz1cImFcIlxuICAgICAgICB0ZXh0RGVjb3JhdGlvbj1cInVuZGVybGluZVwiXG4gICAgICAgIGNvbG9yPXtudWxsfVxuICAgICAgICBjc3M9e2FwcGVhcmFuY2VTdHlsZX1cbiAgICAgICAgey4uLnByb3BzfVxuICAgICAgLz5cbiAgICApXG4gIH1cbn1cbiJdfQ==