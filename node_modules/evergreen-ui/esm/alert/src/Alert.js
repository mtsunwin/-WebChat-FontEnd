var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { spacing, dimensions, position, layout } from 'ui-box';
import { colors } from '../../colors';
import { Pane } from '../../layers';
import { Text } from '../../typography';
import { IconButton } from '../../buttons';
import { CheckCircleIcon, DangerIcon, QuestionIcon, WarningIcon } from '../../icons';

var getColorForType = function getColorForType(type) {
  switch (type) {
    case 'success':
      return colors.green['500'];
    case 'question':
    default:
      return colors.blue['500'];
    case 'danger':
      return colors.red['500'];
    case 'warning':
      return colors.yellow['500'];
  }
};

var getIconForType = function getIconForType(type) {
  var iconProps = {
    size: 22,
    iconSize: 14,
    color: getColorForType(type)
  };

  switch (type) {
    case 'success':
      return React.createElement(CheckCircleIcon, iconProps);
    case 'question':
    default:
      return React.createElement(QuestionIcon, iconProps);
    case 'danger':
      return React.createElement(DangerIcon, iconProps);
    case 'warning':
      return React.createElement(WarningIcon, iconProps);
  }
};

var getStyle = function getStyle(_ref) {
  var type = _ref.type;
  return {
    '&:before': {
      content: '""',
      width: 3,
      height: '100%',
      position: 'absolute',
      top: 0,
      left: 0,
      backgroundColor: getColorForType(type)
    }
  };
};

var AlertAppearances = {
  default: {
    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['20A']
  },
  card: {
    elevation: 1,
    borderRadius: 3
  }
};

var Alert = function (_PureComponent) {
  _inherits(Alert, _PureComponent);

  function Alert() {
    _classCallCheck(this, Alert);

    return _possibleConstructorReturn(this, (Alert.__proto__ || Object.getPrototypeOf(Alert)).apply(this, arguments));
  }

  _createClass(Alert, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          title = _props.title,
          type = _props.type,
          hasTrim = _props.hasTrim,
          hasIcon = _props.hasIcon,
          children = _props.children,
          appearance = _props.appearance,
          isRemoveable = _props.isRemoveable,
          onRemove = _props.onRemove,
          props = _objectWithoutProperties(_props, ['title', 'type', 'hasTrim', 'hasIcon', 'children', 'appearance', 'isRemoveable', 'onRemove']);

      var style = {};
      if (hasTrim && type !== 'default') {
        style = getStyle({ type: type });
      }

      var appearanceProps = AlertAppearances[appearance];

      return React.createElement(
        Pane,
        _extends({
          role: 'alert',
          backgroundColor: 'white',
          overflow: 'hidden',
          position: 'relative',
          display: 'flex',
          paddingY: 12,
          paddingX: 16,
          css: style
        }, appearanceProps, props),
        hasIcon && type !== 'default' && React.createElement(
          Pane,
          { marginRight: 8 },
          getIconForType(type)
        ),
        React.createElement(
          Pane,
          { display: 'flex', width: '100%' },
          React.createElement(
            Pane,
            { flex: 1 },
            React.createElement(
              Text,
              {
                is: 'h4',
                fontWeight: 600,
                size: 400,
                marginTop: 0,
                marginBottom: 0
              },
              title
            ),
            typeof children === 'string' ? React.createElement(
              Text,
              { size: 400, color: 'muted' },
              children
            ) : children
          ),
          isRemoveable && React.createElement(
            Pane,
            { marginLeft: 24, flexShrink: 0 },
            React.createElement(IconButton, {
              onClick: onRemove,
              height: 24,
              appearance: 'ghost',
              icon: 'close'
            })
          )
        )
      );
    }
  }]);

  return Alert;
}(PureComponent);

Alert.propTypes = _extends({}, spacing.propTypes, position.propTypes, layout.propTypes, dimensions.propTypes, {

  /**
   * The content of the alert. When a string is passed it is wrapped in a `<Text size={400} />` component.
   */
  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),

  /**
   * The type of the alert.
   */
  type: PropTypes.oneOf(['default', 'success', 'warning', 'danger', 'question']),

  /**
   * The title of the alert.
   */
  title: PropTypes.node,

  /**
   * When true, show a border on the left matching the type.
   */
  hasTrim: PropTypes.bool,

  /**
   * When true, show a icon on the left matching the type,
   */
  hasIcon: PropTypes.bool,

  /**
   * When true, show a remove icon button.
   */
  isRemoveable: PropTypes.bool,

  /**
   * Function called when the remove button is clicked.
   */
  onRemove: PropTypes.func,

  /**
   * The appearance of the alert.
   */
  appearance: PropTypes.oneOf(['default', 'card'])
});
Alert.defaultProps = {
  type: 'default',
  hasTrim: true,
  hasIcon: true,
  isRemoveable: false,
  appearance: 'default'
};
export default Alert;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,