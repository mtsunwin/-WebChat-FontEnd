var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { Text } from '../../typography';
import { getBorderRadiusForControlHeight, getTextStyleForControlHeight, InputAppearances } from '../../shared-styles';

var TextInput = function (_PureComponent) {
  _inherits(TextInput, _PureComponent);

  function TextInput() {
    _classCallCheck(this, TextInput);

    return _possibleConstructorReturn(this, (TextInput.__proto__ || Object.getPrototypeOf(TextInput)).apply(this, arguments));
  }

  _createClass(TextInput, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          css = _props.css,
          width = _props.width,
          height = _props.height,
          disabled = _props.disabled,
          required = _props.required,
          isInvalid = _props.isInvalid,
          appearance = _props.appearance,
          placeholder = _props.placeholder,
          spellCheck = _props.spellCheck,
          props = _objectWithoutProperties(_props, ['css', 'width', 'height', 'disabled', 'required', 'isInvalid', 'appearance', 'placeholder', 'spellCheck']);

      var appearanceStyle = InputAppearances[appearance];
      var textStyle = getTextStyleForControlHeight({ height: height });
      var borderRadius = getBorderRadiusForControlHeight({ height: height });

      return React.createElement(Text, _extends({
        is: 'input',
        type: 'text',
        width: width,
        height: height,
        required: required,
        disabled: disabled,
        placeholder: placeholder,
        paddingLeft: Math.round(height / 3.2),
        paddingRight: Math.round(height / 3.2),
        borderRadius: borderRadius,
        spellCheck: spellCheck,
        'aria-invalid': isInvalid
      }, disabled ? { color: 'extraMuted' } : {}, textStyle, {
        css: _extends({}, css, appearanceStyle)
      }, props));
    }
  }]);

  return TextInput;
}(PureComponent);

TextInput.propTypes = _extends({}, Text.propTypes, {

  /**
   * Makes the input element required.
   */
  required: PropTypes.bool,

  /**
   * Makes the input element disabled.
   */
  disabled: PropTypes.bool,

  /**
   * Sets visual styling to be invalid.
   */
  isInvalid: PropTypes.bool,

  /**
   * Use the native spell check functionality of the browser.
   */
  spellCheck: PropTypes.bool,

  /**
   * The placeholder text when there is no value present.
   */
  placeholder: PropTypes.string,

  /**
   * The appearance of the TextInput.
   */
  appearance: PropTypes.oneOf(Object.keys(InputAppearances)),

  /**
   * The width of the TextInput.
   */
  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
});
TextInput.defaultProps = {
  appearance: 'default',
  height: 32,
  width: 280,
  disabled: false,
  isInvalid: false,
  spellCheck: true
};
export default TextInput;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90ZXh0LWlucHV0L3NyYy9UZXh0SW5wdXQuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJQdXJlQ29tcG9uZW50IiwiUHJvcFR5cGVzIiwiVGV4dCIsImdldEJvcmRlclJhZGl1c0ZvckNvbnRyb2xIZWlnaHQiLCJnZXRUZXh0U3R5bGVGb3JDb250cm9sSGVpZ2h0IiwiSW5wdXRBcHBlYXJhbmNlcyIsIlRleHRJbnB1dCIsInByb3BzIiwiY3NzIiwid2lkdGgiLCJoZWlnaHQiLCJkaXNhYmxlZCIsInJlcXVpcmVkIiwiaXNJbnZhbGlkIiwiYXBwZWFyYW5jZSIsInBsYWNlaG9sZGVyIiwic3BlbGxDaGVjayIsImFwcGVhcmFuY2VTdHlsZSIsInRleHRTdHlsZSIsImJvcmRlclJhZGl1cyIsIk1hdGgiLCJyb3VuZCIsImNvbG9yIiwicHJvcFR5cGVzIiwiYm9vbCIsInN0cmluZyIsIm9uZU9mIiwiT2JqZWN0Iiwia2V5cyIsIm9uZU9mVHlwZSIsIm51bWJlciIsImRlZmF1bHRQcm9wcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsT0FBT0EsS0FBUCxJQUFnQkMsYUFBaEIsUUFBcUMsT0FBckM7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLFlBQXRCO0FBQ0EsU0FBU0MsSUFBVCxRQUFxQixrQkFBckI7QUFDQSxTQUNFQywrQkFERixFQUVFQyw0QkFGRixFQUdFQyxnQkFIRixRQUlPLHFCQUpQOztJQU1xQkMsUzs7Ozs7Ozs7Ozs7NkJBb0RWO0FBQUEsbUJBWUgsS0FBS0MsS0FaRjtBQUFBLFVBRUxDLEdBRkssVUFFTEEsR0FGSztBQUFBLFVBR0xDLEtBSEssVUFHTEEsS0FISztBQUFBLFVBSUxDLE1BSkssVUFJTEEsTUFKSztBQUFBLFVBS0xDLFFBTEssVUFLTEEsUUFMSztBQUFBLFVBTUxDLFFBTkssVUFNTEEsUUFOSztBQUFBLFVBT0xDLFNBUEssVUFPTEEsU0FQSztBQUFBLFVBUUxDLFVBUkssVUFRTEEsVUFSSztBQUFBLFVBU0xDLFdBVEssVUFTTEEsV0FUSztBQUFBLFVBVUxDLFVBVkssVUFVTEEsVUFWSztBQUFBLFVBV0ZULEtBWEU7O0FBYVAsVUFBTVUsa0JBQWtCWixpQkFBaUJTLFVBQWpCLENBQXhCO0FBQ0EsVUFBTUksWUFBWWQsNkJBQTZCLEVBQUVNLGNBQUYsRUFBN0IsQ0FBbEI7QUFDQSxVQUFNUyxlQUFlaEIsZ0NBQWdDLEVBQUVPLGNBQUYsRUFBaEMsQ0FBckI7O0FBRUEsYUFDRSxvQkFBQyxJQUFEO0FBQ0UsWUFBRyxPQURMO0FBRUUsY0FBSyxNQUZQO0FBR0UsZUFBT0QsS0FIVDtBQUlFLGdCQUFRQyxNQUpWO0FBS0Usa0JBQVVFLFFBTFo7QUFNRSxrQkFBVUQsUUFOWjtBQU9FLHFCQUFhSSxXQVBmO0FBUUUscUJBQWFLLEtBQUtDLEtBQUwsQ0FBV1gsU0FBUyxHQUFwQixDQVJmO0FBU0Usc0JBQWNVLEtBQUtDLEtBQUwsQ0FBV1gsU0FBUyxHQUFwQixDQVRoQjtBQVVFLHNCQUFjUyxZQVZoQjtBQVdFLG9CQUFZSCxVQVhkO0FBWUUsd0JBQWNIO0FBWmhCLFNBYU9GLFdBQVcsRUFBRVcsT0FBTyxZQUFULEVBQVgsR0FBcUMsRUFiNUMsRUFjTUosU0FkTjtBQWVFLDBCQUFVVixHQUFWLEVBQWtCUyxlQUFsQjtBQWZGLFNBZ0JNVixLQWhCTixFQURGO0FBb0JEOzs7O0VBekZvQ1AsYTs7QUFBbEJNLFMsQ0FDWmlCLFMsZ0JBSUZyQixLQUFLcUIsUzs7QUFFUjs7O0FBR0FYLFlBQVVYLFVBQVV1QixJOztBQUVwQjs7O0FBR0FiLFlBQVVWLFVBQVV1QixJOztBQUVwQjs7O0FBR0FYLGFBQVdaLFVBQVV1QixJOztBQUVyQjs7O0FBR0FSLGNBQVlmLFVBQVV1QixJOztBQUV0Qjs7O0FBR0FULGVBQWFkLFVBQVV3QixNOztBQUV2Qjs7O0FBR0FYLGNBQVliLFVBQVV5QixLQUFWLENBQWdCQyxPQUFPQyxJQUFQLENBQVl2QixnQkFBWixDQUFoQixDOztBQUVaOzs7QUFHQUksU0FBT1IsVUFBVTRCLFNBQVYsQ0FBb0IsQ0FBQzVCLFVBQVV3QixNQUFYLEVBQW1CeEIsVUFBVTZCLE1BQTdCLENBQXBCOztBQXhDVXhCLFMsQ0EyQ1p5QixZLEdBQWU7QUFDcEJqQixjQUFZLFNBRFE7QUFFcEJKLFVBQVEsRUFGWTtBQUdwQkQsU0FBTyxHQUhhO0FBSXBCRSxZQUFVLEtBSlU7QUFLcEJFLGFBQVcsS0FMUztBQU1wQkcsY0FBWTtBQU5RLEM7ZUEzQ0hWLFMiLCJmaWxlIjoiVGV4dElucHV0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFB1cmVDb21wb25lbnQgfSBmcm9tICdyZWFjdCdcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcydcbmltcG9ydCB7IFRleHQgfSBmcm9tICcuLi8uLi90eXBvZ3JhcGh5J1xuaW1wb3J0IHtcbiAgZ2V0Qm9yZGVyUmFkaXVzRm9yQ29udHJvbEhlaWdodCxcbiAgZ2V0VGV4dFN0eWxlRm9yQ29udHJvbEhlaWdodCxcbiAgSW5wdXRBcHBlYXJhbmNlc1xufSBmcm9tICcuLi8uLi9zaGFyZWQtc3R5bGVzJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUZXh0SW5wdXQgZXh0ZW5kcyBQdXJlQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAvKipcbiAgICAgKiBDb21wb3NlcyB0aGUgVGV4dCBjb21wb25lbnQgYXMgdGhlIGJhc2UuXG4gICAgICovXG4gICAgLi4uVGV4dC5wcm9wVHlwZXMsXG5cbiAgICAvKipcbiAgICAgKiBNYWtlcyB0aGUgaW5wdXQgZWxlbWVudCByZXF1aXJlZC5cbiAgICAgKi9cbiAgICByZXF1aXJlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgICAvKipcbiAgICAgKiBNYWtlcyB0aGUgaW5wdXQgZWxlbWVudCBkaXNhYmxlZC5cbiAgICAgKi9cbiAgICBkaXNhYmxlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHZpc3VhbCBzdHlsaW5nIHRvIGJlIGludmFsaWQuXG4gICAgICovXG4gICAgaXNJbnZhbGlkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAgIC8qKlxuICAgICAqIFVzZSB0aGUgbmF0aXZlIHNwZWxsIGNoZWNrIGZ1bmN0aW9uYWxpdHkgb2YgdGhlIGJyb3dzZXIuXG4gICAgICovXG4gICAgc3BlbGxDaGVjazogUHJvcFR5cGVzLmJvb2wsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgcGxhY2Vob2xkZXIgdGV4dCB3aGVuIHRoZXJlIGlzIG5vIHZhbHVlIHByZXNlbnQuXG4gICAgICovXG4gICAgcGxhY2Vob2xkZXI6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgYXBwZWFyYW5jZSBvZiB0aGUgVGV4dElucHV0LlxuICAgICAqL1xuICAgIGFwcGVhcmFuY2U6IFByb3BUeXBlcy5vbmVPZihPYmplY3Qua2V5cyhJbnB1dEFwcGVhcmFuY2VzKSksXG5cbiAgICAvKipcbiAgICAgKiBUaGUgd2lkdGggb2YgdGhlIFRleHRJbnB1dC5cbiAgICAgKi9cbiAgICB3aWR0aDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm51bWJlcl0pXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGFwcGVhcmFuY2U6ICdkZWZhdWx0JyxcbiAgICBoZWlnaHQ6IDMyLFxuICAgIHdpZHRoOiAyODAsXG4gICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgIGlzSW52YWxpZDogZmFsc2UsXG4gICAgc3BlbGxDaGVjazogdHJ1ZVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGNzcyxcbiAgICAgIHdpZHRoLFxuICAgICAgaGVpZ2h0LFxuICAgICAgZGlzYWJsZWQsXG4gICAgICByZXF1aXJlZCxcbiAgICAgIGlzSW52YWxpZCxcbiAgICAgIGFwcGVhcmFuY2UsXG4gICAgICBwbGFjZWhvbGRlcixcbiAgICAgIHNwZWxsQ2hlY2ssXG4gICAgICAuLi5wcm9wc1xuICAgIH0gPSB0aGlzLnByb3BzXG4gICAgY29uc3QgYXBwZWFyYW5jZVN0eWxlID0gSW5wdXRBcHBlYXJhbmNlc1thcHBlYXJhbmNlXVxuICAgIGNvbnN0IHRleHRTdHlsZSA9IGdldFRleHRTdHlsZUZvckNvbnRyb2xIZWlnaHQoeyBoZWlnaHQgfSlcbiAgICBjb25zdCBib3JkZXJSYWRpdXMgPSBnZXRCb3JkZXJSYWRpdXNGb3JDb250cm9sSGVpZ2h0KHsgaGVpZ2h0IH0pXG5cbiAgICByZXR1cm4gKFxuICAgICAgPFRleHRcbiAgICAgICAgaXM9XCJpbnB1dFwiXG4gICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgd2lkdGg9e3dpZHRofVxuICAgICAgICBoZWlnaHQ9e2hlaWdodH1cbiAgICAgICAgcmVxdWlyZWQ9e3JlcXVpcmVkfVxuICAgICAgICBkaXNhYmxlZD17ZGlzYWJsZWR9XG4gICAgICAgIHBsYWNlaG9sZGVyPXtwbGFjZWhvbGRlcn1cbiAgICAgICAgcGFkZGluZ0xlZnQ9e01hdGgucm91bmQoaGVpZ2h0IC8gMy4yKX1cbiAgICAgICAgcGFkZGluZ1JpZ2h0PXtNYXRoLnJvdW5kKGhlaWdodCAvIDMuMil9XG4gICAgICAgIGJvcmRlclJhZGl1cz17Ym9yZGVyUmFkaXVzfVxuICAgICAgICBzcGVsbENoZWNrPXtzcGVsbENoZWNrfVxuICAgICAgICBhcmlhLWludmFsaWQ9e2lzSW52YWxpZH1cbiAgICAgICAgey4uLihkaXNhYmxlZCA/IHsgY29sb3I6ICdleHRyYU11dGVkJyB9IDoge30pfVxuICAgICAgICB7Li4udGV4dFN0eWxlfVxuICAgICAgICBjc3M9e3sgLi4uY3NzLCAuLi5hcHBlYXJhbmNlU3R5bGUgfX1cbiAgICAgICAgey4uLnByb3BzfVxuICAgICAgLz5cbiAgICApXG4gIH1cbn1cbiJdfQ==