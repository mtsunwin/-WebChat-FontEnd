var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { IconMap, IconAim } from '../../icons';
import { getIconSizeForControlHeight } from '../../shared-styles';
import Button from './Button';

var IconButton = function (_PureComponent) {
  _inherits(IconButton, _PureComponent);

  function IconButton() {
    _classCallCheck(this, IconButton);

    return _possibleConstructorReturn(this, (IconButton.__proto__ || Object.getPrototypeOf(IconButton)).apply(this, arguments));
  }

  _createClass(IconButton, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          iconAim = _props.iconAim,
          iconKey = _props.icon,
          height = _props.height,
          props = _objectWithoutProperties(_props, ['iconAim', 'icon', 'height']);

      var icon = IconMap[iconKey];
      var iconSize = getIconSizeForControlHeight({ height: height });

      return React.createElement(
        Button,
        _extends({ height: height, paddingLeft: 0, paddingRight: 0 }, props),
        icon && React.createElement(icon, {
          aim: iconAim,
          iconSize: iconSize,
          color: 'inherit',
          size: height
        })
      );
    }
  }]);

  return IconButton;
}(PureComponent);

IconButton.propTypes = _extends({}, Button.propTypes, {

  /**
   * The icon to be used. Can be any icon from Evergreen.
   */
  icon: PropTypes.oneOf(Object.keys(IconMap)),

  /**
   * The aim of the icon.
   */
  iconAim: PropTypes.oneOf(Object.keys(IconAim)).isRequired
});
IconButton.defaultProps = {
  appearance: 'default',
  height: 32,
  iconAim: 'none'
};
export default IconButton;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9idXR0b25zL3NyYy9JY29uQnV0dG9uLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwiUHVyZUNvbXBvbmVudCIsIlByb3BUeXBlcyIsIkljb25NYXAiLCJJY29uQWltIiwiZ2V0SWNvblNpemVGb3JDb250cm9sSGVpZ2h0IiwiQnV0dG9uIiwiSWNvbkJ1dHRvbiIsInByb3BzIiwiaWNvbkFpbSIsImljb25LZXkiLCJpY29uIiwiaGVpZ2h0IiwiaWNvblNpemUiLCJjcmVhdGVFbGVtZW50IiwiYWltIiwiY29sb3IiLCJzaXplIiwicHJvcFR5cGVzIiwib25lT2YiLCJPYmplY3QiLCJrZXlzIiwiaXNSZXF1aXJlZCIsImRlZmF1bHRQcm9wcyIsImFwcGVhcmFuY2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLE9BQU9BLEtBQVAsSUFBZ0JDLGFBQWhCLFFBQXFDLE9BQXJDO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixZQUF0QjtBQUNBLFNBQVNDLE9BQVQsRUFBa0JDLE9BQWxCLFFBQWlDLGFBQWpDO0FBQ0EsU0FBU0MsMkJBQVQsUUFBNEMscUJBQTVDO0FBQ0EsT0FBT0MsTUFBUCxNQUFtQixVQUFuQjs7SUFFcUJDLFU7Ozs7Ozs7Ozs7OzZCQXdCVjtBQUFBLG1CQUM4QyxLQUFLQyxLQURuRDtBQUFBLFVBQ0NDLE9BREQsVUFDQ0EsT0FERDtBQUFBLFVBQ2dCQyxPQURoQixVQUNVQyxJQURWO0FBQUEsVUFDeUJDLE1BRHpCLFVBQ3lCQSxNQUR6QjtBQUFBLFVBQ29DSixLQURwQzs7QUFFUCxVQUFNRyxPQUFPUixRQUFRTyxPQUFSLENBQWI7QUFDQSxVQUFNRyxXQUFXUiw0QkFBNEIsRUFBRU8sY0FBRixFQUE1QixDQUFqQjs7QUFFQSxhQUNFO0FBQUMsY0FBRDtBQUFBLG1CQUFRLFFBQVFBLE1BQWhCLEVBQXdCLGFBQWEsQ0FBckMsRUFBd0MsY0FBYyxDQUF0RCxJQUE2REosS0FBN0Q7QUFDR0csZ0JBQ0NYLE1BQU1jLGFBQU4sQ0FBb0JILElBQXBCLEVBQTBCO0FBQ3hCSSxlQUFLTixPQURtQjtBQUV4QkksNEJBRndCO0FBR3hCRyxpQkFBTyxTQUhpQjtBQUl4QkMsZ0JBQU1MO0FBSmtCLFNBQTFCO0FBRkosT0FERjtBQVdEOzs7O0VBeENxQ1gsYTs7QUFBbkJNLFUsQ0FDWlcsUyxnQkFJRlosT0FBT1ksUzs7QUFFVjs7O0FBR0FQLFFBQU1ULFVBQVVpQixLQUFWLENBQWdCQyxPQUFPQyxJQUFQLENBQVlsQixPQUFaLENBQWhCLEM7O0FBRU47OztBQUdBTSxXQUFTUCxVQUFVaUIsS0FBVixDQUFnQkMsT0FBT0MsSUFBUCxDQUFZakIsT0FBWixDQUFoQixFQUFzQ2tCOztBQWY5QmYsVSxDQWtCWmdCLFksR0FBZTtBQUNwQkMsY0FBWSxTQURRO0FBRXBCWixVQUFRLEVBRlk7QUFHcEJILFdBQVM7QUFIVyxDO2VBbEJIRixVIiwiZmlsZSI6Ikljb25CdXR0b24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUHVyZUNvbXBvbmVudCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IHsgSWNvbk1hcCwgSWNvbkFpbSB9IGZyb20gJy4uLy4uL2ljb25zJ1xuaW1wb3J0IHsgZ2V0SWNvblNpemVGb3JDb250cm9sSGVpZ2h0IH0gZnJvbSAnLi4vLi4vc2hhcmVkLXN0eWxlcydcbmltcG9ydCBCdXR0b24gZnJvbSAnLi9CdXR0b24nXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEljb25CdXR0b24gZXh0ZW5kcyBQdXJlQ29tcG9uZW50IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICAvKipcbiAgICAgKiBDb21wb3NlcyB0aGUgQnV0dG9uIGNvbXBvbmVudCBhcyB0aGUgYmFzZS5cbiAgICAgKi9cbiAgICAuLi5CdXR0b24ucHJvcFR5cGVzLFxuXG4gICAgLyoqXG4gICAgICogVGhlIGljb24gdG8gYmUgdXNlZC4gQ2FuIGJlIGFueSBpY29uIGZyb20gRXZlcmdyZWVuLlxuICAgICAqL1xuICAgIGljb246IFByb3BUeXBlcy5vbmVPZihPYmplY3Qua2V5cyhJY29uTWFwKSksXG5cbiAgICAvKipcbiAgICAgKiBUaGUgYWltIG9mIHRoZSBpY29uLlxuICAgICAqL1xuICAgIGljb25BaW06IFByb3BUeXBlcy5vbmVPZihPYmplY3Qua2V5cyhJY29uQWltKSkuaXNSZXF1aXJlZFxuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBhcHBlYXJhbmNlOiAnZGVmYXVsdCcsXG4gICAgaGVpZ2h0OiAzMixcbiAgICBpY29uQWltOiAnbm9uZSdcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGljb25BaW0sIGljb246IGljb25LZXksIGhlaWdodCwgLi4ucHJvcHMgfSA9IHRoaXMucHJvcHNcbiAgICBjb25zdCBpY29uID0gSWNvbk1hcFtpY29uS2V5XVxuICAgIGNvbnN0IGljb25TaXplID0gZ2V0SWNvblNpemVGb3JDb250cm9sSGVpZ2h0KHsgaGVpZ2h0IH0pXG5cbiAgICByZXR1cm4gKFxuICAgICAgPEJ1dHRvbiBoZWlnaHQ9e2hlaWdodH0gcGFkZGluZ0xlZnQ9ezB9IHBhZGRpbmdSaWdodD17MH0gey4uLnByb3BzfT5cbiAgICAgICAge2ljb24gJiZcbiAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KGljb24sIHtcbiAgICAgICAgICAgIGFpbTogaWNvbkFpbSxcbiAgICAgICAgICAgIGljb25TaXplLFxuICAgICAgICAgICAgY29sb3I6ICdpbmhlcml0JyxcbiAgICAgICAgICAgIHNpemU6IGhlaWdodFxuICAgICAgICAgIH0pfVxuICAgICAgPC9CdXR0b24+XG4gICAgKVxuICB9XG59XG4iXX0=