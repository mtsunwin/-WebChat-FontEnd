var _extends2;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import { colors } from '../../../colors';

var disabledState = '&[disabled] + div';
var hoverState = '&:not([disabled]):hover + div';
var focusState = '&:not([disabled]):focus + div';
var activeState = '&:not([disabled]):active + div';
var checkedState = '&:checked + div';
var checkedActiveState = '&:not([disabled]):checked:active + div';
var checkedDisabledState = '&[disabled]:checked + div';

var hiddenCheckboxStyle = {
  border: '0',
  clip: 'rect(1px, 1px, 1px, 1px)',
  height: '1',
  overflow: 'hidden',
  padding: '0',
  position: 'absolute',
  whiteSpace: 'nowrap',
  width: '1',
  opacity: '0'
};

var SwitchAppearances = {
  default: _extends({}, hiddenCheckboxStyle, (_extends2 = {
    '& + div > svg': {
      display: 'none'
    },
    '& + div': {
      transition: 'all 200ms ease-in-out',
      cursor: 'pointer',
      color: 'white',
      boxSizing: 'border-box',
      backgroundColor: colors.neutral['100A'],
      borderRadius: 9999,
      boxShadow: 'inset 0 0 0 1px ' + colors.neutral['20A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['10A']
    }
  }, _defineProperty(_extends2, disabledState, {
    cursor: 'not-allowed',
    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['20A'],
    backgroundColor: colors.neutral['30A'],
    backgroundImage: 'none'
  }), _defineProperty(_extends2, hoverState, {
    backgroundImage: 'linear-gradient(to top, ' + colors.neutral['7A'] + ', ' + colors.neutral['3A'] + ' )',
    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['40A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['15A']
  }), _defineProperty(_extends2, focusState, {
    boxShadow: '0 0 0 3px ' + colors.blue['20A'] + ', inset 0 0 0 1px ' + colors.neutral['70A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['10A']
  }), _defineProperty(_extends2, activeState, {
    backgroundImage: 'none',
    backgroundColor: colors.neutral['200A']
    // BoxShadow: `inset 0 0 0 1px ${colors.blue['80A']}`,
  }), _defineProperty(_extends2, checkedState, {
    backgroundColor: colors.blue['500'],
    color: 'white',
    backgroundImage: 'linear-gradient(to top, ' + colors.blue['500'] + ', ' + colors.blue['600'] + ')',
    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['30A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['30A'],
    '& > svg': {
      display: 'block'
    }
  }), _defineProperty(_extends2, checkedDisabledState, {
    color: 'white',
    backgroundColor: 'white',
    backgroundImage: 'linear-gradient(to top, ' + colors.neutral['300'] + ', ' + colors.neutral['400'] + ')',
    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['20A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['10A'],
    '& > svg': {
      display: 'block'
    }
  }), _defineProperty(_extends2, checkedActiveState, {
    backgroundColor: colors.blue['500'],
    color: 'white',
    backgroundImage: 'linear-gradient(to top, ' + colors.blue['800'] + ', ' + colors.blue['900'] + ')',
    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['30A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['30A'],
    '& > svg': {
      display: 'block'
    }
  }), _extends2))
};

export default SwitchAppearances;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zd2l0Y2gvc3JjL3N0eWxlcy9Td2l0Y2hBcHBlYXJhbmNlcy5qcyJdLCJuYW1lcyI6WyJjb2xvcnMiLCJkaXNhYmxlZFN0YXRlIiwiaG92ZXJTdGF0ZSIsImZvY3VzU3RhdGUiLCJhY3RpdmVTdGF0ZSIsImNoZWNrZWRTdGF0ZSIsImNoZWNrZWRBY3RpdmVTdGF0ZSIsImNoZWNrZWREaXNhYmxlZFN0YXRlIiwiaGlkZGVuQ2hlY2tib3hTdHlsZSIsImJvcmRlciIsImNsaXAiLCJoZWlnaHQiLCJvdmVyZmxvdyIsInBhZGRpbmciLCJwb3NpdGlvbiIsIndoaXRlU3BhY2UiLCJ3aWR0aCIsIm9wYWNpdHkiLCJTd2l0Y2hBcHBlYXJhbmNlcyIsImRlZmF1bHQiLCJkaXNwbGF5IiwidHJhbnNpdGlvbiIsImN1cnNvciIsImNvbG9yIiwiYm94U2l6aW5nIiwiYmFja2dyb3VuZENvbG9yIiwibmV1dHJhbCIsImJvcmRlclJhZGl1cyIsImJveFNoYWRvdyIsImJhY2tncm91bmRJbWFnZSIsImJsdWUiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLFNBQVNBLE1BQVQsUUFBdUIsaUJBQXZCOztBQUVBLElBQU1DLGdCQUFnQixtQkFBdEI7QUFDQSxJQUFNQyxhQUFhLCtCQUFuQjtBQUNBLElBQU1DLGFBQWEsK0JBQW5CO0FBQ0EsSUFBTUMsY0FBYyxnQ0FBcEI7QUFDQSxJQUFNQyxlQUFlLGlCQUFyQjtBQUNBLElBQU1DLHFCQUFxQix3Q0FBM0I7QUFDQSxJQUFNQyx1QkFBdUIsMkJBQTdCOztBQUVBLElBQU1DLHNCQUFzQjtBQUMxQkMsVUFBUSxHQURrQjtBQUUxQkMsUUFBTSwwQkFGb0I7QUFHMUJDLFVBQVEsR0FIa0I7QUFJMUJDLFlBQVUsUUFKZ0I7QUFLMUJDLFdBQVMsR0FMaUI7QUFNMUJDLFlBQVUsVUFOZ0I7QUFPMUJDLGNBQVksUUFQYztBQVExQkMsU0FBTyxHQVJtQjtBQVMxQkMsV0FBUztBQVRpQixDQUE1Qjs7QUFZQSxJQUFNQyxvQkFBb0I7QUFDeEJDLHdCQUNLWCxtQkFETDtBQUVFLHFCQUFpQjtBQUNmWSxlQUFTO0FBRE0sS0FGbkI7QUFLRSxlQUFXO0FBQ1RDLGtCQUFZLHVCQURIO0FBRVRDLGNBQVEsU0FGQztBQUdUQyxhQUFPLE9BSEU7QUFJVEMsaUJBQVcsWUFKRjtBQUtUQyx1QkFBaUJ6QixPQUFPMEIsT0FBUCxDQUFlLE1BQWYsQ0FMUjtBQU1UQyxvQkFBYyxJQU5MO0FBT1RDLHNDQUNFNUIsT0FBTzBCLE9BQVAsQ0FBZSxLQUFmLENBREYsNkJBRXdCMUIsT0FBTzBCLE9BQVAsQ0FBZSxLQUFmO0FBVGY7QUFMYixnQ0FnQkd6QixhQWhCSCxFQWdCbUI7QUFDZnFCLFlBQVEsYUFETztBQUVmTSxvQ0FBOEI1QixPQUFPMEIsT0FBUCxDQUFlLEtBQWYsQ0FGZjtBQUdmRCxxQkFBaUJ6QixPQUFPMEIsT0FBUCxDQUFlLEtBQWYsQ0FIRjtBQUlmRyxxQkFBaUI7QUFKRixHQWhCbkIsOEJBc0JHM0IsVUF0QkgsRUFzQmdCO0FBQ1oyQixrREFBNEM3QixPQUFPMEIsT0FBUCxDQUFlLElBQWYsQ0FBNUMsVUFDRTFCLE9BQU8wQixPQUFQLENBQWUsSUFBZixDQURGLE9BRFk7QUFJWkUsb0NBQ0U1QixPQUFPMEIsT0FBUCxDQUFlLEtBQWYsQ0FERiw2QkFFd0IxQixPQUFPMEIsT0FBUCxDQUFlLEtBQWY7QUFOWixHQXRCaEIsOEJBOEJHdkIsVUE5QkgsRUE4QmdCO0FBQ1p5Qiw4QkFBd0I1QixPQUFPOEIsSUFBUCxDQUFZLEtBQVosQ0FBeEIsMEJBQ0U5QixPQUFPMEIsT0FBUCxDQUFlLEtBQWYsQ0FERiw2QkFFd0IxQixPQUFPMEIsT0FBUCxDQUFlLEtBQWY7QUFIWixHQTlCaEIsOEJBbUNHdEIsV0FuQ0gsRUFtQ2lCO0FBQ2J5QixxQkFBaUIsTUFESjtBQUViSixxQkFBaUJ6QixPQUFPMEIsT0FBUCxDQUFlLE1BQWY7QUFDakI7QUFIYSxHQW5DakIsOEJBd0NHckIsWUF4Q0gsRUF3Q2tCO0FBQ2RvQixxQkFBaUJ6QixPQUFPOEIsSUFBUCxDQUFZLEtBQVosQ0FESDtBQUVkUCxXQUFPLE9BRk87QUFHZE0sa0RBQTRDN0IsT0FBTzhCLElBQVAsQ0FBWSxLQUFaLENBQTVDLFVBQ0U5QixPQUFPOEIsSUFBUCxDQUFZLEtBQVosQ0FERixNQUhjO0FBTWRGLG9DQUNFNUIsT0FBTzBCLE9BQVAsQ0FBZSxLQUFmLENBREYsNkJBRXdCMUIsT0FBTzBCLE9BQVAsQ0FBZSxLQUFmLENBUlY7QUFTZCxlQUFXO0FBQ1ROLGVBQVM7QUFEQTtBQVRHLEdBeENsQiw4QkFxREdiLG9CQXJESCxFQXFEMEI7QUFDdEJnQixXQUFPLE9BRGU7QUFFdEJFLHFCQUFpQixPQUZLO0FBR3RCSSxrREFBNEM3QixPQUFPMEIsT0FBUCxDQUFlLEtBQWYsQ0FBNUMsVUFDRTFCLE9BQU8wQixPQUFQLENBQWUsS0FBZixDQURGLE1BSHNCO0FBTXRCRSxvQ0FDRTVCLE9BQU8wQixPQUFQLENBQWUsS0FBZixDQURGLDZCQUV3QjFCLE9BQU8wQixPQUFQLENBQWUsS0FBZixDQVJGO0FBU3RCLGVBQVc7QUFDVE4sZUFBUztBQURBO0FBVFcsR0FyRDFCLDhCQWtFR2Qsa0JBbEVILEVBa0V3QjtBQUNwQm1CLHFCQUFpQnpCLE9BQU84QixJQUFQLENBQVksS0FBWixDQURHO0FBRXBCUCxXQUFPLE9BRmE7QUFHcEJNLGtEQUE0QzdCLE9BQU84QixJQUFQLENBQVksS0FBWixDQUE1QyxVQUNFOUIsT0FBTzhCLElBQVAsQ0FBWSxLQUFaLENBREYsTUFIb0I7QUFNcEJGLG9DQUNFNUIsT0FBTzBCLE9BQVAsQ0FBZSxLQUFmLENBREYsNkJBRXdCMUIsT0FBTzBCLE9BQVAsQ0FBZSxLQUFmLENBUko7QUFTcEIsZUFBVztBQUNUTixlQUFTO0FBREE7QUFUUyxHQWxFeEI7QUFEd0IsQ0FBMUI7O0FBbUZBLGVBQWVGLGlCQUFmIiwiZmlsZSI6IlN3aXRjaEFwcGVhcmFuY2VzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29sb3JzIH0gZnJvbSAnLi4vLi4vLi4vY29sb3JzJ1xuXG5jb25zdCBkaXNhYmxlZFN0YXRlID0gJyZbZGlzYWJsZWRdICsgZGl2J1xuY29uc3QgaG92ZXJTdGF0ZSA9ICcmOm5vdChbZGlzYWJsZWRdKTpob3ZlciArIGRpdidcbmNvbnN0IGZvY3VzU3RhdGUgPSAnJjpub3QoW2Rpc2FibGVkXSk6Zm9jdXMgKyBkaXYnXG5jb25zdCBhY3RpdmVTdGF0ZSA9ICcmOm5vdChbZGlzYWJsZWRdKTphY3RpdmUgKyBkaXYnXG5jb25zdCBjaGVja2VkU3RhdGUgPSAnJjpjaGVja2VkICsgZGl2J1xuY29uc3QgY2hlY2tlZEFjdGl2ZVN0YXRlID0gJyY6bm90KFtkaXNhYmxlZF0pOmNoZWNrZWQ6YWN0aXZlICsgZGl2J1xuY29uc3QgY2hlY2tlZERpc2FibGVkU3RhdGUgPSAnJltkaXNhYmxlZF06Y2hlY2tlZCArIGRpdidcblxuY29uc3QgaGlkZGVuQ2hlY2tib3hTdHlsZSA9IHtcbiAgYm9yZGVyOiAnMCcsXG4gIGNsaXA6ICdyZWN0KDFweCwgMXB4LCAxcHgsIDFweCknLFxuICBoZWlnaHQ6ICcxJyxcbiAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICBwYWRkaW5nOiAnMCcsXG4gIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcbiAgd2lkdGg6ICcxJyxcbiAgb3BhY2l0eTogJzAnXG59XG5cbmNvbnN0IFN3aXRjaEFwcGVhcmFuY2VzID0ge1xuICBkZWZhdWx0OiB7XG4gICAgLi4uaGlkZGVuQ2hlY2tib3hTdHlsZSxcbiAgICAnJiArIGRpdiA+IHN2Zyc6IHtcbiAgICAgIGRpc3BsYXk6ICdub25lJ1xuICAgIH0sXG4gICAgJyYgKyBkaXYnOiB7XG4gICAgICB0cmFuc2l0aW9uOiAnYWxsIDIwMG1zIGVhc2UtaW4tb3V0JyxcbiAgICAgIGN1cnNvcjogJ3BvaW50ZXInLFxuICAgICAgY29sb3I6ICd3aGl0ZScsXG4gICAgICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogY29sb3JzLm5ldXRyYWxbJzEwMEEnXSxcbiAgICAgIGJvcmRlclJhZGl1czogOTk5OSxcbiAgICAgIGJveFNoYWRvdzogYGluc2V0IDAgMCAwIDFweCAke1xuICAgICAgICBjb2xvcnMubmV1dHJhbFsnMjBBJ11cbiAgICAgIH0sIGluc2V0IDAgLTFweCAxcHggMCAke2NvbG9ycy5uZXV0cmFsWycxMEEnXX1gXG4gICAgfSxcbiAgICBbZGlzYWJsZWRTdGF0ZV06IHtcbiAgICAgIGN1cnNvcjogJ25vdC1hbGxvd2VkJyxcbiAgICAgIGJveFNoYWRvdzogYGluc2V0IDAgMCAwIDFweCAke2NvbG9ycy5uZXV0cmFsWycyMEEnXX1gLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMubmV1dHJhbFsnMzBBJ10sXG4gICAgICBiYWNrZ3JvdW5kSW1hZ2U6ICdub25lJ1xuICAgIH0sXG4gICAgW2hvdmVyU3RhdGVdOiB7XG4gICAgICBiYWNrZ3JvdW5kSW1hZ2U6IGBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAke2NvbG9ycy5uZXV0cmFsWyc3QSddfSwgJHtcbiAgICAgICAgY29sb3JzLm5ldXRyYWxbJzNBJ11cbiAgICAgIH0gKWAsXG4gICAgICBib3hTaGFkb3c6IGBpbnNldCAwIDAgMCAxcHggJHtcbiAgICAgICAgY29sb3JzLm5ldXRyYWxbJzQwQSddXG4gICAgICB9LCBpbnNldCAwIC0xcHggMXB4IDAgJHtjb2xvcnMubmV1dHJhbFsnMTVBJ119YFxuICAgIH0sXG4gICAgW2ZvY3VzU3RhdGVdOiB7XG4gICAgICBib3hTaGFkb3c6IGAwIDAgMCAzcHggJHtjb2xvcnMuYmx1ZVsnMjBBJ119LCBpbnNldCAwIDAgMCAxcHggJHtcbiAgICAgICAgY29sb3JzLm5ldXRyYWxbJzcwQSddXG4gICAgICB9LCBpbnNldCAwIC0xcHggMXB4IDAgJHtjb2xvcnMubmV1dHJhbFsnMTBBJ119YFxuICAgIH0sXG4gICAgW2FjdGl2ZVN0YXRlXToge1xuICAgICAgYmFja2dyb3VuZEltYWdlOiAnbm9uZScsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IGNvbG9ycy5uZXV0cmFsWycyMDBBJ11cbiAgICAgIC8vIEJveFNoYWRvdzogYGluc2V0IDAgMCAwIDFweCAke2NvbG9ycy5ibHVlWyc4MEEnXX1gLFxuICAgIH0sXG4gICAgW2NoZWNrZWRTdGF0ZV06IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogY29sb3JzLmJsdWVbJzUwMCddLFxuICAgICAgY29sb3I6ICd3aGl0ZScsXG4gICAgICBiYWNrZ3JvdW5kSW1hZ2U6IGBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAke2NvbG9ycy5ibHVlWyc1MDAnXX0sICR7XG4gICAgICAgIGNvbG9ycy5ibHVlWyc2MDAnXVxuICAgICAgfSlgLFxuICAgICAgYm94U2hhZG93OiBgaW5zZXQgMCAwIDAgMXB4ICR7XG4gICAgICAgIGNvbG9ycy5uZXV0cmFsWyczMEEnXVxuICAgICAgfSwgaW5zZXQgMCAtMXB4IDFweCAwICR7Y29sb3JzLm5ldXRyYWxbJzMwQSddfWAsXG4gICAgICAnJiA+IHN2Zyc6IHtcbiAgICAgICAgZGlzcGxheTogJ2Jsb2NrJ1xuICAgICAgfVxuICAgIH0sXG4gICAgW2NoZWNrZWREaXNhYmxlZFN0YXRlXToge1xuICAgICAgY29sb3I6ICd3aGl0ZScsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScsXG4gICAgICBiYWNrZ3JvdW5kSW1hZ2U6IGBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAke2NvbG9ycy5uZXV0cmFsWyczMDAnXX0sICR7XG4gICAgICAgIGNvbG9ycy5uZXV0cmFsWyc0MDAnXVxuICAgICAgfSlgLFxuICAgICAgYm94U2hhZG93OiBgaW5zZXQgMCAwIDAgMXB4ICR7XG4gICAgICAgIGNvbG9ycy5uZXV0cmFsWycyMEEnXVxuICAgICAgfSwgaW5zZXQgMCAtMXB4IDFweCAwICR7Y29sb3JzLm5ldXRyYWxbJzEwQSddfWAsXG4gICAgICAnJiA+IHN2Zyc6IHtcbiAgICAgICAgZGlzcGxheTogJ2Jsb2NrJ1xuICAgICAgfVxuICAgIH0sXG4gICAgW2NoZWNrZWRBY3RpdmVTdGF0ZV06IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogY29sb3JzLmJsdWVbJzUwMCddLFxuICAgICAgY29sb3I6ICd3aGl0ZScsXG4gICAgICBiYWNrZ3JvdW5kSW1hZ2U6IGBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAke2NvbG9ycy5ibHVlWyc4MDAnXX0sICR7XG4gICAgICAgIGNvbG9ycy5ibHVlWyc5MDAnXVxuICAgICAgfSlgLFxuICAgICAgYm94U2hhZG93OiBgaW5zZXQgMCAwIDAgMXB4ICR7XG4gICAgICAgIGNvbG9ycy5uZXV0cmFsWyczMEEnXVxuICAgICAgfSwgaW5zZXQgMCAtMXB4IDFweCAwICR7Y29sb3JzLm5ldXRyYWxbJzMwQSddfWAsXG4gICAgICAnJiA+IHN2Zyc6IHtcbiAgICAgICAgZGlzcGxheTogJ2Jsb2NrJ1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBTd2l0Y2hBcHBlYXJhbmNlc1xuIl19