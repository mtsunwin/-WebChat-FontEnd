'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Transition = require('react-transition-group/Transition');

var _Transition2 = _interopRequireDefault(_Transition);

var _portal = require('../../portal');

var _getPosition2 = require('./getPosition');

var _getPosition3 = _interopRequireDefault(_getPosition2);

var _Position = require('./Position');

var _Position2 = _interopRequireDefault(_Position);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var animationEasing = {
  spring: 'cubic-bezier(0.175, 0.885, 0.320, 1.175)'
};

var initialState = function initialState() {
  return {
    top: null,
    left: null,
    transformOrigin: null
  };
};

var getCSS = function getCSS(_ref) {
  var initialScale = _ref.initialScale,
      animationDuration = _ref.animationDuration;
  return {
    position: 'fixed',
    opacity: 0,
    transitionTimingFunction: animationEasing.spring,
    transitionDuration: animationDuration + 'ms',
    transitionProperty: 'opacity, transform',
    transform: 'scale(' + initialScale + ') translateY(-1px)',
    '&[data-state="entering"], &[data-state="entered"]': {
      opacity: 1,
      visibility: 'visible',
      transform: 'scale(1)'
    },
    '&[data-state="exiting"]': {
      opacity: 0,
      transform: 'scale(1)'
    }
  };
};

var Positioner = function (_PureComponent) {
  _inherits(Positioner, _PureComponent);

  function Positioner(props, context) {
    _classCallCheck(this, Positioner);

    var _this = _possibleConstructorReturn(this, (Positioner.__proto__ || Object.getPrototypeOf(Positioner)).call(this, props, context));

    _this.getTargetRef = function (ref) {
      _this.targetRef = ref;
    };

    _this.getRef = function (ref) {
      _this.positionerRef = ref;
      _this.props.innerRef(ref);
    };

    _this.handleEnter = function () {
      _this.update();
    };

    _this.getTargetRect = function () {
      return _this.targetRef.getBoundingClientRect();
    };

    _this.update = function () {
      if (!_this.props.isShown || !_this.targetRef || !_this.positionerRef) return;

      var targetRect = _this.getTargetRect();
      var viewportHeight = document.documentElement.clientHeight + window.scrollY;
      var viewportWidth = document.documentElement.clientWidth + window.scrollX;

      var _getPosition = (0, _getPosition3.default)({
        position: _this.props.position,
        targetRect: targetRect,
        targetOffset: _this.props.targetOffset,
        dimensions: {
          height: _this.positionerRef.offsetHeight,
          width: _this.positionerRef.offsetWidth
        },
        viewport: {
          width: viewportWidth,
          height: viewportHeight
        },
        viewportOffset: _this.props.bodyOffset
      }),
          rect = _getPosition.rect,
          transformOrigin = _getPosition.transformOrigin;

      _this.setState({
        left: rect.left,
        top: rect.top,
        transformOrigin: transformOrigin
      }, function () {
        window.requestAnimationFrame(function () {
          _this.update();
        });
      });
    };

    _this.handleExited = function () {
      _this.setState(function () {
        return _extends({}, initialState());
      }, function () {
        _this.props.onCloseComplete();
      });
    };

    _this.state = initialState();
    return _this;
  }

  _createClass(Positioner, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          zIndex = _props.zIndex,
          target = _props.target,
          isShown = _props.isShown,
          children = _props.children,
          initialScale = _props.initialScale,
          targetOffset = _props.targetOffset,
          animationDuration = _props.animationDuration;
      var _state = this.state,
          left = _state.left,
          top = _state.top,
          transformOrigin = _state.transformOrigin;


      return _react2.default.createElement(
        _react2.default.Fragment,
        null,
        target({ getRef: this.getTargetRef, isShown: isShown }),
        _react2.default.createElement(
          _portal.Portal,
          null,
          _react2.default.createElement(
            _Transition2.default,
            {
              'in': isShown,
              timeout: animationDuration,
              onEnter: this.handleEnter,
              onEntered: this.props.onOpenComplete,
              onExited: this.handleExited,
              unmountOnExit: true
            },
            function (state) {
              return children({
                top: top,
                left: left,
                state: state,
                zIndex: zIndex,
                css: getCSS({ targetOffset: targetOffset, initialScale: initialScale, animationDuration: animationDuration }),
                style: {
                  transformOrigin: transformOrigin,
                  left: left,
                  top: top,
                  zIndex: zIndex
                },
                getRef: _this2.getRef,
                animationDuration: animationDuration
              });
            }
          )
        )
      );
    }
  }]);

  return Positioner;
}(_react.PureComponent);

Positioner.propTypes = {
  /**
   * The position the element that is being positioned is on.
   * Smart positioning might override this.
   */
  position: _propTypes2.default.oneOf(Object.keys(_Position2.default)).isRequired,

  /**
   * When true, show the element being positioned.
   */
  isShown: _propTypes2.default.bool,

  /**
   * Function that returns the element being positioned.
   */
  children: _propTypes2.default.func.isRequired,

  /**
   * Function that returns the ref of the element being positioned.
   */
  innerRef: _propTypes2.default.func.isRequired,

  /**
   * The minimum distance from the body to the element being positioned.
   */
  bodyOffset: _propTypes2.default.number.isRequired,

  /**
   * The minimum distance from the target to the element being positioned.
   */
  targetOffset: _propTypes2.default.number.isRequired,

  /**
   * Function that should return a node for the target.
   * ({ getRef: () -> Ref, isShown: Bool }) -> React Node
   */
  target: _propTypes2.default.func.isRequired,

  /**
   * The z-index of the element being positioned.
   */
  zIndex: _propTypes2.default.number.isRequired,

  /**
   * Initial scale of the element being positioned.
   */
  initialScale: _propTypes2.default.number.isRequired,

  /**
   * Duration of the animation.
   */
  animationDuration: _propTypes2.default.number.isRequired,

  /**
   * Function that will be called when the exit transition is complete.
   */
  onCloseComplete: _propTypes2.default.func.isRequired,

  /**
   * Function that will be called when the enter transition is complete.
   */
  onOpenComplete: _propTypes2.default.func.isRequired
};
Positioner.defaultProps = {
  position: _Position2.default.BOTTOM,
  zIndex: 40,
  bodyOffset: 6,
  targetOffset: 6,
  initialScale: 0.9,
  animationDuration: 300,
  innerRef: function innerRef() {},
  onOpenComplete: function onOpenComplete() {},
  onCloseComplete: function onCloseComplete() {}
};
exports.default = Positioner;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,