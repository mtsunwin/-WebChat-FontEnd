'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _glamor = require('glamor');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Transition = require('react-transition-group/Transition');

var _Transition2 = _interopRequireDefault(_Transition);

var _Alert = require('../../alert/src/Alert');

var _Alert2 = _interopRequireDefault(_Alert);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var animationEasing = {
  deceleration: 'cubic-bezier(0.0, 0.0, 0.2, 1)',
  acceleration: 'cubic-bezier(0.4, 0.0, 1, 1)',
  spring: 'cubic-bezier(0.175, 0.885, 0.320, 1.175)'
};

var ANIMATION_DURATION = 240;

var openAnimation = _glamor.css.keyframes('openAnimation', {
  from: {
    opacity: 0,
    transform: 'translateY(-120%)'
  },
  to: {
    transform: 'translateY(0)'
  }
});

var closeAnimation = _glamor.css.keyframes('closeAnimation', {
  from: {
    transform: 'scale(1)',
    opacity: 1
  },
  to: {
    transform: 'scale(0.9)',
    opacity: 0
  }
});

var animationStyles = (0, _glamor.css)({
  display: 'flex',
  flexDirection: 'column',
  alignItems: 'center',
  height: 0,
  transition: 'all ' + ANIMATION_DURATION + 'ms ' + animationEasing.deceleration,
  '&[data-state="entering"], &[data-state="entered"]': {
    animation: openAnimation + ' ' + ANIMATION_DURATION + 'ms ' + animationEasing.spring + ' both'
  },
  '&[data-state="exiting"]': {
    animation: closeAnimation + ' 120ms ' + animationEasing.acceleration + ' both'
  }
});

var Toast = function (_React$PureComponent) {
  _inherits(Toast, _React$PureComponent);

  function Toast() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Toast);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Toast.__proto__ || Object.getPrototypeOf(Toast)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      isShown: true,
      height: 0
    }, _this.close = function () {
      _this.clearCloseTimer();
      _this.setState({
        isShown: false
      });
    }, _this.startCloseTimer = function () {
      if (_this.props.duration) {
        _this.closeTimer = setTimeout(function () {
          _this.close();
        }, _this.props.duration * 1000);
      }
    }, _this.clearCloseTimer = function () {
      if (_this.closeTimer) {
        clearTimeout(_this.closeTimer);
        _this.closeTimer = null;
      }
    }, _this.handleMouseEnter = function () {
      _this.clearCloseTimer();
    }, _this.handleMouseLeave = function () {
      _this.startCloseTimer();
    }, _this.onRef = function (ref) {
      if (ref === null) return;

      var height = ref.getBoundingClientRect().height;

      _this.setState({
        height: height
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Toast, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (Object.hasOwnProperty.call(nextProps, 'isShown')) {
        this.setState({
          isShown: nextProps.isShown
        });
      }
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.startCloseTimer();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.clearCloseTimer();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        _Transition2.default,
        {
          appear: true,
          unmountOnExit: true,
          timeout: ANIMATION_DURATION,
          'in': this.state.isShown,
          onExited: this.props.onRemove
        },
        function (state) {
          return _react2.default.createElement(
            'div',
            {
              'data-state': state,
              className: animationStyles,
              onMouseEnter: _this2.handleMouseEnter,
              onMouseLeave: _this2.handleMouseLeave,
              style: {
                height: _this2.state.height,
                zIndex: _this2.props.zIndex,
                marginBottom: _this2.state.isShown ? 0 : -_this2.state.height
              }
            },
            _react2.default.createElement(
              'div',
              { ref: _this2.onRef, style: { padding: 8 } },
              _react2.default.createElement(
                _Alert2.default,
                {
                  flexShrink: 0,
                  appearance: 'card',
                  elevation: 3,
                  type: _this2.props.type,
                  title: _this2.props.title,
                  isRemoveable: _this2.props.hasCloseButton,
                  onRemove: function onRemove() {
                    return _this2.close();
                  },
                  pointerEvents: 'all'
                },
                _this2.props.children
              )
            )
          );
        }
      );
    }
  }]);

  return Toast;
}(_react2.default.PureComponent);

Toast.propTypes = {
  /**
   * The z-index of the toast.
   */
  zIndex: _propTypes2.default.number,

  /**
   * Duration of the toast.
   */
  duration: _propTypes2.default.number,

  /**
   * Function called when the toast is all the way closed.
   */
  onRemove: _propTypes2.default.func,

  /**
   * The type of the alert.
   */
  type: _propTypes2.default.oneOf(['default', 'success', 'warning', 'danger', 'question']),

  /**
   * The title of the alert.
   */
  title: _propTypes2.default.node,

  /**
   * Description of the alert.
   */
  children: _propTypes2.default.node,

  /**
   * When true, show a close icon button inside of the toast.
   */
  hasCloseButton: _propTypes2.default.bool,

  /**
   * When false, will close the Toast and call onRemove when finished.
   */
  isShown: _propTypes2.default.bool
};
exports.default = Toast;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,