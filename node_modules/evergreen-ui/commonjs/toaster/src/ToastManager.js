'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _glamor = require('glamor');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Toast = require('./Toast');

var _Toast2 = _interopRequireDefault(_Toast);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var wrapperClass = (0, _glamor.css)({
  maxWidth: 560,
  margin: '0 auto',
  top: 0,
  left: 0,
  right: 0,
  position: 'fixed',
  zIndex: 60,
  pointerEvents: 'none'
});

var ToastManager = function (_React$PureComponent) {
  _inherits(ToastManager, _React$PureComponent);

  function ToastManager(props, context) {
    _classCallCheck(this, ToastManager);

    var _this = _possibleConstructorReturn(this, (ToastManager.__proto__ || Object.getPrototypeOf(ToastManager)).call(this, props, context));

    _this.getToasts = function () {
      return _this.state.toasts;
    };

    _this.closeAll = function () {
      _this.getToasts().forEach(function (toast) {
        return toast.close();
      });
    };

    _this.notify = function (title, settings) {
      var instance = _this.createToastInstance(title, settings);

      _this.setState(function (previousState) {
        return {
          toasts: [instance].concat(_toConsumableArray(previousState.toasts))
        };
      });

      return instance;
    };

    _this.createToastInstance = function (title, settings) {
      var id = ++ToastManager.idCounter;

      return {
        id: id,
        title: title,
        description: settings.description,
        hasCloseButton: settings.hasCloseButton || true,
        duration: settings.duration || 5,
        close: function close() {
          return _this.closeToast(id);
        },
        type: settings.type
      };
    };

    _this.closeToast = function (id) {
      _this.setState(function (previousState) {
        return {
          toasts: previousState.toasts.map(function (toast) {
            if (toast.id === id) {
              return _extends({}, toast, {
                isShown: false
              });
            }
            return toast;
          })
        };
      });
    };

    _this.removeToast = function (id) {
      _this.setState(function (previousState) {
        return {
          toasts: previousState.toasts.filter(function (toast) {
            return toast.id !== id;
          })
        };
      });
    };

    props.bindNotify(_this.notify);
    props.bindGetToasts(_this.getToasts);
    props.bindCloseAll(_this.closeAll);

    _this.state = {
      toasts: []
    };
    return _this;
  }

  /**
   * This will set isShown on the Toast which will close the toast.
   * It won't remove the toast until onExited triggers onRemove.
   */


  _createClass(ToastManager, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        'span',
        { className: wrapperClass },
        this.state.toasts.map(function (_ref) {
          var id = _ref.id,
              description = _ref.description,
              props = _objectWithoutProperties(_ref, ['id', 'description']);

          return _react2.default.createElement(
            _Toast2.default,
            _extends({ key: id, onRemove: function onRemove() {
                return _this2.removeToast(id);
              } }, props),
            description
          );
        })
      );
    }
  }]);

  return ToastManager;
}(_react2.default.PureComponent);

ToastManager.propTypes = {
  /**
   * Function called with the `this.notify` function.
   */
  bindNotify: _propTypes2.default.func.isRequired,

  /**
   * Function called with the `this.getToasts` function.
   */
  bindGetToasts: _propTypes2.default.func.isRequired,

  /**
   * Function called with the `this.closeAll` function.
   */
  bindCloseAll: _propTypes2.default.func.isRequired
};
ToastManager.idCounter = 0;
exports.default = ToastManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90b2FzdGVyL3NyYy9Ub2FzdE1hbmFnZXIuanMiXSwibmFtZXMiOlsid3JhcHBlckNsYXNzIiwibWF4V2lkdGgiLCJtYXJnaW4iLCJ0b3AiLCJsZWZ0IiwicmlnaHQiLCJwb3NpdGlvbiIsInpJbmRleCIsInBvaW50ZXJFdmVudHMiLCJUb2FzdE1hbmFnZXIiLCJwcm9wcyIsImNvbnRleHQiLCJnZXRUb2FzdHMiLCJzdGF0ZSIsInRvYXN0cyIsImNsb3NlQWxsIiwiZm9yRWFjaCIsInRvYXN0IiwiY2xvc2UiLCJub3RpZnkiLCJ0aXRsZSIsInNldHRpbmdzIiwiaW5zdGFuY2UiLCJjcmVhdGVUb2FzdEluc3RhbmNlIiwic2V0U3RhdGUiLCJwcmV2aW91c1N0YXRlIiwiaWQiLCJpZENvdW50ZXIiLCJkZXNjcmlwdGlvbiIsImhhc0Nsb3NlQnV0dG9uIiwiZHVyYXRpb24iLCJjbG9zZVRvYXN0IiwidHlwZSIsIm1hcCIsImlzU2hvd24iLCJyZW1vdmVUb2FzdCIsImZpbHRlciIsImJpbmROb3RpZnkiLCJiaW5kR2V0VG9hc3RzIiwiYmluZENsb3NlQWxsIiwiUHVyZUNvbXBvbmVudCIsInByb3BUeXBlcyIsImZ1bmMiLCJpc1JlcXVpcmVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7QUFDQTs7OztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsZUFBZSxpQkFBSTtBQUN2QkMsWUFBVSxHQURhO0FBRXZCQyxVQUFRLFFBRmU7QUFHdkJDLE9BQUssQ0FIa0I7QUFJdkJDLFFBQU0sQ0FKaUI7QUFLdkJDLFNBQU8sQ0FMZ0I7QUFNdkJDLFlBQVUsT0FOYTtBQU92QkMsVUFBUSxFQVBlO0FBUXZCQyxpQkFBZTtBQVJRLENBQUosQ0FBckI7O0lBV3FCQyxZOzs7QUFvQm5CLHdCQUFZQyxLQUFaLEVBQW1CQyxPQUFuQixFQUE0QjtBQUFBOztBQUFBLDRIQUNwQkQsS0FEb0IsRUFDYkMsT0FEYTs7QUFBQSxVQVk1QkMsU0FaNEIsR0FZaEIsWUFBTTtBQUNoQixhQUFPLE1BQUtDLEtBQUwsQ0FBV0MsTUFBbEI7QUFDRCxLQWQyQjs7QUFBQSxVQWdCNUJDLFFBaEI0QixHQWdCakIsWUFBTTtBQUNmLFlBQUtILFNBQUwsR0FBaUJJLE9BQWpCLENBQXlCO0FBQUEsZUFBU0MsTUFBTUMsS0FBTixFQUFUO0FBQUEsT0FBekI7QUFDRCxLQWxCMkI7O0FBQUEsVUFvQjVCQyxNQXBCNEIsR0FvQm5CLFVBQUNDLEtBQUQsRUFBUUMsUUFBUixFQUFxQjtBQUM1QixVQUFNQyxXQUFXLE1BQUtDLG1CQUFMLENBQXlCSCxLQUF6QixFQUFnQ0MsUUFBaEMsQ0FBakI7O0FBRUEsWUFBS0csUUFBTCxDQUFjLHlCQUFpQjtBQUM3QixlQUFPO0FBQ0xWLG1CQUFTUSxRQUFULDRCQUFzQkcsY0FBY1gsTUFBcEM7QUFESyxTQUFQO0FBR0QsT0FKRDs7QUFNQSxhQUFPUSxRQUFQO0FBQ0QsS0E5QjJCOztBQUFBLFVBZ0M1QkMsbUJBaEM0QixHQWdDTixVQUFDSCxLQUFELEVBQVFDLFFBQVIsRUFBcUI7QUFDekMsVUFBTUssS0FBSyxFQUFFakIsYUFBYWtCLFNBQTFCOztBQUVBLGFBQU87QUFDTEQsY0FESztBQUVMTixvQkFGSztBQUdMUSxxQkFBYVAsU0FBU08sV0FIakI7QUFJTEMsd0JBQWdCUixTQUFTUSxjQUFULElBQTJCLElBSnRDO0FBS0xDLGtCQUFVVCxTQUFTUyxRQUFULElBQXFCLENBTDFCO0FBTUxaLGVBQU87QUFBQSxpQkFBTSxNQUFLYSxVQUFMLENBQWdCTCxFQUFoQixDQUFOO0FBQUEsU0FORjtBQU9MTSxjQUFNWCxTQUFTVztBQVBWLE9BQVA7QUFTRCxLQTVDMkI7O0FBQUEsVUFrRDVCRCxVQWxENEIsR0FrRGYsY0FBTTtBQUNqQixZQUFLUCxRQUFMLENBQWMseUJBQWlCO0FBQzdCLGVBQU87QUFDTFYsa0JBQVFXLGNBQWNYLE1BQWQsQ0FBcUJtQixHQUFyQixDQUF5QixpQkFBUztBQUN4QyxnQkFBSWhCLE1BQU1TLEVBQU4sS0FBYUEsRUFBakIsRUFBcUI7QUFDbkIsa0NBQ0tULEtBREw7QUFFRWlCLHlCQUFTO0FBRlg7QUFJRDtBQUNELG1CQUFPakIsS0FBUDtBQUNELFdBUk87QUFESCxTQUFQO0FBV0QsT0FaRDtBQWFELEtBaEUyQjs7QUFBQSxVQWtFNUJrQixXQWxFNEIsR0FrRWQsY0FBTTtBQUNsQixZQUFLWCxRQUFMLENBQWMseUJBQWlCO0FBQzdCLGVBQU87QUFDTFYsa0JBQVFXLGNBQWNYLE1BQWQsQ0FBcUJzQixNQUFyQixDQUE0QjtBQUFBLG1CQUFTbkIsTUFBTVMsRUFBTixLQUFhQSxFQUF0QjtBQUFBLFdBQTVCO0FBREgsU0FBUDtBQUdELE9BSkQ7QUFLRCxLQXhFMkI7O0FBRzFCaEIsVUFBTTJCLFVBQU4sQ0FBaUIsTUFBS2xCLE1BQXRCO0FBQ0FULFVBQU00QixhQUFOLENBQW9CLE1BQUsxQixTQUF6QjtBQUNBRixVQUFNNkIsWUFBTixDQUFtQixNQUFLeEIsUUFBeEI7O0FBRUEsVUFBS0YsS0FBTCxHQUFhO0FBQ1hDLGNBQVE7QUFERyxLQUFiO0FBUDBCO0FBVTNCOztBQW9DRDs7Ozs7Ozs7NkJBNEJTO0FBQUE7O0FBQ1AsYUFDRTtBQUFBO0FBQUEsVUFBTSxXQUFXZCxZQUFqQjtBQUNHLGFBQUthLEtBQUwsQ0FBV0MsTUFBWCxDQUFrQm1CLEdBQWxCLENBQXNCLGdCQUFtQztBQUFBLGNBQWhDUCxFQUFnQyxRQUFoQ0EsRUFBZ0M7QUFBQSxjQUE1QkUsV0FBNEIsUUFBNUJBLFdBQTRCO0FBQUEsY0FBWmxCLEtBQVk7O0FBQ3hELGlCQUNFO0FBQUE7QUFBQSx1QkFBTyxLQUFLZ0IsRUFBWixFQUFnQixVQUFVO0FBQUEsdUJBQU0sT0FBS1MsV0FBTCxDQUFpQlQsRUFBakIsQ0FBTjtBQUFBLGVBQTFCLElBQTBEaEIsS0FBMUQ7QUFDR2tCO0FBREgsV0FERjtBQUtELFNBTkE7QUFESCxPQURGO0FBV0Q7Ozs7RUExR3VDLGdCQUFNWSxhOztBQUEzQi9CLFksQ0FDWmdDLFMsR0FBWTtBQUNqQjs7O0FBR0FKLGNBQVksb0JBQVVLLElBQVYsQ0FBZUMsVUFKVjs7QUFNakI7OztBQUdBTCxpQkFBZSxvQkFBVUksSUFBVixDQUFlQyxVQVRiOztBQVdqQjs7O0FBR0FKLGdCQUFjLG9CQUFVRyxJQUFWLENBQWVDO0FBZFosQztBQURBbEMsWSxDQWtCWmtCLFMsR0FBWSxDO2tCQWxCQWxCLFkiLCJmaWxlIjoiVG9hc3RNYW5hZ2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnZ2xhbW9yJ1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IFRvYXN0IGZyb20gJy4vVG9hc3QnXG5cbmNvbnN0IHdyYXBwZXJDbGFzcyA9IGNzcyh7XG4gIG1heFdpZHRoOiA1NjAsXG4gIG1hcmdpbjogJzAgYXV0bycsXG4gIHRvcDogMCxcbiAgbGVmdDogMCxcbiAgcmlnaHQ6IDAsXG4gIHBvc2l0aW9uOiAnZml4ZWQnLFxuICB6SW5kZXg6IDYwLFxuICBwb2ludGVyRXZlbnRzOiAnbm9uZSdcbn0pXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRvYXN0TWFuYWdlciBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIGNhbGxlZCB3aXRoIHRoZSBgdGhpcy5ub3RpZnlgIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIGJpbmROb3RpZnk6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG5cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiBjYWxsZWQgd2l0aCB0aGUgYHRoaXMuZ2V0VG9hc3RzYCBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBiaW5kR2V0VG9hc3RzOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gY2FsbGVkIHdpdGggdGhlIGB0aGlzLmNsb3NlQWxsYCBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBiaW5kQ2xvc2VBbGw6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbiAgfVxuXG4gIHN0YXRpYyBpZENvdW50ZXIgPSAwXG5cbiAgY29uc3RydWN0b3IocHJvcHMsIGNvbnRleHQpIHtcbiAgICBzdXBlcihwcm9wcywgY29udGV4dClcblxuICAgIHByb3BzLmJpbmROb3RpZnkodGhpcy5ub3RpZnkpXG4gICAgcHJvcHMuYmluZEdldFRvYXN0cyh0aGlzLmdldFRvYXN0cylcbiAgICBwcm9wcy5iaW5kQ2xvc2VBbGwodGhpcy5jbG9zZUFsbClcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICB0b2FzdHM6IFtdXG4gICAgfVxuICB9XG5cbiAgZ2V0VG9hc3RzID0gKCkgPT4ge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLnRvYXN0c1xuICB9XG5cbiAgY2xvc2VBbGwgPSAoKSA9PiB7XG4gICAgdGhpcy5nZXRUb2FzdHMoKS5mb3JFYWNoKHRvYXN0ID0+IHRvYXN0LmNsb3NlKCkpXG4gIH1cblxuICBub3RpZnkgPSAodGl0bGUsIHNldHRpbmdzKSA9PiB7XG4gICAgY29uc3QgaW5zdGFuY2UgPSB0aGlzLmNyZWF0ZVRvYXN0SW5zdGFuY2UodGl0bGUsIHNldHRpbmdzKVxuXG4gICAgdGhpcy5zZXRTdGF0ZShwcmV2aW91c1N0YXRlID0+IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHRvYXN0czogW2luc3RhbmNlLCAuLi5wcmV2aW91c1N0YXRlLnRvYXN0c11cbiAgICAgIH1cbiAgICB9KVxuXG4gICAgcmV0dXJuIGluc3RhbmNlXG4gIH1cblxuICBjcmVhdGVUb2FzdEluc3RhbmNlID0gKHRpdGxlLCBzZXR0aW5ncykgPT4ge1xuICAgIGNvbnN0IGlkID0gKytUb2FzdE1hbmFnZXIuaWRDb3VudGVyXG5cbiAgICByZXR1cm4ge1xuICAgICAgaWQsXG4gICAgICB0aXRsZSxcbiAgICAgIGRlc2NyaXB0aW9uOiBzZXR0aW5ncy5kZXNjcmlwdGlvbixcbiAgICAgIGhhc0Nsb3NlQnV0dG9uOiBzZXR0aW5ncy5oYXNDbG9zZUJ1dHRvbiB8fCB0cnVlLFxuICAgICAgZHVyYXRpb246IHNldHRpbmdzLmR1cmF0aW9uIHx8IDUsXG4gICAgICBjbG9zZTogKCkgPT4gdGhpcy5jbG9zZVRvYXN0KGlkKSxcbiAgICAgIHR5cGU6IHNldHRpbmdzLnR5cGVcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogVGhpcyB3aWxsIHNldCBpc1Nob3duIG9uIHRoZSBUb2FzdCB3aGljaCB3aWxsIGNsb3NlIHRoZSB0b2FzdC5cbiAgICogSXQgd29uJ3QgcmVtb3ZlIHRoZSB0b2FzdCB1bnRpbCBvbkV4aXRlZCB0cmlnZ2VycyBvblJlbW92ZS5cbiAgICovXG4gIGNsb3NlVG9hc3QgPSBpZCA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZShwcmV2aW91c1N0YXRlID0+IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHRvYXN0czogcHJldmlvdXNTdGF0ZS50b2FzdHMubWFwKHRvYXN0ID0+IHtcbiAgICAgICAgICBpZiAodG9hc3QuaWQgPT09IGlkKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAuLi50b2FzdCxcbiAgICAgICAgICAgICAgaXNTaG93bjogZmFsc2VcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHRvYXN0XG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIHJlbW92ZVRvYXN0ID0gaWQgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUocHJldmlvdXNTdGF0ZSA9PiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0b2FzdHM6IHByZXZpb3VzU3RhdGUudG9hc3RzLmZpbHRlcih0b2FzdCA9PiB0b2FzdC5pZCAhPT0gaWQpXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPHNwYW4gY2xhc3NOYW1lPXt3cmFwcGVyQ2xhc3N9PlxuICAgICAgICB7dGhpcy5zdGF0ZS50b2FzdHMubWFwKCh7IGlkLCBkZXNjcmlwdGlvbiwgLi4ucHJvcHMgfSkgPT4ge1xuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8VG9hc3Qga2V5PXtpZH0gb25SZW1vdmU9eygpID0+IHRoaXMucmVtb3ZlVG9hc3QoaWQpfSB7Li4ucHJvcHN9PlxuICAgICAgICAgICAgICB7ZGVzY3JpcHRpb259XG4gICAgICAgICAgICA8L1RvYXN0PlxuICAgICAgICAgIClcbiAgICAgICAgfSl9XG4gICAgICA8L3NwYW4+XG4gICAgKVxuICB9XG59XG4iXX0=