'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uiBox = require('ui-box');

var _uiBox2 = _interopRequireDefault(_uiBox);

var _FontFamilies = require('./styles/FontFamilies');

var _FontFamilies2 = _interopRequireDefault(_FontFamilies);

var _TextStyles = require('./styles/TextStyles');

var _TextStyles2 = _interopRequireDefault(_TextStyles);

var _TextUppercaseStyles = require('./styles/TextUppercaseStyles');

var _TextUppercaseStyles2 = _interopRequireDefault(_TextUppercaseStyles);

var _TextColors = require('./styles/TextColors');

var _TextColors2 = _interopRequireDefault(_TextColors);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var isDev = process.env.NODE_ENV === 'development' || !process.env.NODE_ENV;

var Text = function (_PureComponent) {
  _inherits(Text, _PureComponent);

  function Text() {
    _classCallCheck(this, Text);

    return _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).apply(this, arguments));
  }

  _createClass(Text, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          size = _props.size,
          color = _props.color,
          textStyles = _props.textStyles,
          textUppercaseStyles = _props.textUppercaseStyles,
          fontFamily = _props.fontFamily,
          isUppercase = _props.isUppercase,
          props = _objectWithoutProperties(_props, ['size', 'color', 'textStyles', 'textUppercaseStyles', 'fontFamily', 'isUppercase']);

      var textStyle = textStyles[size];

      if (isUppercase) {
        // Only 100 and 200 support uppercase styles atm
        // Fallback on non uppercase atm
        if (Object.prototype.hasOwnProperty.call(textUppercaseStyles, size)) {
          textStyle = textUppercaseStyles[size];
        } else if (isDev) {
          console.error('Uppercase ' + size + ' not supported. <Text isUppercase> only supports the following sizes: ' + JSON.stringify(Object.keys(textUppercaseStyles).map(Number)));
        }
      }

      return _react2.default.createElement(_uiBox2.default, _extends({
        is: 'span'
      }, color ? { color: _TextColors2.default[color] || color } : {}, {
        fontFamily: _FontFamilies2.default[fontFamily] || fontFamily
      }, textStyle, props));
    }
  }]);

  return Text;
}(_react.PureComponent);

Text.propTypes = _extends({}, _uiBox2.default.propTypes, {

  /**
   * Size of the text style.
   * Can be: 100, 200, 300, 400, 500, 600, 700, 800, 900.
   */
  size: _propTypes2.default.oneOf(Object.keys(_TextStyles2.default).map(Number)),

  /**
   * Font family.
   * Can be: ui, display or mono
   */
  fontFamily: _propTypes2.default.oneOf(Object.keys(_FontFamilies2.default)),

  /**
   * Sets the text to uppercase.
   * Only sizes 100 and 200 support uppercase styles at the moment.
   */
  isUppercase: _propTypes2.default.bool,

  /**
   * The text styles available.
   * This is overridden by other text components that implement Text as the base.
   * You should avoid setting this manually.
   */
  textStyles: _propTypes2.default.object,

  /**
   * The uppercase text styles.
   * You should avoid setting this manually.
   */
  textUppercaseStyles: _propTypes2.default.object
});
Text.defaultProps = {
  size: 500,
  color: 'default',
  fontFamily: 'ui',
  textStyles: _TextStyles2.default,
  textUppercaseStyles: _TextUppercaseStyles2.default
};
exports.default = Text;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90eXBvZ3JhcGh5L3NyYy9UZXh0LmpzIl0sIm5hbWVzIjpbImlzRGV2IiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwiVGV4dCIsInByb3BzIiwic2l6ZSIsImNvbG9yIiwidGV4dFN0eWxlcyIsInRleHRVcHBlcmNhc2VTdHlsZXMiLCJmb250RmFtaWx5IiwiaXNVcHBlcmNhc2UiLCJ0ZXh0U3R5bGUiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJjb25zb2xlIiwiZXJyb3IiLCJKU09OIiwic3RyaW5naWZ5Iiwia2V5cyIsIm1hcCIsIk51bWJlciIsInByb3BUeXBlcyIsIm9uZU9mIiwiYm9vbCIsIm9iamVjdCIsImRlZmF1bHRQcm9wcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLFFBQVFDLFFBQVFDLEdBQVIsQ0FBWUMsUUFBWixLQUF5QixhQUF6QixJQUEwQyxDQUFDRixRQUFRQyxHQUFSLENBQVlDLFFBQXJFOztJQUVxQkMsSTs7Ozs7Ozs7Ozs7NkJBK0NWO0FBQUEsbUJBU0gsS0FBS0MsS0FURjtBQUFBLFVBRUxDLElBRkssVUFFTEEsSUFGSztBQUFBLFVBR0xDLEtBSEssVUFHTEEsS0FISztBQUFBLFVBSUxDLFVBSkssVUFJTEEsVUFKSztBQUFBLFVBS0xDLG1CQUxLLFVBS0xBLG1CQUxLO0FBQUEsVUFNTEMsVUFOSyxVQU1MQSxVQU5LO0FBQUEsVUFPTEMsV0FQSyxVQU9MQSxXQVBLO0FBQUEsVUFRRk4sS0FSRTs7QUFXUCxVQUFJTyxZQUFZSixXQUFXRixJQUFYLENBQWhCOztBQUVBLFVBQUlLLFdBQUosRUFBaUI7QUFDZjtBQUNBO0FBQ0EsWUFBSUUsT0FBT0MsU0FBUCxDQUFpQkMsY0FBakIsQ0FBZ0NDLElBQWhDLENBQXFDUCxtQkFBckMsRUFBMERILElBQTFELENBQUosRUFBcUU7QUFDbkVNLHNCQUFZSCxvQkFBb0JILElBQXBCLENBQVo7QUFDRCxTQUZELE1BRU8sSUFBSU4sS0FBSixFQUFXO0FBQ2hCaUIsa0JBQVFDLEtBQVIsZ0JBQ2VaLElBRGYsOEVBQzRGYSxLQUFLQyxTQUFMLENBQ3hGUCxPQUFPUSxJQUFQLENBQVlaLG1CQUFaLEVBQWlDYSxHQUFqQyxDQUFxQ0MsTUFBckMsQ0FEd0YsQ0FENUY7QUFLRDtBQUNGOztBQUVELGFBQ0U7QUFDRSxZQUFHO0FBREwsU0FFT2hCLFFBQVEsRUFBRUEsT0FBTyxxQkFBV0EsS0FBWCxLQUFxQkEsS0FBOUIsRUFBUixHQUFnRCxFQUZ2RDtBQUdFLG9CQUFZLHVCQUFhRyxVQUFiLEtBQTRCQTtBQUgxQyxTQUlNRSxTQUpOLEVBS01QLEtBTE4sRUFERjtBQVNEOzs7Ozs7QUFuRmtCRCxJLENBQ1pvQixTLGdCQUlGLGdCQUFJQSxTOztBQUVQOzs7O0FBSUFsQixRQUFNLG9CQUFVbUIsS0FBVixDQUFnQlosT0FBT1EsSUFBUCx1QkFBd0JDLEdBQXhCLENBQTRCQyxNQUE1QixDQUFoQixDOztBQUVOOzs7O0FBSUFiLGNBQVksb0JBQVVlLEtBQVYsQ0FBZ0JaLE9BQU9RLElBQVAsd0JBQWhCLEM7O0FBRVo7Ozs7QUFJQVYsZUFBYSxvQkFBVWUsSTs7QUFFdkI7Ozs7O0FBS0FsQixjQUFZLG9CQUFVbUIsTTs7QUFFdEI7Ozs7QUFJQWxCLHVCQUFxQixvQkFBVWtCOztBQXBDZHZCLEksQ0F1Q1p3QixZLEdBQWU7QUFDcEJ0QixRQUFNLEdBRGM7QUFFcEJDLFNBQU8sU0FGYTtBQUdwQkcsY0FBWSxJQUhRO0FBSXBCRixrQ0FKb0I7QUFLcEJDO0FBTG9CLEM7a0JBdkNITCxJIiwiZmlsZSI6IlRleHQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUHVyZUNvbXBvbmVudCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IEJveCBmcm9tICd1aS1ib3gnXG5pbXBvcnQgRm9udEZhbWlsaWVzIGZyb20gJy4vc3R5bGVzL0ZvbnRGYW1pbGllcydcbmltcG9ydCBUZXh0U3R5bGVzIGZyb20gJy4vc3R5bGVzL1RleHRTdHlsZXMnXG5pbXBvcnQgVGV4dFVwcGVyY2FzZVN0eWxlcyBmcm9tICcuL3N0eWxlcy9UZXh0VXBwZXJjYXNlU3R5bGVzJ1xuaW1wb3J0IFRleHRDb2xvcnMgZnJvbSAnLi9zdHlsZXMvVGV4dENvbG9ycydcblxuY29uc3QgaXNEZXYgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JyB8fCAhcHJvY2Vzcy5lbnYuTk9ERV9FTlZcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGV4dCBleHRlbmRzIFB1cmVDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIC8qKlxuICAgICAqIENvbXBvc2VzIHRoZSBCb3ggY29tcG9uZW50IGFzIHRoZSBiYXNlLlxuICAgICAqL1xuICAgIC4uLkJveC5wcm9wVHlwZXMsXG5cbiAgICAvKipcbiAgICAgKiBTaXplIG9mIHRoZSB0ZXh0IHN0eWxlLlxuICAgICAqIENhbiBiZTogMTAwLCAyMDAsIDMwMCwgNDAwLCA1MDAsIDYwMCwgNzAwLCA4MDAsIDkwMC5cbiAgICAgKi9cbiAgICBzaXplOiBQcm9wVHlwZXMub25lT2YoT2JqZWN0LmtleXMoVGV4dFN0eWxlcykubWFwKE51bWJlcikpLFxuXG4gICAgLyoqXG4gICAgICogRm9udCBmYW1pbHkuXG4gICAgICogQ2FuIGJlOiB1aSwgZGlzcGxheSBvciBtb25vXG4gICAgICovXG4gICAgZm9udEZhbWlseTogUHJvcFR5cGVzLm9uZU9mKE9iamVjdC5rZXlzKEZvbnRGYW1pbGllcykpLFxuXG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgdGV4dCB0byB1cHBlcmNhc2UuXG4gICAgICogT25seSBzaXplcyAxMDAgYW5kIDIwMCBzdXBwb3J0IHVwcGVyY2FzZSBzdHlsZXMgYXQgdGhlIG1vbWVudC5cbiAgICAgKi9cbiAgICBpc1VwcGVyY2FzZTogUHJvcFR5cGVzLmJvb2wsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgdGV4dCBzdHlsZXMgYXZhaWxhYmxlLlxuICAgICAqIFRoaXMgaXMgb3ZlcnJpZGRlbiBieSBvdGhlciB0ZXh0IGNvbXBvbmVudHMgdGhhdCBpbXBsZW1lbnQgVGV4dCBhcyB0aGUgYmFzZS5cbiAgICAgKiBZb3Ugc2hvdWxkIGF2b2lkIHNldHRpbmcgdGhpcyBtYW51YWxseS5cbiAgICAgKi9cbiAgICB0ZXh0U3R5bGVzOiBQcm9wVHlwZXMub2JqZWN0LFxuXG4gICAgLyoqXG4gICAgICogVGhlIHVwcGVyY2FzZSB0ZXh0IHN0eWxlcy5cbiAgICAgKiBZb3Ugc2hvdWxkIGF2b2lkIHNldHRpbmcgdGhpcyBtYW51YWxseS5cbiAgICAgKi9cbiAgICB0ZXh0VXBwZXJjYXNlU3R5bGVzOiBQcm9wVHlwZXMub2JqZWN0XG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIHNpemU6IDUwMCxcbiAgICBjb2xvcjogJ2RlZmF1bHQnLFxuICAgIGZvbnRGYW1pbHk6ICd1aScsXG4gICAgdGV4dFN0eWxlczogVGV4dFN0eWxlcyxcbiAgICB0ZXh0VXBwZXJjYXNlU3R5bGVzOiBUZXh0VXBwZXJjYXNlU3R5bGVzXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3Qge1xuICAgICAgc2l6ZSxcbiAgICAgIGNvbG9yLFxuICAgICAgdGV4dFN0eWxlcyxcbiAgICAgIHRleHRVcHBlcmNhc2VTdHlsZXMsXG4gICAgICBmb250RmFtaWx5LFxuICAgICAgaXNVcHBlcmNhc2UsXG4gICAgICAuLi5wcm9wc1xuICAgIH0gPSB0aGlzLnByb3BzXG5cbiAgICBsZXQgdGV4dFN0eWxlID0gdGV4dFN0eWxlc1tzaXplXVxuXG4gICAgaWYgKGlzVXBwZXJjYXNlKSB7XG4gICAgICAvLyBPbmx5IDEwMCBhbmQgMjAwIHN1cHBvcnQgdXBwZXJjYXNlIHN0eWxlcyBhdG1cbiAgICAgIC8vIEZhbGxiYWNrIG9uIG5vbiB1cHBlcmNhc2UgYXRtXG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRleHRVcHBlcmNhc2VTdHlsZXMsIHNpemUpKSB7XG4gICAgICAgIHRleHRTdHlsZSA9IHRleHRVcHBlcmNhc2VTdHlsZXNbc2l6ZV1cbiAgICAgIH0gZWxzZSBpZiAoaXNEZXYpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgICBgVXBwZXJjYXNlICR7c2l6ZX0gbm90IHN1cHBvcnRlZC4gPFRleHQgaXNVcHBlcmNhc2U+IG9ubHkgc3VwcG9ydHMgdGhlIGZvbGxvd2luZyBzaXplczogJHtKU09OLnN0cmluZ2lmeShcbiAgICAgICAgICAgIE9iamVjdC5rZXlzKHRleHRVcHBlcmNhc2VTdHlsZXMpLm1hcChOdW1iZXIpXG4gICAgICAgICAgKX1gXG4gICAgICAgIClcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgPEJveFxuICAgICAgICBpcz1cInNwYW5cIlxuICAgICAgICB7Li4uKGNvbG9yID8geyBjb2xvcjogVGV4dENvbG9yc1tjb2xvcl0gfHwgY29sb3IgfSA6IHt9KX1cbiAgICAgICAgZm9udEZhbWlseT17Rm9udEZhbWlsaWVzW2ZvbnRGYW1pbHldIHx8IGZvbnRGYW1pbHl9XG4gICAgICAgIHsuLi50ZXh0U3R5bGV9XG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgIC8+XG4gICAgKVxuICB9XG59XG4iXX0=