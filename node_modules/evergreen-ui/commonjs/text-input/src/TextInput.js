'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _typography = require('../../typography');

var _sharedStyles = require('../../shared-styles');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TextInput = function (_PureComponent) {
  _inherits(TextInput, _PureComponent);

  function TextInput() {
    _classCallCheck(this, TextInput);

    return _possibleConstructorReturn(this, (TextInput.__proto__ || Object.getPrototypeOf(TextInput)).apply(this, arguments));
  }

  _createClass(TextInput, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          css = _props.css,
          width = _props.width,
          height = _props.height,
          disabled = _props.disabled,
          required = _props.required,
          isInvalid = _props.isInvalid,
          appearance = _props.appearance,
          placeholder = _props.placeholder,
          spellCheck = _props.spellCheck,
          props = _objectWithoutProperties(_props, ['css', 'width', 'height', 'disabled', 'required', 'isInvalid', 'appearance', 'placeholder', 'spellCheck']);

      var appearanceStyle = _sharedStyles.InputAppearances[appearance];
      var textStyle = (0, _sharedStyles.getTextStyleForControlHeight)({ height: height });
      var borderRadius = (0, _sharedStyles.getBorderRadiusForControlHeight)({ height: height });

      return _react2.default.createElement(_typography.Text, _extends({
        is: 'input',
        type: 'text',
        width: width,
        height: height,
        required: required,
        disabled: disabled,
        placeholder: placeholder,
        paddingLeft: Math.round(height / 3.2),
        paddingRight: Math.round(height / 3.2),
        borderRadius: borderRadius,
        spellCheck: spellCheck,
        'aria-invalid': isInvalid
      }, disabled ? { color: 'extraMuted' } : {}, textStyle, {
        css: _extends({}, css, appearanceStyle)
      }, props));
    }
  }]);

  return TextInput;
}(_react.PureComponent);

TextInput.propTypes = _extends({}, _typography.Text.propTypes, {

  /**
   * Makes the input element required.
   */
  required: _propTypes2.default.bool,

  /**
   * Makes the input element disabled.
   */
  disabled: _propTypes2.default.bool,

  /**
   * Sets visual styling to be invalid.
   */
  isInvalid: _propTypes2.default.bool,

  /**
   * Use the native spell check functionality of the browser.
   */
  spellCheck: _propTypes2.default.bool,

  /**
   * The placeholder text when there is no value present.
   */
  placeholder: _propTypes2.default.string,

  /**
   * The appearance of the TextInput.
   */
  appearance: _propTypes2.default.oneOf(Object.keys(_sharedStyles.InputAppearances)),

  /**
   * The width of the TextInput.
   */
  width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
});
TextInput.defaultProps = {
  appearance: 'default',
  height: 32,
  width: 280,
  disabled: false,
  isInvalid: false,
  spellCheck: true
};
exports.default = TextInput;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90ZXh0LWlucHV0L3NyYy9UZXh0SW5wdXQuanMiXSwibmFtZXMiOlsiVGV4dElucHV0IiwicHJvcHMiLCJjc3MiLCJ3aWR0aCIsImhlaWdodCIsImRpc2FibGVkIiwicmVxdWlyZWQiLCJpc0ludmFsaWQiLCJhcHBlYXJhbmNlIiwicGxhY2Vob2xkZXIiLCJzcGVsbENoZWNrIiwiYXBwZWFyYW5jZVN0eWxlIiwidGV4dFN0eWxlIiwiYm9yZGVyUmFkaXVzIiwiTWF0aCIsInJvdW5kIiwiY29sb3IiLCJwcm9wVHlwZXMiLCJib29sIiwic3RyaW5nIiwib25lT2YiLCJPYmplY3QiLCJrZXlzIiwib25lT2ZUeXBlIiwibnVtYmVyIiwiZGVmYXVsdFByb3BzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7SUFNcUJBLFM7Ozs7Ozs7Ozs7OzZCQW9EVjtBQUFBLG1CQVlILEtBQUtDLEtBWkY7QUFBQSxVQUVMQyxHQUZLLFVBRUxBLEdBRks7QUFBQSxVQUdMQyxLQUhLLFVBR0xBLEtBSEs7QUFBQSxVQUlMQyxNQUpLLFVBSUxBLE1BSks7QUFBQSxVQUtMQyxRQUxLLFVBS0xBLFFBTEs7QUFBQSxVQU1MQyxRQU5LLFVBTUxBLFFBTks7QUFBQSxVQU9MQyxTQVBLLFVBT0xBLFNBUEs7QUFBQSxVQVFMQyxVQVJLLFVBUUxBLFVBUks7QUFBQSxVQVNMQyxXQVRLLFVBU0xBLFdBVEs7QUFBQSxVQVVMQyxVQVZLLFVBVUxBLFVBVks7QUFBQSxVQVdGVCxLQVhFOztBQWFQLFVBQU1VLGtCQUFrQiwrQkFBaUJILFVBQWpCLENBQXhCO0FBQ0EsVUFBTUksWUFBWSxnREFBNkIsRUFBRVIsY0FBRixFQUE3QixDQUFsQjtBQUNBLFVBQU1TLGVBQWUsbURBQWdDLEVBQUVULGNBQUYsRUFBaEMsQ0FBckI7O0FBRUEsYUFDRTtBQUNFLFlBQUcsT0FETDtBQUVFLGNBQUssTUFGUDtBQUdFLGVBQU9ELEtBSFQ7QUFJRSxnQkFBUUMsTUFKVjtBQUtFLGtCQUFVRSxRQUxaO0FBTUUsa0JBQVVELFFBTlo7QUFPRSxxQkFBYUksV0FQZjtBQVFFLHFCQUFhSyxLQUFLQyxLQUFMLENBQVdYLFNBQVMsR0FBcEIsQ0FSZjtBQVNFLHNCQUFjVSxLQUFLQyxLQUFMLENBQVdYLFNBQVMsR0FBcEIsQ0FUaEI7QUFVRSxzQkFBY1MsWUFWaEI7QUFXRSxvQkFBWUgsVUFYZDtBQVlFLHdCQUFjSDtBQVpoQixTQWFPRixXQUFXLEVBQUVXLE9BQU8sWUFBVCxFQUFYLEdBQXFDLEVBYjVDLEVBY01KLFNBZE47QUFlRSwwQkFBVVYsR0FBVixFQUFrQlMsZUFBbEI7QUFmRixTQWdCTVYsS0FoQk4sRUFERjtBQW9CRDs7Ozs7O0FBekZrQkQsUyxDQUNaaUIsUyxnQkFJRixpQkFBS0EsUzs7QUFFUjs7O0FBR0FYLFlBQVUsb0JBQVVZLEk7O0FBRXBCOzs7QUFHQWIsWUFBVSxvQkFBVWEsSTs7QUFFcEI7OztBQUdBWCxhQUFXLG9CQUFVVyxJOztBQUVyQjs7O0FBR0FSLGNBQVksb0JBQVVRLEk7O0FBRXRCOzs7QUFHQVQsZUFBYSxvQkFBVVUsTTs7QUFFdkI7OztBQUdBWCxjQUFZLG9CQUFVWSxLQUFWLENBQWdCQyxPQUFPQyxJQUFQLGdDQUFoQixDOztBQUVaOzs7QUFHQW5CLFNBQU8sb0JBQVVvQixTQUFWLENBQW9CLENBQUMsb0JBQVVKLE1BQVgsRUFBbUIsb0JBQVVLLE1BQTdCLENBQXBCOztBQXhDVXhCLFMsQ0EyQ1p5QixZLEdBQWU7QUFDcEJqQixjQUFZLFNBRFE7QUFFcEJKLFVBQVEsRUFGWTtBQUdwQkQsU0FBTyxHQUhhO0FBSXBCRSxZQUFVLEtBSlU7QUFLcEJFLGFBQVcsS0FMUztBQU1wQkcsY0FBWTtBQU5RLEM7a0JBM0NIVixTIiwiZmlsZSI6IlRleHRJbnB1dC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnLi4vLi4vdHlwb2dyYXBoeSdcbmltcG9ydCB7XG4gIGdldEJvcmRlclJhZGl1c0ZvckNvbnRyb2xIZWlnaHQsXG4gIGdldFRleHRTdHlsZUZvckNvbnRyb2xIZWlnaHQsXG4gIElucHV0QXBwZWFyYW5jZXNcbn0gZnJvbSAnLi4vLi4vc2hhcmVkLXN0eWxlcydcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGV4dElucHV0IGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogQ29tcG9zZXMgdGhlIFRleHQgY29tcG9uZW50IGFzIHRoZSBiYXNlLlxuICAgICAqL1xuICAgIC4uLlRleHQucHJvcFR5cGVzLFxuXG4gICAgLyoqXG4gICAgICogTWFrZXMgdGhlIGlucHV0IGVsZW1lbnQgcmVxdWlyZWQuXG4gICAgICovXG4gICAgcmVxdWlyZWQ6IFByb3BUeXBlcy5ib29sLFxuXG4gICAgLyoqXG4gICAgICogTWFrZXMgdGhlIGlucHV0IGVsZW1lbnQgZGlzYWJsZWQuXG4gICAgICovXG4gICAgZGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuXG4gICAgLyoqXG4gICAgICogU2V0cyB2aXN1YWwgc3R5bGluZyB0byBiZSBpbnZhbGlkLlxuICAgICAqL1xuICAgIGlzSW52YWxpZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgICAvKipcbiAgICAgKiBVc2UgdGhlIG5hdGl2ZSBzcGVsbCBjaGVjayBmdW5jdGlvbmFsaXR5IG9mIHRoZSBicm93c2VyLlxuICAgICAqL1xuICAgIHNwZWxsQ2hlY2s6IFByb3BUeXBlcy5ib29sLFxuXG4gICAgLyoqXG4gICAgICogVGhlIHBsYWNlaG9sZGVyIHRleHQgd2hlbiB0aGVyZSBpcyBubyB2YWx1ZSBwcmVzZW50LlxuICAgICAqL1xuICAgIHBsYWNlaG9sZGVyOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gICAgLyoqXG4gICAgICogVGhlIGFwcGVhcmFuY2Ugb2YgdGhlIFRleHRJbnB1dC5cbiAgICAgKi9cbiAgICBhcHBlYXJhbmNlOiBQcm9wVHlwZXMub25lT2YoT2JqZWN0LmtleXMoSW5wdXRBcHBlYXJhbmNlcykpLFxuXG4gICAgLyoqXG4gICAgICogVGhlIHdpZHRoIG9mIHRoZSBUZXh0SW5wdXQuXG4gICAgICovXG4gICAgd2lkdGg6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXJdKVxuICB9XG5cbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBhcHBlYXJhbmNlOiAnZGVmYXVsdCcsXG4gICAgaGVpZ2h0OiAzMixcbiAgICB3aWR0aDogMjgwLFxuICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICBpc0ludmFsaWQ6IGZhbHNlLFxuICAgIHNwZWxsQ2hlY2s6IHRydWVcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7XG4gICAgICBjc3MsXG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodCxcbiAgICAgIGRpc2FibGVkLFxuICAgICAgcmVxdWlyZWQsXG4gICAgICBpc0ludmFsaWQsXG4gICAgICBhcHBlYXJhbmNlLFxuICAgICAgcGxhY2Vob2xkZXIsXG4gICAgICBzcGVsbENoZWNrLFxuICAgICAgLi4ucHJvcHNcbiAgICB9ID0gdGhpcy5wcm9wc1xuICAgIGNvbnN0IGFwcGVhcmFuY2VTdHlsZSA9IElucHV0QXBwZWFyYW5jZXNbYXBwZWFyYW5jZV1cbiAgICBjb25zdCB0ZXh0U3R5bGUgPSBnZXRUZXh0U3R5bGVGb3JDb250cm9sSGVpZ2h0KHsgaGVpZ2h0IH0pXG4gICAgY29uc3QgYm9yZGVyUmFkaXVzID0gZ2V0Qm9yZGVyUmFkaXVzRm9yQ29udHJvbEhlaWdodCh7IGhlaWdodCB9KVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxUZXh0XG4gICAgICAgIGlzPVwiaW5wdXRcIlxuICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgIHdpZHRoPXt3aWR0aH1cbiAgICAgICAgaGVpZ2h0PXtoZWlnaHR9XG4gICAgICAgIHJlcXVpcmVkPXtyZXF1aXJlZH1cbiAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxuICAgICAgICBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJ9XG4gICAgICAgIHBhZGRpbmdMZWZ0PXtNYXRoLnJvdW5kKGhlaWdodCAvIDMuMil9XG4gICAgICAgIHBhZGRpbmdSaWdodD17TWF0aC5yb3VuZChoZWlnaHQgLyAzLjIpfVxuICAgICAgICBib3JkZXJSYWRpdXM9e2JvcmRlclJhZGl1c31cbiAgICAgICAgc3BlbGxDaGVjaz17c3BlbGxDaGVja31cbiAgICAgICAgYXJpYS1pbnZhbGlkPXtpc0ludmFsaWR9XG4gICAgICAgIHsuLi4oZGlzYWJsZWQgPyB7IGNvbG9yOiAnZXh0cmFNdXRlZCcgfSA6IHt9KX1cbiAgICAgICAgey4uLnRleHRTdHlsZX1cbiAgICAgICAgY3NzPXt7IC4uLmNzcywgLi4uYXBwZWFyYW5jZVN0eWxlIH19XG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgIC8+XG4gICAgKVxuICB9XG59XG4iXX0=