'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _colors = require('../../../colors');

var InputAppearances = {
  default: {
    WebkitAppearance: 'none',
    border: 'none',
    backgroundColor: 'white',
    boxShadow: 'inset 0 0 0 1px ' + _colors.colors.neutral['30A'] + ', inset 0 1px 2px ' + _colors.colors.neutral['20A'],
    '&[aria-invalid="true"]': {
      boxShadow: 'inset 0 0 0 1px ' + _colors.colors.red['500'] + ', inset 0 1px 1px ' + _colors.colors.neutral['40A']
    },
    '&::placeholder': {
      color: _colors.colors.neutral['100A']
    },
    '&:focus': {
      zIndex: 2,
      outline: 'none',
      boxShadow: 'inset 0 0 2px ' + _colors.colors.neutral['40A'] + ', inset 0 0 0 1px ' + _colors.colors.blue['150A'] + ', 0 0 0 3px ' + _colors.colors.blue['15A']
    },
    '&:disabled': {
      cursor: 'not-allowed',
      boxShadow: 'inset 0 0 0 1px ' + _colors.colors.neutral['20A'],
      backgroundColor: _colors.colors.neutral['5A']
    }
  },
  neutral: {
    WebkitAppearance: 'none',
    border: 'none',
    backgroundColor: _colors.colors.neutral['10A'],
    '&[aria-invalid="true"]': {
      boxShadow: 'inset 0 0 0 1px ' + _colors.colors.red['500']
    },
    '&::placeholder': {
      color: _colors.colors.neutral['200A']
    },
    '&:focus': {
      outline: 'none',
      boxShadow: '0 0 0 2px ' + _colors.colors.blue['150A']
    },
    '&:disabled': {
      cursor: 'not-allowed',
      boxShadow: 'inset 0 0 0 1px ' + _colors.colors.neutral['20A'],
      backgroundColor: _colors.colors.neutral['5A']
    }
  }
};

exports.default = InputAppearances;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zaGFyZWQtc3R5bGVzL3NyYy9zdHlsZXMvSW5wdXRBcHBlYXJhbmNlcy5qcyJdLCJuYW1lcyI6WyJJbnB1dEFwcGVhcmFuY2VzIiwiZGVmYXVsdCIsIldlYmtpdEFwcGVhcmFuY2UiLCJib3JkZXIiLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3hTaGFkb3ciLCJuZXV0cmFsIiwicmVkIiwiY29sb3IiLCJ6SW5kZXgiLCJvdXRsaW5lIiwiYmx1ZSIsImN1cnNvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBRUEsSUFBTUEsbUJBQW1CO0FBQ3ZCQyxXQUFTO0FBQ1BDLHNCQUFrQixNQURYO0FBRVBDLFlBQVEsTUFGRDtBQUdQQyxxQkFBaUIsT0FIVjtBQUlQQyxvQ0FBOEIsZUFBT0MsT0FBUCxDQUFlLEtBQWYsQ0FBOUIsMEJBQ0UsZUFBT0EsT0FBUCxDQUFlLEtBQWYsQ0FMSztBQU9QLDhCQUEwQjtBQUN4QkQsc0NBQThCLGVBQU9FLEdBQVAsQ0FBVyxLQUFYLENBQTlCLDBCQUNFLGVBQU9ELE9BQVAsQ0FBZSxLQUFmO0FBRnNCLEtBUG5CO0FBWVAsc0JBQWtCO0FBQ2hCRSxhQUFPLGVBQU9GLE9BQVAsQ0FBZSxNQUFmO0FBRFMsS0FaWDtBQWVQLGVBQVc7QUFDVEcsY0FBUSxDQURDO0FBRVRDLGVBQVMsTUFGQTtBQUdUTCxvQ0FBNEIsZUFBT0MsT0FBUCxDQUFlLEtBQWYsQ0FBNUIsMEJBQ0UsZUFBT0ssSUFBUCxDQUFZLE1BQVosQ0FERixvQkFFZSxlQUFPQSxJQUFQLENBQVksS0FBWjtBQUxOLEtBZko7QUFzQlAsa0JBQWM7QUFDWkMsY0FBUSxhQURJO0FBRVpQLHNDQUE4QixlQUFPQyxPQUFQLENBQWUsS0FBZixDQUZsQjtBQUdaRix1QkFBaUIsZUFBT0UsT0FBUCxDQUFlLElBQWY7QUFITDtBQXRCUCxHQURjO0FBNkJ2QkEsV0FBUztBQUNQSixzQkFBa0IsTUFEWDtBQUVQQyxZQUFRLE1BRkQ7QUFHUEMscUJBQWlCLGVBQU9FLE9BQVAsQ0FBZSxLQUFmLENBSFY7QUFJUCw4QkFBMEI7QUFDeEJELHNDQUE4QixlQUFPRSxHQUFQLENBQVcsS0FBWDtBQUROLEtBSm5CO0FBT1Asc0JBQWtCO0FBQ2hCQyxhQUFPLGVBQU9GLE9BQVAsQ0FBZSxNQUFmO0FBRFMsS0FQWDtBQVVQLGVBQVc7QUFDVEksZUFBUyxNQURBO0FBRVRMLGdDQUF3QixlQUFPTSxJQUFQLENBQVksTUFBWjtBQUZmLEtBVko7QUFjUCxrQkFBYztBQUNaQyxjQUFRLGFBREk7QUFFWlAsc0NBQThCLGVBQU9DLE9BQVAsQ0FBZSxLQUFmLENBRmxCO0FBR1pGLHVCQUFpQixlQUFPRSxPQUFQLENBQWUsSUFBZjtBQUhMO0FBZFA7QUE3QmMsQ0FBekI7O2tCQW1EZU4sZ0IiLCJmaWxlIjoiSW5wdXRBcHBlYXJhbmNlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbG9ycyB9IGZyb20gJy4uLy4uLy4uL2NvbG9ycydcblxuY29uc3QgSW5wdXRBcHBlYXJhbmNlcyA9IHtcbiAgZGVmYXVsdDoge1xuICAgIFdlYmtpdEFwcGVhcmFuY2U6ICdub25lJyxcbiAgICBib3JkZXI6ICdub25lJyxcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScsXG4gICAgYm94U2hhZG93OiBgaW5zZXQgMCAwIDAgMXB4ICR7Y29sb3JzLm5ldXRyYWxbJzMwQSddfSwgaW5zZXQgMCAxcHggMnB4ICR7XG4gICAgICBjb2xvcnMubmV1dHJhbFsnMjBBJ11cbiAgICB9YCxcbiAgICAnJlthcmlhLWludmFsaWQ9XCJ0cnVlXCJdJzoge1xuICAgICAgYm94U2hhZG93OiBgaW5zZXQgMCAwIDAgMXB4ICR7Y29sb3JzLnJlZFsnNTAwJ119LCBpbnNldCAwIDFweCAxcHggJHtcbiAgICAgICAgY29sb3JzLm5ldXRyYWxbJzQwQSddXG4gICAgICB9YFxuICAgIH0sXG4gICAgJyY6OnBsYWNlaG9sZGVyJzoge1xuICAgICAgY29sb3I6IGNvbG9ycy5uZXV0cmFsWycxMDBBJ11cbiAgICB9LFxuICAgICcmOmZvY3VzJzoge1xuICAgICAgekluZGV4OiAyLFxuICAgICAgb3V0bGluZTogJ25vbmUnLFxuICAgICAgYm94U2hhZG93OiBgaW5zZXQgMCAwIDJweCAke2NvbG9ycy5uZXV0cmFsWyc0MEEnXX0sIGluc2V0IDAgMCAwIDFweCAke1xuICAgICAgICBjb2xvcnMuYmx1ZVsnMTUwQSddXG4gICAgICB9LCAwIDAgMCAzcHggJHtjb2xvcnMuYmx1ZVsnMTVBJ119YFxuICAgIH0sXG4gICAgJyY6ZGlzYWJsZWQnOiB7XG4gICAgICBjdXJzb3I6ICdub3QtYWxsb3dlZCcsXG4gICAgICBib3hTaGFkb3c6IGBpbnNldCAwIDAgMCAxcHggJHtjb2xvcnMubmV1dHJhbFsnMjBBJ119YCxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogY29sb3JzLm5ldXRyYWxbJzVBJ11cbiAgICB9XG4gIH0sXG4gIG5ldXRyYWw6IHtcbiAgICBXZWJraXRBcHBlYXJhbmNlOiAnbm9uZScsXG4gICAgYm9yZGVyOiAnbm9uZScsXG4gICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMubmV1dHJhbFsnMTBBJ10sXG4gICAgJyZbYXJpYS1pbnZhbGlkPVwidHJ1ZVwiXSc6IHtcbiAgICAgIGJveFNoYWRvdzogYGluc2V0IDAgMCAwIDFweCAke2NvbG9ycy5yZWRbJzUwMCddfWBcbiAgICB9LFxuICAgICcmOjpwbGFjZWhvbGRlcic6IHtcbiAgICAgIGNvbG9yOiBjb2xvcnMubmV1dHJhbFsnMjAwQSddXG4gICAgfSxcbiAgICAnJjpmb2N1cyc6IHtcbiAgICAgIG91dGxpbmU6ICdub25lJyxcbiAgICAgIGJveFNoYWRvdzogYDAgMCAwIDJweCAke2NvbG9ycy5ibHVlWycxNTBBJ119YFxuICAgIH0sXG4gICAgJyY6ZGlzYWJsZWQnOiB7XG4gICAgICBjdXJzb3I6ICdub3QtYWxsb3dlZCcsXG4gICAgICBib3hTaGFkb3c6IGBpbnNldCAwIDAgMCAxcHggJHtjb2xvcnMubmV1dHJhbFsnMjBBJ119YCxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogY29sb3JzLm5ldXRyYWxbJzVBJ11cbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgSW5wdXRBcHBlYXJhbmNlc1xuIl19