'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _colors = require('../../../colors');

var _controlBaseStyle = require('./controlBaseStyle');

var _controlBaseStyle2 = _interopRequireDefault(_controlBaseStyle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var disabledState = '&[disabled] + div';
var hoverState = '&:not([disabled]):hover + div';
var focusState = '&:not([disabled]):focus + div';
var activeState = '&:not([disabled]):active + div';
var checkedState = '&:checked + div';
var checkedActiveState = '&:not([disabled]):checked:active + div';
var checkedDisabledState = '&[disabled]:checked + div';

var hiddenCheckboxStyle = {
  border: '0',
  clip: 'rect(1px, 1px, 1px, 1px)',
  height: '1',
  overflow: 'hidden',
  padding: '0',
  position: 'absolute',
  whiteSpace: 'nowrap',
  width: '1',
  opacity: '0'
};

var CheckboxAppearances = {
  default: _extends({}, hiddenCheckboxStyle, (_extends2 = {
    '& + div > svg': {
      display: 'none'
    },
    '& + div': _extends({}, _controlBaseStyle2.default, {
      color: 'white',
      backgroundColor: 'white',
      backgroundImage: 'linear-gradient(to top, ' + _colors.colors.neutral['5A'] + ', white)',
      boxShadow: 'inset 0 0 0 1px ' + _colors.colors.neutral['20A'] + ', inset 0 -1px 1px 0 ' + _colors.colors.neutral['10A']
    })
  }, _defineProperty(_extends2, disabledState, {
    cursor: 'not-allowed',
    boxShadow: 'inset 0 0 0 1px ' + _colors.colors.neutral['20A'],
    backgroundColor: _colors.colors.neutral['5A'],
    backgroundImage: 'none'
  }), _defineProperty(_extends2, hoverState, {
    backgroundImage: 'linear-gradient(to top, ' + _colors.colors.neutral['7A'] + ', ' + _colors.colors.neutral['3A'] + ' )',
    boxShadow: 'inset 0 0 0 1px ' + _colors.colors.neutral['40A'] + ', inset 0 -1px 1px 0 ' + _colors.colors.neutral['15A']
  }), _defineProperty(_extends2, focusState, {
    boxShadow: '0 0 0 2px ' + _colors.colors.blue['20A'] + ', inset 0 0 0 1px ' + _colors.colors.neutral['70A'] + ', inset 0 -1px 1px 0 ' + _colors.colors.neutral['10A']
  }), _defineProperty(_extends2, activeState, {
    color: _colors.colors.blue['1000'],
    backgroundImage: 'none',
    backgroundColor: _colors.colors.blue['10A'],
    boxShadow: 'inset 0 0 0 1px ' + _colors.colors.blue['80A']
  }), _defineProperty(_extends2, checkedState, {
    backgroundColor: _colors.colors.blue['500'],
    color: 'white',
    backgroundImage: 'linear-gradient(to top, ' + _colors.colors.blue['600'] + ', ' + _colors.colors.blue['400'] + ')',
    boxShadow: 'inset 0 0 0 1px ' + _colors.colors.neutral['30A'] + ', inset 0 -1px 1px 0 ' + _colors.colors.neutral['30A'],
    '& > svg': {
      display: 'block'
    }
  }), _defineProperty(_extends2, checkedDisabledState, {
    color: _colors.colors.neutral['300'],
    backgroundColor: 'white',
    backgroundImage: 'linear-gradient(to top, ' + _colors.colors.neutral['5A'] + ', white)',
    boxShadow: 'inset 0 0 0 1px ' + _colors.colors.neutral['20A'] + ', inset 0 -1px 1px 0 ' + _colors.colors.neutral['10A'],
    '& > svg': {
      display: 'block'
    }
  }), _defineProperty(_extends2, checkedActiveState, {
    backgroundColor: _colors.colors.blue['500'],
    color: 'white',
    backgroundImage: 'linear-gradient(to top, ' + _colors.colors.blue['800'] + ', ' + _colors.colors.blue['900'] + ')',
    boxShadow: 'inset 0 0 0 1px ' + _colors.colors.neutral['30A'] + ', inset 0 -1px 1px 0 ' + _colors.colors.neutral['30A'],
    '& > svg': {
      display: 'block'
    }
  }), _extends2))
};

exports.default = CheckboxAppearances;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zaGFyZWQtc3R5bGVzL3NyYy9zdHlsZXMvQ2hlY2tib3hBcHBlYXJhbmNlcy5qcyJdLCJuYW1lcyI6WyJkaXNhYmxlZFN0YXRlIiwiaG92ZXJTdGF0ZSIsImZvY3VzU3RhdGUiLCJhY3RpdmVTdGF0ZSIsImNoZWNrZWRTdGF0ZSIsImNoZWNrZWRBY3RpdmVTdGF0ZSIsImNoZWNrZWREaXNhYmxlZFN0YXRlIiwiaGlkZGVuQ2hlY2tib3hTdHlsZSIsImJvcmRlciIsImNsaXAiLCJoZWlnaHQiLCJvdmVyZmxvdyIsInBhZGRpbmciLCJwb3NpdGlvbiIsIndoaXRlU3BhY2UiLCJ3aWR0aCIsIm9wYWNpdHkiLCJDaGVja2JveEFwcGVhcmFuY2VzIiwiZGVmYXVsdCIsImRpc3BsYXkiLCJjb2xvciIsImJhY2tncm91bmRDb2xvciIsImJhY2tncm91bmRJbWFnZSIsIm5ldXRyYWwiLCJib3hTaGFkb3ciLCJjdXJzb3IiLCJibHVlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7O0FBRUEsSUFBTUEsZ0JBQWdCLG1CQUF0QjtBQUNBLElBQU1DLGFBQWEsK0JBQW5CO0FBQ0EsSUFBTUMsYUFBYSwrQkFBbkI7QUFDQSxJQUFNQyxjQUFjLGdDQUFwQjtBQUNBLElBQU1DLGVBQWUsaUJBQXJCO0FBQ0EsSUFBTUMscUJBQXFCLHdDQUEzQjtBQUNBLElBQU1DLHVCQUF1QiwyQkFBN0I7O0FBRUEsSUFBTUMsc0JBQXNCO0FBQzFCQyxVQUFRLEdBRGtCO0FBRTFCQyxRQUFNLDBCQUZvQjtBQUcxQkMsVUFBUSxHQUhrQjtBQUkxQkMsWUFBVSxRQUpnQjtBQUsxQkMsV0FBUyxHQUxpQjtBQU0xQkMsWUFBVSxVQU5nQjtBQU8xQkMsY0FBWSxRQVBjO0FBUTFCQyxTQUFPLEdBUm1CO0FBUzFCQyxXQUFTO0FBVGlCLENBQTVCOztBQVlBLElBQU1DLHNCQUFzQjtBQUMxQkMsd0JBQ0tYLG1CQURMO0FBRUUscUJBQWlCO0FBQ2ZZLGVBQVM7QUFETSxLQUZuQjtBQUtFO0FBRUVDLGFBQU8sT0FGVDtBQUdFQyx1QkFBaUIsT0FIbkI7QUFJRUMsb0RBQ0UsZUFBT0MsT0FBUCxDQUFlLElBQWYsQ0FERixhQUpGO0FBT0VDLHNDQUNFLGVBQU9ELE9BQVAsQ0FBZSxLQUFmLENBREYsNkJBRXdCLGVBQU9BLE9BQVAsQ0FBZSxLQUFmO0FBVDFCO0FBTEYsZ0NBZ0JHdkIsYUFoQkgsRUFnQm1CO0FBQ2Z5QixZQUFRLGFBRE87QUFFZkQsb0NBQThCLGVBQU9ELE9BQVAsQ0FBZSxLQUFmLENBRmY7QUFHZkYscUJBQWlCLGVBQU9FLE9BQVAsQ0FBZSxJQUFmLENBSEY7QUFJZkQscUJBQWlCO0FBSkYsR0FoQm5CLDhCQXNCR3JCLFVBdEJILEVBc0JnQjtBQUNacUIsa0RBQTRDLGVBQU9DLE9BQVAsQ0FBZSxJQUFmLENBQTVDLFVBQ0UsZUFBT0EsT0FBUCxDQUFlLElBQWYsQ0FERixPQURZO0FBSVpDLG9DQUNFLGVBQU9ELE9BQVAsQ0FBZSxLQUFmLENBREYsNkJBRXdCLGVBQU9BLE9BQVAsQ0FBZSxLQUFmO0FBTlosR0F0QmhCLDhCQThCR3JCLFVBOUJILEVBOEJnQjtBQUNac0IsOEJBQXdCLGVBQU9FLElBQVAsQ0FBWSxLQUFaLENBQXhCLDBCQUNFLGVBQU9ILE9BQVAsQ0FBZSxLQUFmLENBREYsNkJBRXdCLGVBQU9BLE9BQVAsQ0FBZSxLQUFmO0FBSFosR0E5QmhCLDhCQW1DR3BCLFdBbkNILEVBbUNpQjtBQUNiaUIsV0FBTyxlQUFPTSxJQUFQLENBQVksTUFBWixDQURNO0FBRWJKLHFCQUFpQixNQUZKO0FBR2JELHFCQUFpQixlQUFPSyxJQUFQLENBQVksS0FBWixDQUhKO0FBSWJGLG9DQUE4QixlQUFPRSxJQUFQLENBQVksS0FBWjtBQUpqQixHQW5DakIsOEJBeUNHdEIsWUF6Q0gsRUF5Q2tCO0FBQ2RpQixxQkFBaUIsZUFBT0ssSUFBUCxDQUFZLEtBQVosQ0FESDtBQUVkTixXQUFPLE9BRk87QUFHZEUsa0RBQTRDLGVBQU9JLElBQVAsQ0FBWSxLQUFaLENBQTVDLFVBQ0UsZUFBT0EsSUFBUCxDQUFZLEtBQVosQ0FERixNQUhjO0FBTWRGLG9DQUNFLGVBQU9ELE9BQVAsQ0FBZSxLQUFmLENBREYsNkJBRXdCLGVBQU9BLE9BQVAsQ0FBZSxLQUFmLENBUlY7QUFTZCxlQUFXO0FBQ1RKLGVBQVM7QUFEQTtBQVRHLEdBekNsQiw4QkFzREdiLG9CQXRESCxFQXNEMEI7QUFDdEJjLFdBQU8sZUFBT0csT0FBUCxDQUFlLEtBQWYsQ0FEZTtBQUV0QkYscUJBQWlCLE9BRks7QUFHdEJDLGtEQUNFLGVBQU9DLE9BQVAsQ0FBZSxJQUFmLENBREYsYUFIc0I7QUFNdEJDLG9DQUNFLGVBQU9ELE9BQVAsQ0FBZSxLQUFmLENBREYsNkJBRXdCLGVBQU9BLE9BQVAsQ0FBZSxLQUFmLENBUkY7QUFTdEIsZUFBVztBQUNUSixlQUFTO0FBREE7QUFUVyxHQXREMUIsOEJBbUVHZCxrQkFuRUgsRUFtRXdCO0FBQ3BCZ0IscUJBQWlCLGVBQU9LLElBQVAsQ0FBWSxLQUFaLENBREc7QUFFcEJOLFdBQU8sT0FGYTtBQUdwQkUsa0RBQTRDLGVBQU9JLElBQVAsQ0FBWSxLQUFaLENBQTVDLFVBQ0UsZUFBT0EsSUFBUCxDQUFZLEtBQVosQ0FERixNQUhvQjtBQU1wQkYsb0NBQ0UsZUFBT0QsT0FBUCxDQUFlLEtBQWYsQ0FERiw2QkFFd0IsZUFBT0EsT0FBUCxDQUFlLEtBQWYsQ0FSSjtBQVNwQixlQUFXO0FBQ1RKLGVBQVM7QUFEQTtBQVRTLEdBbkV4QjtBQUQwQixDQUE1Qjs7a0JBb0ZlRixtQiIsImZpbGUiOiJDaGVja2JveEFwcGVhcmFuY2VzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29sb3JzIH0gZnJvbSAnLi4vLi4vLi4vY29sb3JzJ1xuaW1wb3J0IGJhc2VTdHlsZSBmcm9tICcuL2NvbnRyb2xCYXNlU3R5bGUnXG5cbmNvbnN0IGRpc2FibGVkU3RhdGUgPSAnJltkaXNhYmxlZF0gKyBkaXYnXG5jb25zdCBob3ZlclN0YXRlID0gJyY6bm90KFtkaXNhYmxlZF0pOmhvdmVyICsgZGl2J1xuY29uc3QgZm9jdXNTdGF0ZSA9ICcmOm5vdChbZGlzYWJsZWRdKTpmb2N1cyArIGRpdidcbmNvbnN0IGFjdGl2ZVN0YXRlID0gJyY6bm90KFtkaXNhYmxlZF0pOmFjdGl2ZSArIGRpdidcbmNvbnN0IGNoZWNrZWRTdGF0ZSA9ICcmOmNoZWNrZWQgKyBkaXYnXG5jb25zdCBjaGVja2VkQWN0aXZlU3RhdGUgPSAnJjpub3QoW2Rpc2FibGVkXSk6Y2hlY2tlZDphY3RpdmUgKyBkaXYnXG5jb25zdCBjaGVja2VkRGlzYWJsZWRTdGF0ZSA9ICcmW2Rpc2FibGVkXTpjaGVja2VkICsgZGl2J1xuXG5jb25zdCBoaWRkZW5DaGVja2JveFN0eWxlID0ge1xuICBib3JkZXI6ICcwJyxcbiAgY2xpcDogJ3JlY3QoMXB4LCAxcHgsIDFweCwgMXB4KScsXG4gIGhlaWdodDogJzEnLFxuICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gIHBhZGRpbmc6ICcwJyxcbiAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gIHdoaXRlU3BhY2U6ICdub3dyYXAnLFxuICB3aWR0aDogJzEnLFxuICBvcGFjaXR5OiAnMCdcbn1cblxuY29uc3QgQ2hlY2tib3hBcHBlYXJhbmNlcyA9IHtcbiAgZGVmYXVsdDoge1xuICAgIC4uLmhpZGRlbkNoZWNrYm94U3R5bGUsXG4gICAgJyYgKyBkaXYgPiBzdmcnOiB7XG4gICAgICBkaXNwbGF5OiAnbm9uZSdcbiAgICB9LFxuICAgICcmICsgZGl2Jzoge1xuICAgICAgLi4uYmFzZVN0eWxlLFxuICAgICAgY29sb3I6ICd3aGl0ZScsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScsXG4gICAgICBiYWNrZ3JvdW5kSW1hZ2U6IGBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAke1xuICAgICAgICBjb2xvcnMubmV1dHJhbFsnNUEnXVxuICAgICAgfSwgd2hpdGUpYCxcbiAgICAgIGJveFNoYWRvdzogYGluc2V0IDAgMCAwIDFweCAke1xuICAgICAgICBjb2xvcnMubmV1dHJhbFsnMjBBJ11cbiAgICAgIH0sIGluc2V0IDAgLTFweCAxcHggMCAke2NvbG9ycy5uZXV0cmFsWycxMEEnXX1gXG4gICAgfSxcbiAgICBbZGlzYWJsZWRTdGF0ZV06IHtcbiAgICAgIGN1cnNvcjogJ25vdC1hbGxvd2VkJyxcbiAgICAgIGJveFNoYWRvdzogYGluc2V0IDAgMCAwIDFweCAke2NvbG9ycy5uZXV0cmFsWycyMEEnXX1gLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMubmV1dHJhbFsnNUEnXSxcbiAgICAgIGJhY2tncm91bmRJbWFnZTogJ25vbmUnXG4gICAgfSxcbiAgICBbaG92ZXJTdGF0ZV06IHtcbiAgICAgIGJhY2tncm91bmRJbWFnZTogYGxpbmVhci1ncmFkaWVudCh0byB0b3AsICR7Y29sb3JzLm5ldXRyYWxbJzdBJ119LCAke1xuICAgICAgICBjb2xvcnMubmV1dHJhbFsnM0EnXVxuICAgICAgfSApYCxcbiAgICAgIGJveFNoYWRvdzogYGluc2V0IDAgMCAwIDFweCAke1xuICAgICAgICBjb2xvcnMubmV1dHJhbFsnNDBBJ11cbiAgICAgIH0sIGluc2V0IDAgLTFweCAxcHggMCAke2NvbG9ycy5uZXV0cmFsWycxNUEnXX1gXG4gICAgfSxcbiAgICBbZm9jdXNTdGF0ZV06IHtcbiAgICAgIGJveFNoYWRvdzogYDAgMCAwIDJweCAke2NvbG9ycy5ibHVlWycyMEEnXX0sIGluc2V0IDAgMCAwIDFweCAke1xuICAgICAgICBjb2xvcnMubmV1dHJhbFsnNzBBJ11cbiAgICAgIH0sIGluc2V0IDAgLTFweCAxcHggMCAke2NvbG9ycy5uZXV0cmFsWycxMEEnXX1gXG4gICAgfSxcbiAgICBbYWN0aXZlU3RhdGVdOiB7XG4gICAgICBjb2xvcjogY29sb3JzLmJsdWVbJzEwMDAnXSxcbiAgICAgIGJhY2tncm91bmRJbWFnZTogJ25vbmUnLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiBjb2xvcnMuYmx1ZVsnMTBBJ10sXG4gICAgICBib3hTaGFkb3c6IGBpbnNldCAwIDAgMCAxcHggJHtjb2xvcnMuYmx1ZVsnODBBJ119YFxuICAgIH0sXG4gICAgW2NoZWNrZWRTdGF0ZV06IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogY29sb3JzLmJsdWVbJzUwMCddLFxuICAgICAgY29sb3I6ICd3aGl0ZScsXG4gICAgICBiYWNrZ3JvdW5kSW1hZ2U6IGBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAke2NvbG9ycy5ibHVlWyc2MDAnXX0sICR7XG4gICAgICAgIGNvbG9ycy5ibHVlWyc0MDAnXVxuICAgICAgfSlgLFxuICAgICAgYm94U2hhZG93OiBgaW5zZXQgMCAwIDAgMXB4ICR7XG4gICAgICAgIGNvbG9ycy5uZXV0cmFsWyczMEEnXVxuICAgICAgfSwgaW5zZXQgMCAtMXB4IDFweCAwICR7Y29sb3JzLm5ldXRyYWxbJzMwQSddfWAsXG4gICAgICAnJiA+IHN2Zyc6IHtcbiAgICAgICAgZGlzcGxheTogJ2Jsb2NrJ1xuICAgICAgfVxuICAgIH0sXG4gICAgW2NoZWNrZWREaXNhYmxlZFN0YXRlXToge1xuICAgICAgY29sb3I6IGNvbG9ycy5uZXV0cmFsWyczMDAnXSxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ3doaXRlJyxcbiAgICAgIGJhY2tncm91bmRJbWFnZTogYGxpbmVhci1ncmFkaWVudCh0byB0b3AsICR7XG4gICAgICAgIGNvbG9ycy5uZXV0cmFsWyc1QSddXG4gICAgICB9LCB3aGl0ZSlgLFxuICAgICAgYm94U2hhZG93OiBgaW5zZXQgMCAwIDAgMXB4ICR7XG4gICAgICAgIGNvbG9ycy5uZXV0cmFsWycyMEEnXVxuICAgICAgfSwgaW5zZXQgMCAtMXB4IDFweCAwICR7Y29sb3JzLm5ldXRyYWxbJzEwQSddfWAsXG4gICAgICAnJiA+IHN2Zyc6IHtcbiAgICAgICAgZGlzcGxheTogJ2Jsb2NrJ1xuICAgICAgfVxuICAgIH0sXG4gICAgW2NoZWNrZWRBY3RpdmVTdGF0ZV06IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogY29sb3JzLmJsdWVbJzUwMCddLFxuICAgICAgY29sb3I6ICd3aGl0ZScsXG4gICAgICBiYWNrZ3JvdW5kSW1hZ2U6IGBsaW5lYXItZ3JhZGllbnQodG8gdG9wLCAke2NvbG9ycy5ibHVlWyc4MDAnXX0sICR7XG4gICAgICAgIGNvbG9ycy5ibHVlWyc5MDAnXVxuICAgICAgfSlgLFxuICAgICAgYm94U2hhZG93OiBgaW5zZXQgMCAwIDAgMXB4ICR7XG4gICAgICAgIGNvbG9ycy5uZXV0cmFsWyczMEEnXVxuICAgICAgfSwgaW5zZXQgMCAtMXB4IDFweCAwICR7Y29sb3JzLm5ldXRyYWxbJzMwQSddfWAsXG4gICAgICAnJiA+IHN2Zyc6IHtcbiAgICAgICAgZGlzcGxheTogJ2Jsb2NrJ1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDaGVja2JveEFwcGVhcmFuY2VzXG4iXX0=