'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uiBox = require('ui-box');

var _uiBox2 = _interopRequireDefault(_uiBox);

var _SwitchAppearances = require('./styles/SwitchAppearances');

var _SwitchAppearances2 = _interopRequireDefault(_SwitchAppearances);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var animationEasing = {
  spring: 'cubic-bezier(0.175, 0.885, 0.320, 1.175)'
};

var handleStyle = {
  backgroundColor: '#fff',
  borderRadius: 9999
};

var iconContainerStyle = {
  transition: 'all 500ms ' + animationEasing.spring,
  opacity: 0,
  transform: 'scale(0.0)',
  display: 'flex',
  position: 'absolute',
  alignItems: 'center',
  justifyContent: 'center',
  paddingLeft: 4,
  '&[data-checked="true"]': {
    opacity: 1,
    transform: 'scale(1)'
  }
};

var handleContainerStyle = {
  transition: 'transform 200ms ease-in-out',
  transform: 'translateX(0%)',
  '&[data-checked="true"]': {
    transform: 'translateX(50%)'
  }
};

var CheckIcon = function CheckIcon(_ref) {
  var size = _ref.size,
      _ref$fill = _ref.fill,
      fill = _ref$fill === undefined ? 'currentColor' : _ref$fill,
      props = _objectWithoutProperties(_ref, ['size', 'fill']);

  return _react2.default.createElement(
    'svg',
    _extends({ width: 10, height: size, viewBox: '0 0 10 7' }, props),
    _react2.default.createElement('path', {
      fill: fill,
      fillRule: 'evenodd',
      d: 'M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z'
    })
  );
};

CheckIcon.propTypes = {
  fill: _propTypes2.default.string,
  size: _propTypes2.default.number
};

var isControlled = function isControlled(component) {
  return {}.hasOwnProperty.call(component.props, 'checked');
};

var Switch = function (_PureComponent) {
  _inherits(Switch, _PureComponent);

  function Switch(props, context) {
    _classCallCheck(this, Switch);

    var _this = _possibleConstructorReturn(this, (Switch.__proto__ || Object.getPrototypeOf(Switch)).call(this, props, context));

    _this.handleChange = function (value) {
      if (isControlled(_this)) {
        _this.props.onChange(value);
      } else {
        _this.setState({
          checked: !_this.state.checked
        });
        _this.props.onChange(value);
      }
    };

    _this.state = {
      checked: props.checked || props.defaultChecked || false
    };
    return _this;
  }

  _createClass(Switch, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          id = _props.id,
          name = _props.name,
          height = _props.height,
          checkedProps = _props.checked,
          onChange = _props.onChange,
          disabled = _props.disabled,
          appearance = _props.appearance,
          hasCheckIcon = _props.hasCheckIcon,
          defaultChecked = _props.defaultChecked,
          props = _objectWithoutProperties(_props, ['id', 'name', 'height', 'checked', 'onChange', 'disabled', 'appearance', 'hasCheckIcon', 'defaultChecked']);

      var checked = isControlled(this) ? checkedProps : this.state.checked;
      var appearanceStyle = _SwitchAppearances2.default[appearance];

      return _react2.default.createElement(
        _uiBox2.default,
        _extends({ is: 'label', display: 'block', width: height * 2 }, props),
        _react2.default.createElement(_uiBox2.default, {
          is: 'input',
          id: id,
          name: name,
          type: 'checkbox',
          checked: checked,
          disabled: disabled,
          defaultChecked: defaultChecked,
          onChange: this.handleChange,
          css: appearanceStyle
        }),
        _react2.default.createElement(
          _uiBox2.default,
          { onClick: this.handleClick, height: height, width: height * 2 },
          _react2.default.createElement(
            _uiBox2.default,
            {
              height: height,
              width: height,
              'data-checked': checked,
              css: iconContainerStyle
            },
            hasCheckIcon && _react2.default.createElement(CheckIcon, { size: height / 2 - 3 })
          ),
          _react2.default.createElement(
            _uiBox2.default,
            {
              width: height * 2,
              display: 'flex',
              'data-checked': checked,
              css: handleContainerStyle
            },
            _react2.default.createElement(
              _uiBox2.default,
              { flex: 1, padding: 2 },
              _react2.default.createElement(_uiBox2.default, { width: height - 4, height: height - 4, css: handleStyle })
            )
          )
        )
      );
    }
  }]);

  return Switch;
}(_react.PureComponent);

Switch.propTypes = _extends({}, _uiBox.position.propTypes, _uiBox.layout.propTypes, _uiBox.spacing.propTypes, {
  id: _propTypes2.default.string,
  name: _propTypes2.default.string,
  label: _propTypes2.default.node,
  value: _propTypes2.default.string,
  height: _propTypes2.default.number,
  checked: _propTypes2.default.bool,
  onChange: _propTypes2.default.func,
  disabled: _propTypes2.default.bool,
  isInvalid: _propTypes2.default.bool,
  appearance: _propTypes2.default.oneOf(Object.keys(_SwitchAppearances2.default)),
  hasCheckIcon: _propTypes2.default.bool,
  defaultChecked: _propTypes2.default.bool
});
Switch.defaultProps = {
  height: 16,
  onChange: function onChange() {},
  appearance: 'default',
  hasCheckIcon: true
};
exports.default = Switch;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,