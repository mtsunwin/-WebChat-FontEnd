'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uiBox = require('ui-box');

var _layers = require('../../layers');

var _typography = require('../../typography');

var _Radio = require('./Radio');

var _Radio2 = _interopRequireDefault(_Radio);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var radioCount = 1; // Used for generating unique input names

var RadioGroup = function (_PureComponent) {
  _inherits(RadioGroup, _PureComponent);

  function RadioGroup(props, context) {
    _classCallCheck(this, RadioGroup);

    var _this = _possibleConstructorReturn(this, (RadioGroup.__proto__ || Object.getPrototypeOf(RadioGroup)).call(this, props, context));

    _this.handleChange = function (value) {
      // Save a render cycle when it's a controlled input
      if (!_this.props.value) {
        _this.setState({ value: value });
      }

      if (_this.props.onChange) {
        _this.props.onChange(value);
      }
    };

    _this.state = {
      value: props.defaultValue || props.options[0].value
    };

    _this.name = 'RadioGroup-' + radioCount;
    radioCount += 1;
    return _this;
  }

  _createClass(RadioGroup, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          size = _props.size,
          label = _props.label,
          defaultValue = _props.defaultValue,
          value = _props.value,
          options = _props.options,
          onChange = _props.onChange,
          isRequired = _props.isRequired,
          props = _objectWithoutProperties(_props, ['size', 'label', 'defaultValue', 'value', 'options', 'onChange', 'isRequired']);

      // Allows it to behave like a controlled input


      var selected = value || this.state.value;

      return _react2.default.createElement(
        _layers.Pane,
        _extends({ role: 'group', 'aria-label': label }, props),
        label && _react2.default.createElement(
          _typography.Text,
          {
            size: size === 12 ? 200 : 300,
            color: 'extraMuted',
            fontWeight: 500
          },
          label
        ),
        options.map(function (item) {
          return _react2.default.createElement(_Radio2.default, {
            key: item.value,
            size: size,
            name: _this2.name,
            value: item.value,
            label: item.label,
            checked: selected === item.value,
            disabled: item.isDisabled,
            onChange: function onChange() {
              return _this2.handleChange(item.value);
            },
            isRequired: isRequired
          });
        })
      );
    }
  }]);

  return RadioGroup;
}(_react.PureComponent);

RadioGroup.propTypes = _extends({}, _uiBox.spacing.propTypes, _uiBox.position.propTypes, _uiBox.layout.propTypes, _uiBox.dimensions.propTypes, {

  /**
   * The options for the radios of the Radio Group.
   */
  options: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    label: _propTypes2.default.node.isRequired,
    value: _propTypes2.default.string.isRequired,
    isDisabled: _propTypes2.default.bool
  })).isRequired,

  /**
   * The selected item value when controlled.
   */
  value: _propTypes2.default.string,

  /**
   * The default value of the Radio Group when uncontrolled.
   */
  defaultValue: _propTypes2.default.string,

  /**
   * Function called when state changes.
   */
  onChange: _propTypes2.default.func.isRequired,

  /**
   * Label to display above the radio button options.
   */
  label: _propTypes2.default.string,

  /**
   * The size of the radio circle. This also informs the text size and spacing.
   */
  size: _propTypes2.default.oneOf([12, 16]).isRequired,

  /**
   * When true, the radio get the required attribute.
   */
  isRequired: _propTypes2.default.bool.isRequired
});
RadioGroup.defaultProps = {
  options: [],
  onChange: function onChange() {},
  size: 12,
  isRequired: false
};
exports.default = RadioGroup;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yYWRpby9zcmMvUmFkaW9Hcm91cC5qcyJdLCJuYW1lcyI6WyJyYWRpb0NvdW50IiwiUmFkaW9Hcm91cCIsInByb3BzIiwiY29udGV4dCIsImhhbmRsZUNoYW5nZSIsInZhbHVlIiwic2V0U3RhdGUiLCJvbkNoYW5nZSIsInN0YXRlIiwiZGVmYXVsdFZhbHVlIiwib3B0aW9ucyIsIm5hbWUiLCJzaXplIiwibGFiZWwiLCJpc1JlcXVpcmVkIiwic2VsZWN0ZWQiLCJtYXAiLCJpdGVtIiwiaXNEaXNhYmxlZCIsInByb3BUeXBlcyIsImFycmF5T2YiLCJzaGFwZSIsIm5vZGUiLCJzdHJpbmciLCJib29sIiwiZnVuYyIsIm9uZU9mIiwiZGVmYXVsdFByb3BzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7OztBQUVBLElBQUlBLGFBQWEsQ0FBakIsQyxDQUFtQjs7SUFFRUMsVTs7O0FBMkRuQixzQkFBWUMsS0FBWixFQUFtQkMsT0FBbkIsRUFBNEI7QUFBQTs7QUFBQSx3SEFDcEJELEtBRG9CLEVBQ2JDLE9BRGE7O0FBQUEsVUFXNUJDLFlBWDRCLEdBV2IsaUJBQVM7QUFDdEI7QUFDQSxVQUFJLENBQUMsTUFBS0YsS0FBTCxDQUFXRyxLQUFoQixFQUF1QjtBQUNyQixjQUFLQyxRQUFMLENBQWMsRUFBRUQsWUFBRixFQUFkO0FBQ0Q7O0FBRUQsVUFBSSxNQUFLSCxLQUFMLENBQVdLLFFBQWYsRUFBeUI7QUFDdkIsY0FBS0wsS0FBTCxDQUFXSyxRQUFYLENBQW9CRixLQUFwQjtBQUNEO0FBQ0YsS0FwQjJCOztBQUcxQixVQUFLRyxLQUFMLEdBQWE7QUFDWEgsYUFBT0gsTUFBTU8sWUFBTixJQUFzQlAsTUFBTVEsT0FBTixDQUFjLENBQWQsRUFBaUJMO0FBRG5DLEtBQWI7O0FBSUEsVUFBS00sSUFBTCxtQkFBMEJYLFVBQTFCO0FBQ0FBLGtCQUFjLENBQWQ7QUFSMEI7QUFTM0I7Ozs7NkJBYVE7QUFBQTs7QUFBQSxtQkFVSCxLQUFLRSxLQVZGO0FBQUEsVUFFTFUsSUFGSyxVQUVMQSxJQUZLO0FBQUEsVUFHTEMsS0FISyxVQUdMQSxLQUhLO0FBQUEsVUFJTEosWUFKSyxVQUlMQSxZQUpLO0FBQUEsVUFLTEosS0FMSyxVQUtMQSxLQUxLO0FBQUEsVUFNTEssT0FOSyxVQU1MQSxPQU5LO0FBQUEsVUFPTEgsUUFQSyxVQU9MQSxRQVBLO0FBQUEsVUFRTE8sVUFSSyxVQVFMQSxVQVJLO0FBQUEsVUFTRlosS0FURTs7QUFZUDs7O0FBQ0EsVUFBTWEsV0FBV1YsU0FBUyxLQUFLRyxLQUFMLENBQVdILEtBQXJDOztBQUVBLGFBQ0U7QUFBQTtBQUFBLG1CQUFNLE1BQUssT0FBWCxFQUFtQixjQUFZUSxLQUEvQixJQUEwQ1gsS0FBMUM7QUFDR1csaUJBQ0M7QUFBQTtBQUFBO0FBQ0Usa0JBQU1ELFNBQVMsRUFBVCxHQUFjLEdBQWQsR0FBb0IsR0FENUI7QUFFRSxtQkFBTSxZQUZSO0FBR0Usd0JBQVk7QUFIZDtBQUtHQztBQUxILFNBRko7QUFVR0gsZ0JBQVFNLEdBQVIsQ0FBWTtBQUFBLGlCQUNYO0FBQ0UsaUJBQUtDLEtBQUtaLEtBRFo7QUFFRSxrQkFBTU8sSUFGUjtBQUdFLGtCQUFNLE9BQUtELElBSGI7QUFJRSxtQkFBT00sS0FBS1osS0FKZDtBQUtFLG1CQUFPWSxLQUFLSixLQUxkO0FBTUUscUJBQVNFLGFBQWFFLEtBQUtaLEtBTjdCO0FBT0Usc0JBQVVZLEtBQUtDLFVBUGpCO0FBUUUsc0JBQVU7QUFBQSxxQkFBTSxPQUFLZCxZQUFMLENBQWtCYSxLQUFLWixLQUF2QixDQUFOO0FBQUEsYUFSWjtBQVNFLHdCQUFZUztBQVRkLFlBRFc7QUFBQSxTQUFaO0FBVkgsT0FERjtBQTBCRDs7Ozs7O0FBMUhrQmIsVSxDQUNaa0IsUyxnQkFJRixlQUFRQSxTLEVBQ1IsZ0JBQVNBLFMsRUFDVCxjQUFPQSxTLEVBQ1Asa0JBQVdBLFM7O0FBRWQ7OztBQUdBVCxXQUFTLG9CQUFVVSxPQUFWLENBQ1Asb0JBQVVDLEtBQVYsQ0FBZ0I7QUFDZFIsV0FBTyxvQkFBVVMsSUFBVixDQUFlUixVQURSO0FBRWRULFdBQU8sb0JBQVVrQixNQUFWLENBQWlCVCxVQUZWO0FBR2RJLGdCQUFZLG9CQUFVTTtBQUhSLEdBQWhCLENBRE8sRUFNUFYsVTs7QUFFRjs7O0FBR0FULFNBQU8sb0JBQVVrQixNOztBQUVqQjs7O0FBR0FkLGdCQUFjLG9CQUFVYyxNOztBQUV4Qjs7O0FBR0FoQixZQUFVLG9CQUFVa0IsSUFBVixDQUFlWCxVOztBQUV6Qjs7O0FBR0FELFNBQU8sb0JBQVVVLE07O0FBRWpCOzs7QUFHQVgsUUFBTSxvQkFBVWMsS0FBVixDQUFnQixDQUFDLEVBQUQsRUFBSyxFQUFMLENBQWhCLEVBQTBCWixVOztBQUVoQzs7O0FBR0FBLGNBQVksb0JBQVVVLElBQVYsQ0FBZVY7O0FBakRWYixVLENBb0RaMEIsWSxHQUFlO0FBQ3BCakIsV0FBUyxFQURXO0FBRXBCSCxZQUFVLG9CQUFNLENBQUUsQ0FGRTtBQUdwQkssUUFBTSxFQUhjO0FBSXBCRSxjQUFZO0FBSlEsQztrQkFwREhiLFUiLCJmaWxlIjoiUmFkaW9Hcm91cC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBzcGFjaW5nLCBwb3NpdGlvbiwgbGF5b3V0LCBkaW1lbnNpb25zIH0gZnJvbSAndWktYm94J1xuaW1wb3J0IHsgUGFuZSB9IGZyb20gJy4uLy4uL2xheWVycydcbmltcG9ydCB7IFRleHQgfSBmcm9tICcuLi8uLi90eXBvZ3JhcGh5J1xuaW1wb3J0IFJhZGlvIGZyb20gJy4vUmFkaW8nXG5cbmxldCByYWRpb0NvdW50ID0gMSAvLyBVc2VkIGZvciBnZW5lcmF0aW5nIHVuaXF1ZSBpbnB1dCBuYW1lc1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSYWRpb0dyb3VwIGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLyoqXG4gICAgICogQ29tcG9zZXMgc29tZSBCb3ggQVBJcy5cbiAgICAgKi9cbiAgICAuLi5zcGFjaW5nLnByb3BUeXBlcyxcbiAgICAuLi5wb3NpdGlvbi5wcm9wVHlwZXMsXG4gICAgLi4ubGF5b3V0LnByb3BUeXBlcyxcbiAgICAuLi5kaW1lbnNpb25zLnByb3BUeXBlcyxcblxuICAgIC8qKlxuICAgICAqIFRoZSBvcHRpb25zIGZvciB0aGUgcmFkaW9zIG9mIHRoZSBSYWRpbyBHcm91cC5cbiAgICAgKi9cbiAgICBvcHRpb25zOiBQcm9wVHlwZXMuYXJyYXlPZihcbiAgICAgIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICAgIGxhYmVsOiBQcm9wVHlwZXMubm9kZS5pc1JlcXVpcmVkLFxuICAgICAgICB2YWx1ZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgICAgICBpc0Rpc2FibGVkOiBQcm9wVHlwZXMuYm9vbFxuICAgICAgfSlcbiAgICApLmlzUmVxdWlyZWQsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgc2VsZWN0ZWQgaXRlbSB2YWx1ZSB3aGVuIGNvbnRyb2xsZWQuXG4gICAgICovXG4gICAgdmFsdWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cbiAgICAvKipcbiAgICAgKiBUaGUgZGVmYXVsdCB2YWx1ZSBvZiB0aGUgUmFkaW8gR3JvdXAgd2hlbiB1bmNvbnRyb2xsZWQuXG4gICAgICovXG4gICAgZGVmYXVsdFZhbHVlOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gY2FsbGVkIHdoZW4gc3RhdGUgY2hhbmdlcy5cbiAgICAgKi9cbiAgICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcblxuICAgIC8qKlxuICAgICAqIExhYmVsIHRvIGRpc3BsYXkgYWJvdmUgdGhlIHJhZGlvIGJ1dHRvbiBvcHRpb25zLlxuICAgICAqL1xuICAgIGxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLFxuXG4gICAgLyoqXG4gICAgICogVGhlIHNpemUgb2YgdGhlIHJhZGlvIGNpcmNsZS4gVGhpcyBhbHNvIGluZm9ybXMgdGhlIHRleHQgc2l6ZSBhbmQgc3BhY2luZy5cbiAgICAgKi9cbiAgICBzaXplOiBQcm9wVHlwZXMub25lT2YoWzEyLCAxNl0pLmlzUmVxdWlyZWQsXG5cbiAgICAvKipcbiAgICAgKiBXaGVuIHRydWUsIHRoZSByYWRpbyBnZXQgdGhlIHJlcXVpcmVkIGF0dHJpYnV0ZS5cbiAgICAgKi9cbiAgICBpc1JlcXVpcmVkOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIG9wdGlvbnM6IFtdLFxuICAgIG9uQ2hhbmdlOiAoKSA9PiB7fSxcbiAgICBzaXplOiAxMixcbiAgICBpc1JlcXVpcmVkOiBmYWxzZVxuICB9XG5cbiAgY29uc3RydWN0b3IocHJvcHMsIGNvbnRleHQpIHtcbiAgICBzdXBlcihwcm9wcywgY29udGV4dClcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICB2YWx1ZTogcHJvcHMuZGVmYXVsdFZhbHVlIHx8IHByb3BzLm9wdGlvbnNbMF0udmFsdWVcbiAgICB9XG5cbiAgICB0aGlzLm5hbWUgPSBgUmFkaW9Hcm91cC0ke3JhZGlvQ291bnR9YFxuICAgIHJhZGlvQ291bnQgKz0gMVxuICB9XG5cbiAgaGFuZGxlQ2hhbmdlID0gdmFsdWUgPT4ge1xuICAgIC8vIFNhdmUgYSByZW5kZXIgY3ljbGUgd2hlbiBpdCdzIGEgY29udHJvbGxlZCBpbnB1dFxuICAgIGlmICghdGhpcy5wcm9wcy52YWx1ZSkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7IHZhbHVlIH0pXG4gICAgfVxuXG4gICAgaWYgKHRoaXMucHJvcHMub25DaGFuZ2UpIHtcbiAgICAgIHRoaXMucHJvcHMub25DaGFuZ2UodmFsdWUpXG4gICAgfVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIHNpemUsXG4gICAgICBsYWJlbCxcbiAgICAgIGRlZmF1bHRWYWx1ZSxcbiAgICAgIHZhbHVlLFxuICAgICAgb3B0aW9ucyxcbiAgICAgIG9uQ2hhbmdlLFxuICAgICAgaXNSZXF1aXJlZCxcbiAgICAgIC4uLnByb3BzXG4gICAgfSA9IHRoaXMucHJvcHNcblxuICAgIC8vIEFsbG93cyBpdCB0byBiZWhhdmUgbGlrZSBhIGNvbnRyb2xsZWQgaW5wdXRcbiAgICBjb25zdCBzZWxlY3RlZCA9IHZhbHVlIHx8IHRoaXMuc3RhdGUudmFsdWVcblxuICAgIHJldHVybiAoXG4gICAgICA8UGFuZSByb2xlPVwiZ3JvdXBcIiBhcmlhLWxhYmVsPXtsYWJlbH0gey4uLnByb3BzfT5cbiAgICAgICAge2xhYmVsICYmIChcbiAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgc2l6ZT17c2l6ZSA9PT0gMTIgPyAyMDAgOiAzMDB9XG4gICAgICAgICAgICBjb2xvcj1cImV4dHJhTXV0ZWRcIlxuICAgICAgICAgICAgZm9udFdlaWdodD17NTAwfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtsYWJlbH1cbiAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICl9XG4gICAgICAgIHtvcHRpb25zLm1hcChpdGVtID0+IChcbiAgICAgICAgICA8UmFkaW9cbiAgICAgICAgICAgIGtleT17aXRlbS52YWx1ZX1cbiAgICAgICAgICAgIHNpemU9e3NpemV9XG4gICAgICAgICAgICBuYW1lPXt0aGlzLm5hbWV9XG4gICAgICAgICAgICB2YWx1ZT17aXRlbS52YWx1ZX1cbiAgICAgICAgICAgIGxhYmVsPXtpdGVtLmxhYmVsfVxuICAgICAgICAgICAgY2hlY2tlZD17c2VsZWN0ZWQgPT09IGl0ZW0udmFsdWV9XG4gICAgICAgICAgICBkaXNhYmxlZD17aXRlbS5pc0Rpc2FibGVkfVxuICAgICAgICAgICAgb25DaGFuZ2U9eygpID0+IHRoaXMuaGFuZGxlQ2hhbmdlKGl0ZW0udmFsdWUpfVxuICAgICAgICAgICAgaXNSZXF1aXJlZD17aXNSZXF1aXJlZH1cbiAgICAgICAgICAvPlxuICAgICAgICApKX1cbiAgICAgIDwvUGFuZT5cbiAgICApXG4gIH1cbn1cbiJdfQ==